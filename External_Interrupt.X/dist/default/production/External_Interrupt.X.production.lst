

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 20 11:09:40 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4520 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _INTCON2bits	set	4081
    51  0000                     _TRISD	set	3989
    52  0000                     _TRISB	set	3987
    53  0000                     _ADCON1	set	4033
    54  0000                     _PORTD	set	3971
    55  0000                     _INTCONbits	set	4082
    56                           
    57                           ; #config settings
    58                           
    59                           	psect	cinit
    60  0000D8                     __pcinit:
    61                           	callstack 0
    62  0000D8                     start_initialization:
    63                           	callstack 0
    64  0000D8                     __initialization:
    65                           	callstack 0
    66  0000D8                     end_of_initialization:
    67                           	callstack 0
    68  0000D8                     __end_of__initialization:
    69                           	callstack 0
    70  0000D8  9007               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    71  0000DA  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    72  0000DC  0100               	movlb	0
    73  0000DE  EF45  F000         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	cstackCOMRAM
    76  000001                     __pcstackCOMRAM:
    77                           	callstack 0
    78  000001                     ??_interrupt_0:
    79  000001                     
    80                           ; 1 bytes @ 0x0
    81  000001                     	ds	2
    82  000003                     interrupt_0@i:
    83                           	callstack 0
    84                           
    85                           ; 2 bytes @ 0x2
    86  000003                     	ds	2
    87  000005                     ??_main:
    88                           
    89                           ; 1 bytes @ 0x4
    90  000005                     	ds	2
    91                           
    92 ;;
    93 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    94 ;;
    95 ;; *************** function _main *****************
    96 ;; Defined at:
    97 ;;		line 27 in file "main.c"
    98 ;; Parameters:    Size  Location     Type
    99 ;;		None
   100 ;; Auto vars:     Size  Location     Type
   101 ;;		None
   102 ;; Return value:  Size  Location     Type
   103 ;;                  1    wreg      void 
   104 ;; Registers used:
   105 ;;		wreg, status,2
   106 ;; Tracked objects:
   107 ;;		On entry : 0/0
   108 ;;		On exit  : 0/0
   109 ;;		Unchanged: 0/0
   110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   111 ;;      Params:         0       0       0       0       0       0       0
   112 ;;      Locals:         0       0       0       0       0       0       0
   113 ;;      Temps:          2       0       0       0       0       0       0
   114 ;;      Totals:         2       0       0       0       0       0       0
   115 ;;Total ram usage:        2 bytes
   116 ;; Hardware stack levels required when called: 1
   117 ;; This function calls:
   118 ;;		Nothing
   119 ;; This function is called by:
   120 ;;		Startup code after reset
   121 ;; This function uses a non-reentrant model
   122 ;;
   123                           
   124                           	psect	text0
   125  00008A                     __ptext0:
   126                           	callstack 0
   127  00008A                     _main:
   128                           	callstack 30
   129  00008A                     
   130                           ;main.c: 29:     ADCON1 = 0X0f;
   131  00008A  0E0F               	movlw	15
   132  00008C  6EC1               	movwf	193,c	;volatile
   133                           
   134                           ;main.c: 30:     TRISB = 0x03;
   135  00008E  0E03               	movlw	3
   136  000090  6E93               	movwf	147,c	;volatile
   137                           
   138                           ;main.c: 31:     TRISD = 0x00;
   139  000092  0E00               	movlw	0
   140  000094  6E95               	movwf	149,c	;volatile
   141  000096                     
   142                           ;main.c: 32:     INTCONbits.GIE = 1;
   143  000096  8EF2               	bsf	242,7,c	;volatile
   144  000098                     
   145                           ;main.c: 33:     INTCONbits.INT0IE = 1;
   146  000098  88F2               	bsf	242,4,c	;volatile
   147  00009A                     
   148                           ;main.c: 34:     INTCON2bits.INTEDG0 = 0;
   149  00009A  9CF1               	bcf	241,6,c	;volatile
   150  00009C                     
   151                           ;main.c: 35:     (INTCONbits.GIE = 1);
   152  00009C  8EF2               	bsf	242,7,c	;volatile
   153  00009E                     l27:
   154                           
   155                           ;main.c: 37:     {;main.c: 38:     PORTD = 0x00;
   156  00009E  0E00               	movlw	0
   157  0000A0  6E83               	movwf	131,c	;volatile
   158  0000A2                     
   159                           ;main.c: 39:     _delay((unsigned long)((500)*(8000000/4000.0)));
   160  0000A2  0E06               	movlw	6
   161  0000A4  6E06               	movwf	(??_main+1)^0,c
   162  0000A6  0E13               	movlw	19
   163  0000A8  6E05               	movwf	??_main^0,c
   164  0000AA  0EAE               	movlw	174
   165  0000AC                     u47:
   166  0000AC  2EE8               	decfsz	wreg,f,c
   167  0000AE  D7FE               	bra	u47
   168  0000B0  2E05               	decfsz	??_main^0,f,c
   169  0000B2  D7FC               	bra	u47
   170  0000B4  2E06               	decfsz	(??_main+1)^0,f,c
   171  0000B6  D7FA               	bra	u47
   172  0000B8                     
   173                           ;main.c: 40:     PORTD = 0xff;
   174  0000B8  6883               	setf	131,c	;volatile
   175  0000BA                     
   176                           ;main.c: 41:     _delay((unsigned long)((500)*(8000000/4000.0)));
   177  0000BA  0E06               	movlw	6
   178  0000BC  6E06               	movwf	(??_main+1)^0,c
   179  0000BE  0E13               	movlw	19
   180  0000C0  6E05               	movwf	??_main^0,c
   181  0000C2  0EAE               	movlw	174
   182  0000C4                     u57:
   183  0000C4  2EE8               	decfsz	wreg,f,c
   184  0000C6  D7FE               	bra	u57
   185  0000C8  2E05               	decfsz	??_main^0,f,c
   186  0000CA  D7FC               	bra	u57
   187  0000CC  2E06               	decfsz	(??_main+1)^0,f,c
   188  0000CE  D7FA               	bra	u57
   189  0000D0  EF4F  F000         	goto	l27
   190  0000D4  EF07  F000         	goto	start
   191  0000D8                     __end_of_main:
   192                           	callstack 0
   193                           
   194 ;; *************** function _interrupt_0 *****************
   195 ;; Defined at:
   196 ;;		line 14 in file "main.c"
   197 ;; Parameters:    Size  Location     Type
   198 ;;		None
   199 ;; Auto vars:     Size  Location     Type
   200 ;;  i               2    2[COMRAM] int 
   201 ;; Return value:  Size  Location     Type
   202 ;;                  1    wreg      void 
   203 ;; Registers used:
   204 ;;		wreg, status,2, status,0
   205 ;; Tracked objects:
   206 ;;		On entry : 0/0
   207 ;;		On exit  : 0/0
   208 ;;		Unchanged: 0/0
   209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   210 ;;      Params:         0       0       0       0       0       0       0
   211 ;;      Locals:         2       0       0       0       0       0       0
   212 ;;      Temps:          2       0       0       0       0       0       0
   213 ;;      Totals:         4       0       0       0       0       0       0
   214 ;;Total ram usage:        4 bytes
   215 ;; Hardware stack levels used: 1
   216 ;; This function calls:
   217 ;;		Nothing
   218 ;; This function is called by:
   219 ;;		Interrupt level 2
   220 ;; This function uses a non-reentrant model
   221 ;;
   222                           
   223                           	psect	intcode
   224  000008                     __pintcode:
   225                           	callstack 0
   226  000008                     _interrupt_0:
   227                           	callstack 30
   228                           
   229                           ;incstack = 0
   230  000008  8207               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   231  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   232                           
   233                           	psect	intcode_body
   234  000012                     __pintcode_body:
   235                           	callstack 30
   236  000012                     int_func:
   237                           	callstack 30
   238  000012  0006               	pop		; remove dummy address from shadow register refresh
   239  000014                     
   240                           ;main.c: 16:     if(INTCONbits.INT0IF ==1)
   241  000014  A2F2               	btfss	242,1,c	;volatile
   242  000016  EF0F  F000         	goto	i2u1_41
   243  00001A  EF11  F000         	goto	i2u1_40
   244  00001E                     i2u1_41:
   245  00001E  EF43  F000         	goto	i2l22
   246  000022                     i2u1_40:
   247  000022                     
   248                           ;main.c: 17:     {;main.c: 18:         for(int i = 0 ;i<8;i++)
   249  000022  0E00               	movlw	0
   250  000024  6E04               	movwf	(interrupt_0@i+1)^0,c
   251  000026  0E00               	movlw	0
   252  000028  6E03               	movwf	interrupt_0@i^0,c
   253  00002A                     i2l710:
   254  00002A  BE04               	btfsc	(interrupt_0@i+1)^0,7,c
   255  00002C  EF21  F000         	goto	i2u2_41
   256  000030  5004               	movf	(interrupt_0@i+1)^0,w,c
   257  000032  E109               	bnz	i2u2_40
   258  000034  0E08               	movlw	8
   259  000036  5C03               	subwf	interrupt_0@i^0,w,c
   260  000038  A0D8               	btfss	status,0,c
   261  00003A  EF21  F000         	goto	i2u2_41
   262  00003E  EF23  F000         	goto	i2u2_40
   263  000042                     i2u2_41:
   264  000042  EF25  F000         	goto	i2l714
   265  000046                     i2u2_40:
   266  000046  EF42  F000         	goto	i2l21
   267  00004A                     i2l714:
   268                           
   269                           ;main.c: 19:         {;main.c: 20:             PORTD = 0x01<<i;
   270  00004A  C003  F001         	movff	interrupt_0@i,??_interrupt_0
   271  00004E  0E01               	movlw	1
   272  000050  6E02               	movwf	(??_interrupt_0+1)^0,c
   273  000052  2A01               	incf	??_interrupt_0^0,f,c
   274  000054  EF2E  F000         	goto	i2u3_44
   275  000058                     i2u3_45:
   276  000058  90D8               	bcf	status,0,c
   277  00005A  3602               	rlcf	(??_interrupt_0+1)^0,f,c
   278  00005C                     i2u3_44:
   279  00005C  2E01               	decfsz	??_interrupt_0^0,f,c
   280  00005E  EF2C  F000         	goto	i2u3_45
   281  000062  5002               	movf	(??_interrupt_0+1)^0,w,c
   282  000064  6E83               	movwf	131,c	;volatile
   283  000066                     
   284                           ;main.c: 21:             _delay((unsigned long)((300)*(8000000/4000.0)));
   285  000066  0E04               	movlw	4
   286  000068  6E02               	movwf	(??_interrupt_0+1)^0,c
   287  00006A  0E0C               	movlw	12
   288  00006C  6E01               	movwf	??_interrupt_0^0,c
   289  00006E  0E34               	movlw	52
   290  000070                     i2u6_47:
   291  000070  2EE8               	decfsz	wreg,f,c
   292  000072  D7FE               	bra	i2u6_47
   293  000074  2E01               	decfsz	??_interrupt_0^0,f,c
   294  000076  D7FC               	bra	i2u6_47
   295  000078  2E02               	decfsz	(??_interrupt_0+1)^0,f,c
   296  00007A  D7FA               	bra	i2u6_47
   297                           
   298                           ;main.c: 22:         }
   299  00007C  4A03               	infsnz	interrupt_0@i^0,f,c
   300  00007E  2A04               	incf	(interrupt_0@i+1)^0,f,c
   301  000080  EF15  F000         	goto	i2l710
   302  000084                     i2l21:
   303                           
   304                           ;main.c: 23:         INTCONbits.INT0IF = 0;
   305  000084  92F2               	bcf	242,1,c	;volatile
   306  000086                     i2l22:
   307  000086  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   308  000088  0011               	retfie		f
   309  00008A                     __end_of_interrupt_0:
   310                           	callstack 0
   311  0000                     
   312                           	psect	rparam
   313  0000                     
   314                           	psect	temp
   315  000007                     btemp:
   316                           	callstack 0
   317  000007                     	ds	1
   318  0000                     int$flags	set	btemp
   319  0000                     wtemp8	set	btemp+1
   320  0000                     ttemp5	set	btemp+1
   321  0000                     ttemp6	set	btemp+4
   322  0000                     ttemp7	set	btemp+8
   323                           
   324                           	psect	idloc
   325                           
   326                           ;Config register IDLOC0 @ 0x200000
   327                           ;	unspecified, using default values
   328  200000                     	org	2097152
   329  200000  FF                 	db	255
   330                           
   331                           ;Config register IDLOC1 @ 0x200001
   332                           ;	unspecified, using default values
   333  200001                     	org	2097153
   334  200001  FF                 	db	255
   335                           
   336                           ;Config register IDLOC2 @ 0x200002
   337                           ;	unspecified, using default values
   338  200002                     	org	2097154
   339  200002  FF                 	db	255
   340                           
   341                           ;Config register IDLOC3 @ 0x200003
   342                           ;	unspecified, using default values
   343  200003                     	org	2097155
   344  200003  FF                 	db	255
   345                           
   346                           ;Config register IDLOC4 @ 0x200004
   347                           ;	unspecified, using default values
   348  200004                     	org	2097156
   349  200004  FF                 	db	255
   350                           
   351                           ;Config register IDLOC5 @ 0x200005
   352                           ;	unspecified, using default values
   353  200005                     	org	2097157
   354  200005  FF                 	db	255
   355                           
   356                           ;Config register IDLOC6 @ 0x200006
   357                           ;	unspecified, using default values
   358  200006                     	org	2097158
   359  200006  FF                 	db	255
   360                           
   361                           ;Config register IDLOC7 @ 0x200007
   362                           ;	unspecified, using default values
   363  200007                     	org	2097159
   364  200007  FF                 	db	255
   365                           
   366                           	psect	config
   367                           
   368                           ; Padding undefined space
   369  300000                     	org	3145728
   370  300000  FF                 	db	255
   371                           
   372                           ;Config register CONFIG1H @ 0x300001
   373                           ;	Oscillator Selection bits
   374                           ;	OSC = HS, HS oscillator
   375                           ;	Fail-Safe Clock Monitor Enable bit
   376                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   377                           ;	Internal/External Oscillator Switchover bit
   378                           ;	IESO = OFF, Oscillator Switchover mode disabled
   379  300001                     	org	3145729
   380  300001  02                 	db	2
   381                           
   382                           ;Config register CONFIG2L @ 0x300002
   383                           ;	Power-up Timer Enable bit
   384                           ;	PWRT = OFF, PWRT disabled
   385                           ;	Brown-out Reset Enable bits
   386                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   387                           ;	Brown Out Reset Voltage bits
   388                           ;	BORV = 3, Minimum setting
   389  300002                     	org	3145730
   390  300002  1F                 	db	31
   391                           
   392                           ;Config register CONFIG2H @ 0x300003
   393                           ;	Watchdog Timer Enable bit
   394                           ;	WDT = ON, WDT enabled
   395                           ;	Watchdog Timer Postscale Select bits
   396                           ;	WDTPS = 32768, 1:32768
   397  300003                     	org	3145731
   398  300003  1F                 	db	31
   399                           
   400                           ; Padding undefined space
   401  300004                     	org	3145732
   402  300004  FF                 	db	255
   403                           
   404                           ;Config register CONFIG3H @ 0x300005
   405                           ;	CCP2 MUX bit
   406                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   407                           ;	PORTB A/D Enable bit
   408                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   409                           ;	Low-Power Timer1 Oscillator Enable bit
   410                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   411                           ;	MCLR Pin Enable bit
   412                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   413  300005                     	org	3145733
   414  300005  83                 	db	131
   415                           
   416                           ;Config register CONFIG4L @ 0x300006
   417                           ;	Stack Full/Underflow Reset Enable bit
   418                           ;	STVREN = ON, Stack full/underflow will cause Reset
   419                           ;	Single-Supply ICSP Enable bit
   420                           ;	LVP = ON, Single-Supply ICSP enabled
   421                           ;	Extended Instruction Set Enable bit
   422                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   423                           ;	Background Debugger Enable bit
   424                           ;	DEBUG = 0x1, unprogrammed default
   425  300006                     	org	3145734
   426  300006  85                 	db	133
   427                           
   428                           ; Padding undefined space
   429  300007                     	org	3145735
   430  300007  FF                 	db	255
   431                           
   432                           ;Config register CONFIG5L @ 0x300008
   433                           ;	Code Protection bit
   434                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   435                           ;	Code Protection bit
   436                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   437                           ;	Code Protection bit
   438                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   439                           ;	Code Protection bit
   440                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   441  300008                     	org	3145736
   442  300008  0F                 	db	15
   443                           
   444                           ;Config register CONFIG5H @ 0x300009
   445                           ;	Boot Block Code Protection bit
   446                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   447                           ;	Data EEPROM Code Protection bit
   448                           ;	CPD = OFF, Data EEPROM not code-protected
   449  300009                     	org	3145737
   450  300009  C0                 	db	192
   451                           
   452                           ;Config register CONFIG6L @ 0x30000A
   453                           ;	Write Protection bit
   454                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   455                           ;	Write Protection bit
   456                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   457                           ;	Write Protection bit
   458                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   459                           ;	Write Protection bit
   460                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   461  30000A                     	org	3145738
   462  30000A  0F                 	db	15
   463                           
   464                           ;Config register CONFIG6H @ 0x30000B
   465                           ;	Configuration Register Write Protection bit
   466                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   467                           ;	Boot Block Write Protection bit
   468                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   469                           ;	Data EEPROM Write Protection bit
   470                           ;	WRTD = OFF, Data EEPROM not write-protected
   471  30000B                     	org	3145739
   472  30000B  E0                 	db	224
   473                           
   474                           ;Config register CONFIG7L @ 0x30000C
   475                           ;	Table Read Protection bit
   476                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   477                           ;	Table Read Protection bit
   478                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   479                           ;	Table Read Protection bit
   480                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   481                           ;	Table Read Protection bit
   482                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   483  30000C                     	org	3145740
   484  30000C  0F                 	db	15
   485                           
   486                           ;Config register CONFIG7H @ 0x30000D
   487                           ;	Boot Block Table Read Protection bit
   488                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   489  30000D                     	org	3145741
   490  30000D  40                 	db	64
   491                           tosu	equ	0xFFF
   492                           tosh	equ	0xFFE
   493                           tosl	equ	0xFFD
   494                           stkptr	equ	0xFFC
   495                           pclatu	equ	0xFFB
   496                           pclath	equ	0xFFA
   497                           pcl	equ	0xFF9
   498                           tblptru	equ	0xFF8
   499                           tblptrh	equ	0xFF7
   500                           tblptrl	equ	0xFF6
   501                           tablat	equ	0xFF5
   502                           prodh	equ	0xFF4
   503                           prodl	equ	0xFF3
   504                           indf0	equ	0xFEF
   505                           postinc0	equ	0xFEE
   506                           postdec0	equ	0xFED
   507                           preinc0	equ	0xFEC
   508                           plusw0	equ	0xFEB
   509                           fsr0h	equ	0xFEA
   510                           fsr0l	equ	0xFE9
   511                           wreg	equ	0xFE8
   512                           indf1	equ	0xFE7
   513                           postinc1	equ	0xFE6
   514                           postdec1	equ	0xFE5
   515                           preinc1	equ	0xFE4
   516                           plusw1	equ	0xFE3
   517                           fsr1h	equ	0xFE2
   518                           fsr1l	equ	0xFE1
   519                           bsr	equ	0xFE0
   520                           indf2	equ	0xFDF
   521                           postinc2	equ	0xFDE
   522                           postdec2	equ	0xFDD
   523                           preinc2	equ	0xFDC
   524                           plusw2	equ	0xFDB
   525                           fsr2h	equ	0xFDA
   526                           fsr2l	equ	0xFD9
   527                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      6       6
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupt_0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interrupt_0                                          4     4      0      45
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interrupt_0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E      6       6       1        4.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 20 11:09:40 2021

                     l27 009E                       u47 00AC                       u57 00C4  
                    l720 008A                      l730 00A2                      l722 0096  
                    l732 00B8                      l724 0098                      l734 00BA  
                    l726 009A                      l728 009C                      wreg 000FE8  
                   i2l21 0084                     i2l22 0086                     _main 008A  
                   btemp 0007                     start 000E             ___param_bank 000000  
                  ?_main 0001                    i2l710 002A                    i2l714 004A  
                  i2l706 0014                    i2l716 0066                    i2l708 0022  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISD 000F95  
                  ttemp5 0008                    ttemp6 000B                    ttemp7 000F  
                  status 000FD8                    wtemp8 0008          __initialization 00D8  
           ?_interrupt_0 0001             __end_of_main 00D8                   ??_main 0005  
          __activetblptr 000000                   _ADCON1 000FC1                   i2u1_40 0022  
                 i2u1_41 001E                   i2u2_40 0046                   i2u2_41 0042  
                 i2u3_44 005C                   i2u3_45 0058                   i2u6_47 0070  
                 isa$std 000001               __accesstop 0080  __end_of__initialization 00D8  
          ___rparam_used 000001           __pcstackCOMRAM 0001     __size_of_interrupt_0 0082  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00D8  
                __ramtop 0600                  __ptext0 008A           __pintcode_body 0012  
   end_of_initialization 00D8                  int_func 0012      start_initialization 00D8  
           interrupt_0@i 0003            ??_interrupt_0 0001                __pintcode 0008  
    __end_of_interrupt_0 008A              _INTCON2bits 000FF1                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 004E              _interrupt_0 0008  
               isa$xinst 000000                 int$flags 0007               _INTCONbits 000FF2  
               intlevel2 0000  
