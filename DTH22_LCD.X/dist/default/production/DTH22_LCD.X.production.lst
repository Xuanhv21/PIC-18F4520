

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jan 22 21:27:02 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4520 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataBANK0
    80  0017DA                     __pidataBANK0:
    81                           	callstack 0
    82                           
    83                           ;initializer for _message2
    84  0017DA  48                 	db	72
    85  0017DB  75                 	db	117
    86  0017DC  6D                 	db	109
    87  0017DD  69                 	db	105
    88  0017DE  64                 	db	100
    89  0017DF  69                 	db	105
    90  0017E0  74                 	db	116
    91  0017E1  79                 	db	121
    92  0017E2  20                 	db	32
    93  0017E3  3D                 	db	61
    94  0017E4  20                 	db	32
    95  0017E5  30                 	db	48
    96  0017E6  30                 	db	48
    97  0017E7  2E                 	db	46
    98  0017E8  30                 	db	48
    99  0017E9  20                 	db	32
   100  0017EA  25                 	db	37
   101  0017EB  00                 	db	0
   102                           
   103                           ;initializer for _message1
   104  0017EC  54                 	db	84
   105  0017ED  65                 	db	101
   106  0017EE  6D                 	db	109
   107  0017EF  70                 	db	112
   108  0017F0  20                 	db	32
   109  0017F1  3D                 	db	61
   110  0017F2  20                 	db	32
   111  0017F3  30                 	db	48
   112  0017F4  30                 	db	48
   113  0017F5  2E                 	db	46
   114  0017F6  30                 	db	48
   115  0017F7  20                 	db	32
   116  0017F8  43                 	db	67
   117  0017F9  00                 	db	0
   118  0000                     _T2CON	set	4042
   119  0000                     _TMR2	set	4044
   120  0000                     _PORTAbits	set	3968
   121  0000                     _TRISAbits	set	3986
   122  0000                     _TRISD	set	3989
   123  0000                     _PORTDbits	set	3971
   124  0000                     _PORTD	set	3971
   125  0000                     _TMR2IE	set	31977
   126  0000                     _PEIE	set	32662
   127  0000                     _GIE	set	32663
   128  0000                     _TMR2IF	set	31985
   129  0000                     _TMR2ON	set	32338
   130                           
   131                           	psect	smallconst
   132  000600                     __psmallconst:
   133                           	callstack 0
   134  000600  00                 	db	0
   135  000601                     STR_5:
   136  000601  43                 	db	67	;'C'
   137  000602  68                 	db	104	;'h'
   138  000603  65                 	db	101	;'e'
   139  000604  63                 	db	99	;'c'
   140  000605  6B                 	db	107	;'k'
   141  000606  73                 	db	115	;'s'
   142  000607  75                 	db	117	;'u'
   143  000608  6D                 	db	109	;'m'
   144  000609  20                 	db	32
   145  00060A  45                 	db	69	;'E'
   146  00060B  72                 	db	114	;'r'
   147  00060C  72                 	db	114	;'r'
   148  00060D  6F                 	db	111	;'o'
   149  00060E  72                 	db	114	;'r'
   150  00060F  20                 	db	32
   151  000610  21                 	db	33
   152  000611  00                 	db	0
   153  000612                     STR_6:
   154  000612  54                 	db	84	;'T'
   155  000613  72                 	db	114	;'r'
   156  000614  79                 	db	121	;'y'
   157  000615  69                 	db	105	;'i'
   158  000616  6E                 	db	110	;'n'
   159  000617  67                 	db	103	;'g'
   160  000618  20                 	db	32
   161  000619  61                 	db	97	;'a'
   162  00061A  67                 	db	103	;'g'
   163  00061B  61                 	db	97	;'a'
   164  00061C  69                 	db	105	;'i'
   165  00061D  6E                 	db	110	;'n'
   166  00061E  20                 	db	32
   167  00061F  2E                 	db	46
   168  000620  2E                 	db	46
   169  000621  2E                 	db	46
   170  000622  00                 	db	0
   171  000623                     STR_2:
   172  000623  66                 	db	102	;'f'
   173  000624  72                 	db	114	;'r'
   174  000625  6F                 	db	111	;'o'
   175  000626  6D                 	db	109	;'m'
   176  000627  20                 	db	32
   177  000628  74                 	db	116	;'t'
   178  000629  68                 	db	104	;'h'
   179  00062A  65                 	db	101	;'e'
   180  00062B  20                 	db	32
   181  00062C  73                 	db	115	;'s'
   182  00062D  65                 	db	101	;'e'
   183  00062E  6E                 	db	110	;'n'
   184  00062F  73                 	db	115	;'s'
   185  000630  6F                 	db	111	;'o'
   186  000631  72                 	db	114	;'r'
   187  000632  00                 	db	0
   188  000633                     STR_1:
   189  000633  4E                 	db	78	;'N'
   190  000634  6F                 	db	111	;'o'
   191  000635  20                 	db	32
   192  000636  52                 	db	82	;'R'
   193  000637  65                 	db	101	;'e'
   194  000638  73                 	db	115	;'s'
   195  000639  70                 	db	112	;'p'
   196  00063A  6F                 	db	111	;'o'
   197  00063B  6E                 	db	110	;'n'
   198  00063C  73                 	db	115	;'s'
   199  00063D  65                 	db	101	;'e'
   200  00063E  00                 	db	0
   201  00063F                     STR_3:
   202  00063F  25                 	db	37
   203  000640  30                 	db	48	;'0'
   204  000641  33                 	db	51	;'3'
   205  000642  75                 	db	117	;'u'
   206  000643  00                 	db	0
   207  000644  00                 	db	0	; dummy byte at the end
   208  0000                     
   209                           ; #config settings
   210                           
   211                           	psect	cinit
   212  00161E                     __pcinit:
   213                           	callstack 0
   214  00161E                     start_initialization:
   215                           	callstack 0
   216  00161E                     __initialization:
   217                           	callstack 0
   218                           
   219                           ; Initialize objects allocated to BANK0 (32 bytes)
   220                           ; load TBLPTR registers with __pidataBANK0
   221  00161E  0EDA               	movlw	low __pidataBANK0
   222  001620  6EF6               	movwf	tblptrl,c
   223  001622  0E17               	movlw	high __pidataBANK0
   224  001624  6EF7               	movwf	tblptrh,c
   225  001626  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   226  001628  6EF8               	movwf	tblptru,c
   227  00162A  EE00  F0B6         	lfsr	0,__pdataBANK0
   228  00162E  EE10 F020          	lfsr	1,32
   229  001632                     copy_data0:
   230  001632  0009               	tblrd		*+
   231  001634  CFF5 FFEE          	movff	tablat,postinc0
   232  001638  50E5               	movf	postdec1,w,c
   233  00163A  50E1               	movf	fsr1l,w,c
   234  00163C  E1FA               	bnz	copy_data0
   235                           
   236                           ; Clear objects allocated to BANK0 (54 bytes)
   237  00163E  EE00  F080         	lfsr	0,__pbssBANK0
   238  001642  0E36               	movlw	54
   239  001644                     clear_0:
   240  001644  6AEE               	clrf	postinc0,c
   241  001646  06E8               	decf	wreg,f,c
   242  001648  E1FD               	bnz	clear_0
   243  00164A                     end_of_initialization:
   244                           	callstack 0
   245  00164A                     __end_of__initialization:
   246                           	callstack 0
   247  00164A  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   248  00164C  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   249  00164E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   250  001650  6EF8               	movwf	tblptru,c
   251  001652  0100               	movlb	0
   252  001654  EFCD  F004         	goto	_main	;jump to C main() function
   253                           
   254                           	psect	bssBANK0
   255  000080                     __pbssBANK0:
   256                           	callstack 0
   257  000080                     _nout:
   258                           	callstack 0
   259  000080                     	ds	2
   260  000082                     _width:
   261                           	callstack 0
   262  000082                     	ds	2
   263  000084                     _prec:
   264                           	callstack 0
   265  000084                     	ds	2
   266  000086                     _flags:
   267                           	callstack 0
   268  000086                     	ds	2
   269  000088                     _H_Byte2:
   270                           	callstack 0
   271  000088                     	ds	2
   272  00008A                     _H_Byte1:
   273                           	callstack 0
   274  00008A                     	ds	2
   275  00008C                     _T_Byte2:
   276                           	callstack 0
   277  00008C                     	ds	2
   278  00008E                     _T_Byte1:
   279                           	callstack 0
   280  00008E                     	ds	2
   281  000090                     _i:
   282                           	callstack 0
   283  000090                     	ds	2
   284  000092                     _CheckSum:
   285                           	callstack 0
   286  000092                     	ds	2
   287  000094                     _TOUT:
   288                           	callstack 0
   289  000094                     	ds	2
   290  000096                     _dbuf:
   291                           	callstack 0
   292  000096                     	ds	32
   293                           
   294                           	psect	dataBANK0
   295  0000B6                     __pdataBANK0:
   296                           	callstack 0
   297  0000B6                     _message2:
   298                           	callstack 0
   299  0000B6                     	ds	18
   300  0000C8                     _message1:
   301                           	callstack 0
   302  0000C8                     	ds	14
   303                           
   304                           	psect	cstackCOMRAM
   305  000001                     __pcstackCOMRAM:
   306                           	callstack 0
   307  000001                     ??_StartSignal:
   308  000001                     ?_strlen:
   309                           	callstack 0
   310  000001                     ?_isdigit:
   311                           	callstack 0
   312  000001                     ?_isspace:
   313                           	callstack 0
   314  000001                     ?_CheckResponse:
   315                           	callstack 0
   316  000001                     ?_ReadByte:
   317                           	callstack 0
   318  000001                     ?___wmul:
   319                           	callstack 0
   320  000001                     ?___lodiv:
   321                           	callstack 0
   322  000001                     ?___lomod:
   323                           	callstack 0
   324  000001                     LCDWriteNibble@rs:
   325                           	callstack 0
   326  000001                     ___wmul@multiplier:
   327                           	callstack 0
   328  000001                     isdigit@c:
   329                           	callstack 0
   330  000001                     isspace@c:
   331                           	callstack 0
   332  000001                     fputc@c:
   333                           	callstack 0
   334  000001                     strlen@s:
   335                           	callstack 0
   336  000001                     ___lodiv@dividend:
   337                           	callstack 0
   338  000001                     ___lomod@dividend:
   339                           	callstack 0
   340                           
   341                           ; 8 bytes @ 0x0
   342  000001                     	ds	1
   343  000002                     LCDWriteNibble@ch:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x1
   347  000002                     	ds	1
   348  000003                     ??_isdigit:
   349  000003                     ??_isspace:
   350  000003                     ??_LCDPutCmd:
   351  000003                     ??_LCDPutChar:
   352  000003                     ??_ReadByte:
   353  000003                     ___wmul@multiplicand:
   354                           	callstack 0
   355  000003                     fputc@fp:
   356                           	callstack 0
   357  000003                     strlen@a:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x2
   361  000003                     	ds	1
   362  000004                     LCDPutCmd@ch:
   363                           	callstack 0
   364  000004                     LCDPutChar@ch:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x3
   368  000004                     	ds	1
   369  000005                     ??_fputc:
   370  000005                     ??_LCD_initialize:
   371  000005                     LCDGoto@ln:
   372                           	callstack 0
   373  000005                     LCDPutStr@str:
   374                           	callstack 0
   375  000005                     ___wmul@product:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x4
   379  000005                     	ds	1
   380  000006                     ??_LCDGoto:
   381  000006                     ReadByte@num:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x5
   385  000006                     	ds	1
   386  000007                     ??_LCDPutStr:
   387  000007                     _isspace$898:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x6
   391  000007                     	ds	1
   392  000008                     ?_atoi:
   393                           	callstack 0
   394  000008                     _LCDGoto$275:
   395                           	callstack 0
   396  000008                     ReadByte@i:
   397                           	callstack 0
   398  000008                     atoi@s:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x7
   402  000008                     	ds	1
   403  000009                     LCDPutStr@i:
   404                           	callstack 0
   405  000009                     ___lodiv@divisor:
   406                           	callstack 0
   407  000009                     ___lomod@divisor:
   408                           	callstack 0
   409                           
   410                           ; 8 bytes @ 0x8
   411  000009                     	ds	1
   412  00000A                     ??_atoi:
   413  00000A                     LCDGoto@pos:
   414                           	callstack 0
   415  00000A                     fputs@s:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x9
   419  00000A                     	ds	2
   420  00000C                     fputs@fp:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0xB
   424  00000C                     	ds	2
   425  00000E                     fputs@c:
   426                           	callstack 0
   427  00000E                     atoi@neg:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0xD
   431  00000E                     	ds	1
   432  00000F                     fputs@i:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xE
   436  00000F                     	ds	1
   437  000010                     _atoi$880:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0xF
   441  000010                     	ds	1
   442  000011                     ?_pad:
   443                           	callstack 0
   444  000011                     ___lomod@counter:
   445                           	callstack 0
   446  000011                     pad@fp:
   447                           	callstack 0
   448  000011                     ___lodiv@quotient:
   449                           	callstack 0
   450                           
   451                           ; 8 bytes @ 0x10
   452  000011                     	ds	1
   453  000012                     _atoi$882:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x11
   457  000012                     	ds	1
   458  000013                     pad@buf:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x12
   462  000013                     	ds	1
   463  000014                     _atoi$881:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x13
   467  000014                     	ds	1
   468  000015                     pad@p:
   469                           	callstack 0
   470  000015                     atoi@n:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x14
   474  000015                     	ds	2
   475  000017                     ??_pad:
   476                           
   477                           ; 1 bytes @ 0x16
   478  000017                     	ds	1
   479  000018                     pad@i:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x17
   483  000018                     	ds	1
   484  000019                     ___lodiv@counter:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x18
   488  000019                     	ds	1
   489  00001A                     pad@w:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x19
   493  00001A                     	ds	2
   494  00001C                     ?_utoa:
   495                           	callstack 0
   496  00001C                     utoa@fp:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x1B
   500  00001C                     	ds	2
   501  00001E                     utoa@d:
   502                           	callstack 0
   503                           
   504                           ; 8 bytes @ 0x1D
   505  00001E                     	ds	8
   506  000026                     ??_utoa:
   507                           
   508                           ; 1 bytes @ 0x25
   509  000026                     	ds	8
   510  00002E                     utoa@p:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x2D
   514  00002E                     	ds	2
   515  000030                     utoa@w:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x2F
   519  000030                     	ds	2
   520  000032                     utoa@n:
   521                           	callstack 0
   522                           
   523                           ; 8 bytes @ 0x31
   524  000032                     	ds	8
   525  00003A                     utoa@i:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x39
   529  00003A                     	ds	2
   530  00003C                     ?_vfpfcnvrt:
   531                           	callstack 0
   532  00003C                     vfpfcnvrt@fp:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x3B
   536  00003C                     	ds	2
   537  00003E                     vfpfcnvrt@fmt:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x3D
   541  00003E                     	ds	2
   542  000040                     vfpfcnvrt@ap:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x3F
   546  000040                     	ds	2
   547  000042                     ??_vfpfcnvrt:
   548                           
   549                           ; 1 bytes @ 0x41
   550  000042                     	ds	4
   551  000046                     vfpfcnvrt@llu:
   552                           	callstack 0
   553                           
   554                           ; 8 bytes @ 0x45
   555  000046                     	ds	8
   556  00004E                     vfpfcnvrt@done:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x4D
   560  00004E                     	ds	2
   561  000050                     _vfpfcnvrt$862:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x4F
   565  000050                     	ds	2
   566  000052                     ?_vfprintf:
   567                           	callstack 0
   568  000052                     vfprintf@fp:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x51
   572  000052                     	ds	2
   573  000054                     vfprintf@fmt:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x53
   577  000054                     	ds	2
   578  000056                     vfprintf@ap:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x55
   582  000056                     	ds	2
   583  000058                     vfprintf@cfmt:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x57
   587  000058                     	ds	2
   588  00005A                     ?_sprintf:
   589                           	callstack 0
   590  00005A                     sprintf@s:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x59
   594  00005A                     	ds	2
   595  00005C                     sprintf@fmt:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x5B
   599  00005C                     	ds	4
   600  000060                     sprintf@ap:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x5F
   604  000060                     	ds	2
   605  000062                     sprintf@f:
   606                           	callstack 0
   607                           
   608                           ; 6 bytes @ 0x61
   609  000062                     	ds	6
   610  000068                     ??_main:
   611                           
   612                           ; 1 bytes @ 0x67
   613  000068                     	ds	4
   614  00006C                     main@h_buf:
   615                           	callstack 0
   616                           
   617                           ; 5 bytes @ 0x6B
   618  00006C                     	ds	5
   619  000071                     main@temp_buf:
   620                           	callstack 0
   621                           
   622                           ; 5 bytes @ 0x70
   623  000071                     	ds	5
   624  000076                     main@check:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x75
   628  000076                     	ds	2
   629  000078                     main@rh:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x77
   633  000078                     	ds	2
   634  00007A                     main@sign:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x79
   638  00007A                     	ds	2
   639  00007C                     main@temp:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x7B
   643  00007C                     	ds	2
   644                           
   645 ;;
   646 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   647 ;;
   648 ;; *************** function _main *****************
   649 ;; Defined at:
   650 ;;		line 84 in file "main_DHT22_LCD.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;  temp_buf        5  112[COMRAM] unsigned char [5]
   655 ;;  h_buf           5  107[COMRAM] unsigned char [5]
   656 ;;  temp            2  123[COMRAM] unsigned int 
   657 ;;  sign            2  121[COMRAM] unsigned short 
   658 ;;  rh              2  119[COMRAM] unsigned int 
   659 ;;  check           2  117[COMRAM] unsigned short 
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   669 ;;      Params:         0       0       0       0       0       0       0
   670 ;;      Locals:        18       0       0       0       0       0       0
   671 ;;      Temps:          4       0       0       0       0       0       0
   672 ;;      Totals:        22       0       0       0       0       0       0
   673 ;;Total ram usage:       22 bytes
   674 ;; Hardware stack levels required when called: 9
   675 ;; This function calls:
   676 ;;		_CheckResponse
   677 ;;		_LCDGoto
   678 ;;		_LCDPutCmd
   679 ;;		_LCDPutStr
   680 ;;		_LCD_initialize
   681 ;;		_ReadByte
   682 ;;		_StartSignal
   683 ;;		_sprintf
   684 ;; This function is called by:
   685 ;;		Startup code after reset
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text0
   690  00099A                     __ptext0:
   691                           	callstack 0
   692  00099A                     _main:
   693                           	callstack 22
   694  00099A                     
   695                           ;main_DHT22_LCD.c: 86:     unsigned short check,sign;;main_DHT22_LCD.c: 87:     unsigned
      +                           int rh,temp;;main_DHT22_LCD.c: 88:     GIE = 1;
   696  00099A  8EF2               	bsf	4082,7,c	;volatile
   697                           
   698                           ;main_DHT22_LCD.c: 89:     PEIE = 1;
   699  00099C  8CF2               	bsf	4082,6,c	;volatile
   700                           
   701                           ;main_DHT22_LCD.c: 90:     TMR2IE = 1;
   702  00099E  829D               	bsf	3997,1,c	;volatile
   703  0009A0                     
   704                           ;main_DHT22_LCD.c: 91:     T2CON = 0;
   705  0009A0  0E00               	movlw	0
   706  0009A2  6ECA               	movwf	202,c	;volatile
   707  0009A4                     
   708                           ;main_DHT22_LCD.c: 92:     TMR2IF = 0;
   709  0009A4  929E               	bcf	3998,1,c	;volatile
   710                           
   711                           ;main_DHT22_LCD.c: 93:     TMR2 = 0;
   712  0009A6  0E00               	movlw	0
   713  0009A8  6ECC               	movwf	204,c	;volatile
   714  0009AA                     
   715                           ;main_DHT22_LCD.c: 94:     LCD_initialize();
   716  0009AA  EC2C  F00B         	call	_LCD_initialize	;wreg free
   717  0009AE                     
   718                           ;main_DHT22_LCD.c: 95:     LCDPutCmd(0x01);
   719  0009AE  0E01               	movlw	1
   720  0009B0  EC49  F00B         	call	_LCDPutCmd
   721  0009B4                     l1933:
   722                           
   723                           ;main_DHT22_LCD.c: 97:     {;main_DHT22_LCD.c: 98:         _delay((unsigned long)((1000)
      +                          *(8000000/4000.0)));
   724  0009B4  0E0B               	movlw	11
   725  0009B6  6E69               	movwf	(??_main+1)^0,c
   726  0009B8  0E26               	movlw	38
   727  0009BA  6E68               	movwf	??_main^0,c
   728  0009BC  0E5E               	movlw	94
   729  0009BE                     u1437:
   730  0009BE  2EE8               	decfsz	wreg,f,c
   731  0009C0  D7FE               	bra	u1437
   732  0009C2  2E68               	decfsz	??_main^0,f,c
   733  0009C4  D7FC               	bra	u1437
   734  0009C6  2E69               	decfsz	(??_main+1)^0,f,c
   735  0009C8  D7FA               	bra	u1437
   736  0009CA                     
   737                           ;main_DHT22_LCD.c: 99:         StartSignal();
   738  0009CA  ECFD  F00B         	call	_StartSignal	;wreg free
   739  0009CE                     
   740                           ;main_DHT22_LCD.c: 100:         check = CheckResponse();
   741  0009CE  ECAE  F009         	call	_CheckResponse	;wreg free
   742  0009D2  C001  F076         	movff	?_CheckResponse,main@check
   743  0009D6  C002  F077         	movff	?_CheckResponse+1,main@check+1
   744  0009DA                     
   745                           ;main_DHT22_LCD.c: 101:         if(!check)
   746  0009DA  5076               	movf	main@check^0,w,c
   747  0009DC  1077               	iorwf	(main@check+1)^0,w,c
   748  0009DE  A4D8               	btfss	status,2,c
   749  0009E0  EFF4  F004         	goto	u1371
   750  0009E4  EFF6  F004         	goto	u1370
   751  0009E8                     u1371:
   752  0009E8  EF11  F005         	goto	l1947
   753  0009EC                     u1370:
   754  0009EC                     
   755                           ;main_DHT22_LCD.c: 102:         {;main_DHT22_LCD.c: 103:             LCDPutCmd(0x01);
   756  0009EC  0E01               	movlw	1
   757  0009EE  EC49  F00B         	call	_LCDPutCmd
   758                           
   759                           ;main_DHT22_LCD.c: 104:             LCDGoto(0,0);
   760  0009F2  0E00               	movlw	0
   761  0009F4  6E05               	movwf	LCDGoto@ln^0,c
   762  0009F6  0E00               	movlw	0
   763  0009F8  EC34  F00A         	call	_LCDGoto
   764  0009FC                     
   765                           ;main_DHT22_LCD.c: 105:             LCDPutStr("No Response");
   766  0009FC  0E33               	movlw	low STR_1
   767  0009FE  6E05               	movwf	LCDPutStr@str^0,c
   768  000A00  0E06               	movlw	high STR_1
   769  000A02  6E06               	movwf	(LCDPutStr@str+1)^0,c
   770  000A04  ECF8  F009         	call	_LCDPutStr	;wreg free
   771  000A08                     
   772                           ;main_DHT22_LCD.c: 106:             LCDGoto(0,1);
   773  000A08  0E01               	movlw	1
   774  000A0A  6E05               	movwf	LCDGoto@ln^0,c
   775  000A0C  0E00               	movlw	0
   776  000A0E  EC34  F00A         	call	_LCDGoto
   777                           
   778                           ;main_DHT22_LCD.c: 107:             LCDPutStr("from the sensor");
   779  000A12  0E23               	movlw	low STR_2
   780  000A14  6E05               	movwf	LCDPutStr@str^0,c
   781  000A16  0E06               	movlw	high STR_2
   782  000A18  6E06               	movwf	(LCDPutStr@str+1)^0,c
   783  000A1A  ECF8  F009         	call	_LCDPutStr	;wreg free
   784                           
   785                           ;main_DHT22_LCD.c: 108:         }
   786  000A1E  EFDA  F004         	goto	l1933
   787  000A22                     l1947:
   788                           
   789                           ;main_DHT22_LCD.c: 110:         {;main_DHT22_LCD.c: 111:             H_Byte1 = ReadByte(
      +                          );
   790  000A22  EC62  F009         	call	_ReadByte	;wreg free
   791  000A26  C001  F08A         	movff	?_ReadByte,_H_Byte1
   792  000A2A  C002  F08B         	movff	?_ReadByte+1,_H_Byte1+1
   793                           
   794                           ;main_DHT22_LCD.c: 112:             H_Byte2 = ReadByte();
   795  000A2E  EC62  F009         	call	_ReadByte	;wreg free
   796  000A32  C001  F088         	movff	?_ReadByte,_H_Byte2
   797  000A36  C002  F089         	movff	?_ReadByte+1,_H_Byte2+1
   798                           
   799                           ;main_DHT22_LCD.c: 113:             T_Byte1 = ReadByte();
   800  000A3A  EC62  F009         	call	_ReadByte	;wreg free
   801  000A3E  C001  F08E         	movff	?_ReadByte,_T_Byte1
   802  000A42  C002  F08F         	movff	?_ReadByte+1,_T_Byte1+1
   803                           
   804                           ;main_DHT22_LCD.c: 114:             T_Byte2 = ReadByte();
   805  000A46  EC62  F009         	call	_ReadByte	;wreg free
   806  000A4A  C001  F08C         	movff	?_ReadByte,_T_Byte2
   807  000A4E  C002  F08D         	movff	?_ReadByte+1,_T_Byte2+1
   808                           
   809                           ;main_DHT22_LCD.c: 115:             CheckSum = ReadByte();
   810  000A52  EC62  F009         	call	_ReadByte	;wreg free
   811  000A56  C001  F092         	movff	?_ReadByte,_CheckSum
   812  000A5A  C002  F093         	movff	?_ReadByte+1,_CheckSum+1
   813  000A5E                     
   814                           ;main_DHT22_LCD.c: 116:             rh = H_Byte2 | (H_Byte1<<8);
   815  000A5E  0100               	movlb	0	; () banked
   816  000A60  518A               	movf	_H_Byte1& (0+255),w,b
   817  000A62  6E69               	movwf	(??_main+1)^0,c
   818  000A64  6A68               	clrf	??_main^0,c
   819  000A66  5188               	movf	_H_Byte2& (0+255),w,b
   820  000A68  1068               	iorwf	??_main^0,w,c
   821  000A6A  6E78               	movwf	main@rh^0,c
   822  000A6C  5189               	movf	(_H_Byte2+1)& (0+255),w,b
   823  000A6E  1069               	iorwf	(??_main+1)^0,w,c
   824  000A70  6E79               	movwf	(main@rh+1)^0,c
   825  000A72                     
   826                           ; BSR set to: 0
   827                           ;main_DHT22_LCD.c: 117:             temp = T_Byte2 |(T_Byte1<<8);
   828  000A72  518E               	movf	_T_Byte1& (0+255),w,b
   829  000A74  6E69               	movwf	(??_main+1)^0,c
   830  000A76  6A68               	clrf	??_main^0,c
   831  000A78  518C               	movf	_T_Byte2& (0+255),w,b
   832  000A7A  1068               	iorwf	??_main^0,w,c
   833  000A7C  6E7C               	movwf	main@temp^0,c
   834  000A7E  518D               	movf	(_T_Byte2+1)& (0+255),w,b
   835  000A80  1069               	iorwf	(??_main+1)^0,w,c
   836  000A82  6E7D               	movwf	(main@temp+1)^0,c
   837  000A84                     
   838                           ; BSR set to: 0
   839                           ;main_DHT22_LCD.c: 118:             sign = 0;
   840  000A84  0E00               	movlw	0
   841  000A86  6E7B               	movwf	(main@sign+1)^0,c
   842  000A88  0E00               	movlw	0
   843  000A8A  6E7A               	movwf	main@sign^0,c
   844  000A8C                     
   845                           ; BSR set to: 0
   846                           ;main_DHT22_LCD.c: 119:             if(temp > 0x8000)
   847  000A8C  047C               	decf	main@temp^0,w,c
   848  000A8E  0E80               	movlw	128
   849  000A90  587D               	subwfb	(main@temp+1)^0,w,c
   850  000A92  A0D8               	btfss	status,0,c
   851  000A94  EF4E  F005         	goto	u1381
   852  000A98  EF50  F005         	goto	u1380
   853  000A9C                     u1381:
   854  000A9C  EF58  F005         	goto	l1961
   855  000AA0                     u1380:
   856  000AA0                     
   857                           ; BSR set to: 0
   858                           ;main_DHT22_LCD.c: 120:             {;main_DHT22_LCD.c: 121:                 temp &= 0x0
      +                          fff;
   859  000AA0  0EFF               	movlw	255
   860  000AA2  167C               	andwf	main@temp^0,f,c
   861  000AA4  0E0F               	movlw	15
   862  000AA6  167D               	andwf	(main@temp+1)^0,f,c
   863  000AA8                     
   864                           ; BSR set to: 0
   865                           ;main_DHT22_LCD.c: 122:                 sign = 1;
   866  000AA8  0E00               	movlw	0
   867  000AAA  6E7B               	movwf	(main@sign+1)^0,c
   868  000AAC  0E01               	movlw	1
   869  000AAE  6E7A               	movwf	main@sign^0,c
   870  000AB0                     l1961:
   871                           
   872                           ; BSR set to: 0
   873                           ;main_DHT22_LCD.c: 124:             unsigned char h_buf[5],temp_buf[5];;main_DHT22_LCD.c
      +                          : 125:             sprintf(h_buf,"%03u",rh);
   874  000AB0  0E6C               	movlw	low main@h_buf
   875  000AB2  6E5A               	movwf	sprintf@s^0,c
   876  000AB4  0E00               	movlw	high main@h_buf
   877  000AB6  6E5B               	movwf	(sprintf@s+1)^0,c
   878  000AB8  0E3F               	movlw	low STR_3
   879  000ABA  6E5C               	movwf	sprintf@fmt^0,c
   880  000ABC  0E06               	movlw	high STR_3
   881  000ABE  6E5D               	movwf	(sprintf@fmt+1)^0,c
   882  000AC0  C078  F05E         	movff	main@rh,?_sprintf+4
   883  000AC4  C079  F05F         	movff	main@rh+1,?_sprintf+5
   884  000AC8  ECC6  F00A         	call	_sprintf	;wreg free
   885  000ACC                     
   886                           ;main_DHT22_LCD.c: 126:             sprintf(temp_buf,"%03u",temp);
   887  000ACC  0E71               	movlw	low main@temp_buf
   888  000ACE  6E5A               	movwf	sprintf@s^0,c
   889  000AD0  0E00               	movlw	high main@temp_buf
   890  000AD2  6E5B               	movwf	(sprintf@s+1)^0,c
   891  000AD4  0E3F               	movlw	low STR_3
   892  000AD6  6E5C               	movwf	sprintf@fmt^0,c
   893  000AD8  0E06               	movlw	high STR_3
   894  000ADA  6E5D               	movwf	(sprintf@fmt+1)^0,c
   895  000ADC  C07C  F05E         	movff	main@temp,?_sprintf+4
   896  000AE0  C07D  F05F         	movff	main@temp+1,?_sprintf+5
   897  000AE4  ECC6  F00A         	call	_sprintf	;wreg free
   898  000AE8                     
   899                           ;main_DHT22_LCD.c: 127:             if(CheckSum == (H_Byte1 + H_Byte2 + T_Byte1 + T_Byte
      +                          2)& 0xff)
   900  000AE8  0100               	movlb	0	; () banked
   901  000AEA  5188               	movf	_H_Byte2& (0+255),w,b
   902  000AEC  258A               	addwf	_H_Byte1& (0+255),w,b
   903  000AEE  6E68               	movwf	??_main^0,c
   904  000AF0  5189               	movf	(_H_Byte2+1)& (0+255),w,b
   905  000AF2  218B               	addwfc	(_H_Byte1+1)& (0+255),w,b
   906  000AF4  6E69               	movwf	(??_main+1)^0,c
   907  000AF6  518E               	movf	_T_Byte1& (0+255),w,b
   908  000AF8  2668               	addwf	??_main^0,f,c
   909  000AFA  518F               	movf	(_T_Byte1+1)& (0+255),w,b
   910  000AFC  2269               	addwfc	(??_main+1)^0,f,c
   911  000AFE  518C               	movf	_T_Byte2& (0+255),w,b
   912  000B00  2668               	addwf	??_main^0,f,c
   913  000B02  518D               	movf	(_T_Byte2+1)& (0+255),w,b
   914  000B04  2269               	addwfc	(??_main+1)^0,f,c
   915  000B06  5192               	movf	_CheckSum& (0+255),w,b
   916  000B08  1868               	xorwf	??_main^0,w,c
   917  000B0A  E10A               	bnz	u1390
   918  000B0C  5193               	movf	(_CheckSum+1)& (0+255),w,b
   919  000B0E  1869               	xorwf	(??_main+1)^0,w,c
   920  000B10  B4D8               	btfsc	status,2,c
   921  000B12  EF8D  F005         	goto	u1391
   922  000B16  EF90  F005         	goto	u1390
   923  000B1A                     u1391:
   924  000B1A  0E01               	movlw	1
   925  000B1C  EF91  F005         	goto	u1400
   926  000B20                     u1390:
   927  000B20  0E00               	movlw	0
   928  000B22                     u1400:
   929  000B22  6E6A               	movwf	(??_main+2)^0,c
   930  000B24  6A6B               	clrf	(??_main+3)^0,c
   931  000B26  506A               	movf	(??_main+2)^0,w,c
   932  000B28  0900               	iorlw	0
   933  000B2A  B4D8               	btfsc	status,2,c
   934  000B2C  EF9A  F005         	goto	u1411
   935  000B30  EF9C  F005         	goto	u1410
   936  000B34                     u1411:
   937  000B34  EFD4  F005         	goto	l1991
   938  000B38                     u1410:
   939  000B38                     
   940                           ; BSR set to: 0
   941                           ;main_DHT22_LCD.c: 128:             {;main_DHT22_LCD.c: 129:                 message2[11
      +                          ] = h_buf[0];
   942  000B38  C06C  F0C1         	movff	main@h_buf,_message2+11
   943                           
   944                           ;main_DHT22_LCD.c: 130:                 message2[12] = h_buf[1];
   945  000B3C  C06D  F0C2         	movff	main@h_buf+1,_message2+12
   946                           
   947                           ;main_DHT22_LCD.c: 131:                 message2[14] = h_buf[2];
   948  000B40  C06E  F0C4         	movff	main@h_buf+2,_message2+14
   949  000B44                     
   950                           ; BSR set to: 0
   951                           ;main_DHT22_LCD.c: 132:                 if(sign)
   952  000B44  507A               	movf	main@sign^0,w,c
   953  000B46  107B               	iorwf	(main@sign+1)^0,w,c
   954  000B48  B4D8               	btfsc	status,2,c
   955  000B4A  EFA9  F005         	goto	u1421
   956  000B4E  EFAB  F005         	goto	u1420
   957  000B52                     u1421:
   958  000B52  EFAF  F005         	goto	l1973
   959  000B56                     u1420:
   960  000B56                     
   961                           ; BSR set to: 0
   962                           ;main_DHT22_LCD.c: 133:                 {;main_DHT22_LCD.c: 134:                     mes
      +                          sage1[6] = '-';
   963  000B56  0E2D               	movlw	45
   964  000B58  6FCE               	movwf	(_message1+6)& (0+255),b
   965                           
   966                           ;main_DHT22_LCD.c: 135:                 }
   967  000B5A  EFDA  F004         	goto	l1933
   968  000B5E                     l1973:
   969                           
   970                           ; BSR set to: 0
   971                           ;main_DHT22_LCD.c: 137:                 {;main_DHT22_LCD.c: 138:                     mes
      +                          sage1[6] = ' ';
   972  000B5E  0E20               	movlw	32
   973  000B60  6FCE               	movwf	(_message1+6)& (0+255),b
   974  000B62                     
   975                           ; BSR set to: 0
   976                           ;main_DHT22_LCD.c: 139:                     message1[7] = temp_buf[0];
   977  000B62  C071  F0CF         	movff	main@temp_buf,_message1+7
   978  000B66                     
   979                           ; BSR set to: 0
   980                           ;main_DHT22_LCD.c: 140:                     message1[8] = temp_buf[1];
   981  000B66  C072  F0D0         	movff	main@temp_buf+1,_message1+8
   982  000B6A                     
   983                           ; BSR set to: 0
   984                           ;main_DHT22_LCD.c: 141:                     message1[10] = temp_buf[2];
   985  000B6A  C073  F0D2         	movff	main@temp_buf+2,_message1+10
   986                           
   987                           ;main_DHT22_LCD.c: 142:                     message1[11] = 223;
   988  000B6E  0EDF               	movlw	223
   989  000B70  6FD3               	movwf	(_message1+11)& (0+255),b
   990  000B72                     
   991                           ; BSR set to: 0
   992                           ;main_DHT22_LCD.c: 143:                     LCDPutCmd(0x01);
   993  000B72  0E01               	movlw	1
   994  000B74  EC49  F00B         	call	_LCDPutCmd
   995  000B78                     
   996                           ;main_DHT22_LCD.c: 144:                     LCDGoto(0,0);
   997  000B78  0E00               	movlw	0
   998  000B7A  6E05               	movwf	LCDGoto@ln^0,c
   999  000B7C  0E00               	movlw	0
  1000  000B7E  EC34  F00A         	call	_LCDGoto
  1001  000B82                     
  1002                           ;main_DHT22_LCD.c: 145:                     LCDPutStr(message1);
  1003  000B82  0EC8               	movlw	low _message1
  1004  000B84  6E05               	movwf	LCDPutStr@str^0,c
  1005  000B86  0E00               	movlw	high _message1
  1006  000B88  6E06               	movwf	(LCDPutStr@str+1)^0,c
  1007  000B8A  ECF8  F009         	call	_LCDPutStr	;wreg free
  1008  000B8E                     
  1009                           ;main_DHT22_LCD.c: 146:                     LCDGoto(0,1);
  1010  000B8E  0E01               	movlw	1
  1011  000B90  6E05               	movwf	LCDGoto@ln^0,c
  1012  000B92  0E00               	movlw	0
  1013  000B94  EC34  F00A         	call	_LCDGoto
  1014  000B98                     
  1015                           ;main_DHT22_LCD.c: 147:                     LCDPutStr(message2);
  1016  000B98  0EB6               	movlw	low _message2
  1017  000B9A  6E05               	movwf	LCDPutStr@str^0,c
  1018  000B9C  0E00               	movlw	high _message2
  1019  000B9E  6E06               	movwf	(LCDPutStr@str+1)^0,c
  1020  000BA0  ECF8  F009         	call	_LCDPutStr	;wreg free
  1021  000BA4  EFDA  F004         	goto	l1933
  1022  000BA8                     l1991:
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;main_DHT22_LCD.c: 151:             {;main_DHT22_LCD.c: 152:                 LCDPutCmd(0
      +                          x01);
  1026  000BA8  0E01               	movlw	1
  1027  000BAA  EC49  F00B         	call	_LCDPutCmd
  1028                           
  1029                           ;main_DHT22_LCD.c: 153:                 LCDGoto(0,0);
  1030  000BAE  0E00               	movlw	0
  1031  000BB0  6E05               	movwf	LCDGoto@ln^0,c
  1032  000BB2  0E00               	movlw	0
  1033  000BB4  EC34  F00A         	call	_LCDGoto
  1034  000BB8                     
  1035                           ;main_DHT22_LCD.c: 154:                 LCDPutStr("Checksum Error !");
  1036  000BB8  0E01               	movlw	low STR_5
  1037  000BBA  6E05               	movwf	LCDPutStr@str^0,c
  1038  000BBC  0E06               	movlw	high STR_5
  1039  000BBE  6E06               	movwf	(LCDPutStr@str+1)^0,c
  1040  000BC0  ECF8  F009         	call	_LCDPutStr	;wreg free
  1041  000BC4                     
  1042                           ;main_DHT22_LCD.c: 155:                 LCDGoto(0,1);
  1043  000BC4  0E01               	movlw	1
  1044  000BC6  6E05               	movwf	LCDGoto@ln^0,c
  1045  000BC8  0E00               	movlw	0
  1046  000BCA  EC34  F00A         	call	_LCDGoto
  1047                           
  1048                           ;main_DHT22_LCD.c: 156:                 LCDPutStr("Trying again ...");
  1049  000BCE  0E12               	movlw	low STR_6
  1050  000BD0  6E05               	movwf	LCDPutStr@str^0,c
  1051  000BD2  0E06               	movlw	high STR_6
  1052  000BD4  6E06               	movwf	(LCDPutStr@str+1)^0,c
  1053  000BD6  ECF8  F009         	call	_LCDPutStr	;wreg free
  1054  000BDA  EFDA  F004         	goto	l1933
  1055  000BDE  EF07  F000         	goto	start
  1056  000BE2                     __end_of_main:
  1057                           	callstack 0
  1058                           
  1059 ;; *************** function _sprintf *****************
  1060 ;; Defined at:
  1061 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  s               2   89[COMRAM] PTR unsigned char 
  1064 ;;		 -> main@temp_buf(5), main@h_buf(5), 
  1065 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
  1066 ;;		 -> STR_4(5), STR_3(5), 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  f               6   97[COMRAM] struct _IO_FILE
  1069 ;;  ap              2   95[COMRAM] PTR void [1]
  1070 ;;		 -> ?_sprintf(2), 
  1071 ;;  ret             2    0        int 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  2   89[COMRAM] int 
  1074 ;; Registers used:
  1075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1081 ;;      Params:         6       0       0       0       0       0       0
  1082 ;;      Locals:         8       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0
  1084 ;;      Totals:        14       0       0       0       0       0       0
  1085 ;;Total ram usage:       14 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 8
  1088 ;; This function calls:
  1089 ;;		_vfprintf
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text1
  1096  00158C                     __ptext1:
  1097                           	callstack 0
  1098  00158C                     _sprintf:
  1099                           	callstack 22
  1100  00158C  0E5E               	movlw	low (?_sprintf+4)
  1101  00158E  6E60               	movwf	sprintf@ap^0,c
  1102  001590  0E00               	movlw	high (?_sprintf+4)
  1103  001592  6E61               	movwf	(sprintf@ap+1)^0,c
  1104  001594  C05A  F062         	movff	sprintf@s,sprintf@f
  1105  001598  C05B  F063         	movff	sprintf@s+1,sprintf@f+1
  1106  00159C  0E00               	movlw	0
  1107  00159E  6E65               	movwf	(sprintf@f+3)^0,c
  1108  0015A0  0E00               	movlw	0
  1109  0015A2  6E64               	movwf	(sprintf@f+2)^0,c
  1110  0015A4  0E00               	movlw	0
  1111  0015A6  6E67               	movwf	(sprintf@f+5)^0,c
  1112  0015A8  0E00               	movlw	0
  1113  0015AA  6E66               	movwf	(sprintf@f+4)^0,c
  1114  0015AC  0E62               	movlw	low sprintf@f
  1115  0015AE  6E52               	movwf	vfprintf@fp^0,c
  1116  0015B0  0E00               	movlw	high sprintf@f
  1117  0015B2  6E53               	movwf	(vfprintf@fp+1)^0,c
  1118  0015B4  C05C  F054         	movff	sprintf@fmt,vfprintf@fmt
  1119  0015B8  C05D  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1120  0015BC  0E60               	movlw	low sprintf@ap
  1121  0015BE  6E56               	movwf	vfprintf@ap^0,c
  1122  0015C0  0E00               	movlw	high sprintf@ap
  1123  0015C2  6E57               	movwf	(vfprintf@ap+1)^0,c
  1124  0015C4  EC6C  F00A         	call	_vfprintf	;wreg free
  1125  0015C8  5064               	movf	(sprintf@f+2)^0,w,c
  1126  0015CA  245A               	addwf	sprintf@s^0,w,c
  1127  0015CC  6ED9               	movwf	fsr2l,c
  1128  0015CE  5065               	movf	(sprintf@f+3)^0,w,c
  1129  0015D0  205B               	addwfc	(sprintf@s+1)^0,w,c
  1130  0015D2  6EDA               	movwf	fsr2h,c
  1131  0015D4  0E00               	movlw	0
  1132  0015D6  6EDF               	movwf	indf2,c
  1133  0015D8  0012               	return		;funcret
  1134  0015DA                     __end_of_sprintf:
  1135                           	callstack 0
  1136                           
  1137 ;; *************** function _vfprintf *****************
  1138 ;; Defined at:
  1139 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  1142 ;;		 -> sprintf@f(6), 
  1143 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1144 ;;		 -> STR_4(5), STR_3(5), 
  1145 ;;  ap              2   85[COMRAM] PTR PTR void 
  1146 ;;		 -> sprintf@ap(2), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1149 ;;		 -> STR_4(5), STR_3(5), 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  2   81[COMRAM] int 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1159 ;;      Params:         6       0       0       0       0       0       0
  1160 ;;      Locals:         2       0       0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0       0       0
  1162 ;;      Totals:         8       0       0       0       0       0       0
  1163 ;;Total ram usage:        8 bytes
  1164 ;; Hardware stack levels used: 1
  1165 ;; Hardware stack levels required when called: 7
  1166 ;; This function calls:
  1167 ;;		_vfpfcnvrt
  1168 ;; This function is called by:
  1169 ;;		_sprintf
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text2
  1174  0014D8                     __ptext2:
  1175                           	callstack 0
  1176  0014D8                     _vfprintf:
  1177                           	callstack 22
  1178  0014D8                     
  1179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1180  0014D8  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1181  0014DC  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1182  0014E0                     
  1183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1184  0014E0  0E00               	movlw	0
  1185  0014E2  0100               	movlb	0	; () banked
  1186  0014E4  6F81               	movwf	(_nout+1)& (0+255),b
  1187  0014E6  0E00               	movlw	0
  1188  0014E8  6F80               	movwf	_nout& (0+255),b
  1189                           
  1190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1191  0014EA  EF8A  F00A         	goto	l1807
  1192  0014EE                     l1805:
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1196  0014EE  C052  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1197  0014F2  C053  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1198  0014F6  0E58               	movlw	low vfprintf@cfmt
  1199  0014F8  6E3E               	movwf	vfpfcnvrt@fmt^0,c
  1200  0014FA  0E00               	movlw	high vfprintf@cfmt
  1201  0014FC  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1202  0014FE  C056  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
  1203  001502  C057  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1204  001506  EC23  F003         	call	_vfpfcnvrt	;wreg free
  1205  00150A  503C               	movf	?_vfpfcnvrt^0,w,c
  1206  00150C  0100               	movlb	0	; () banked
  1207  00150E  2780               	addwf	_nout& (0+255),f,b
  1208  001510  503D               	movf	(?_vfpfcnvrt+1)^0,w,c
  1209  001512  2381               	addwfc	(_nout+1)& (0+255),f,b
  1210  001514                     l1807:
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1214  001514  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  1215  001518  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1216  00151C                     	if	0	;tblptru may be non-zero
  1217  00151C                     	endif
  1218  00151C                     	if	0	;tblptru may be non-zero
  1219  00151C                     	endif
  1220  00151C  0008               	tblrd		*
  1221  00151E  50F5               	movf	tablat,w,c
  1222  001520  0900               	iorlw	0
  1223  001522  A4D8               	btfss	status,2,c
  1224  001524  EF96  F00A         	goto	u1181
  1225  001528  EF98  F00A         	goto	u1180
  1226  00152C                     u1181:
  1227  00152C  EF77  F00A         	goto	l1805
  1228  001530                     u1180:
  1229  001530                     
  1230                           ; BSR set to: 0
  1231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1232  001530  C080  F052         	movff	_nout,?_vfprintf
  1233  001534  C081  F053         	movff	_nout+1,?_vfprintf+1
  1234  001538                     
  1235                           ; BSR set to: 0
  1236  001538  0012               	return		;funcret
  1237  00153A                     __end_of_vfprintf:
  1238                           	callstack 0
  1239                           
  1240 ;; *************** function _vfpfcnvrt *****************
  1241 ;; Defined at:
  1242 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  1245 ;;		 -> sprintf@f(6), 
  1246 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  1247 ;;		 -> vfprintf@cfmt(2), 
  1248 ;;  ap              2   63[COMRAM] PTR PTR void 
  1249 ;;		 -> sprintf@ap(2), 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  llu             8   69[COMRAM] unsigned long long 
  1252 ;;  ll              8    0        long long 
  1253 ;;  f               4    0        long long 
  1254 ;;  vp              3    0        PTR void 
  1255 ;;  ct              3    0        unsigned char [3]
  1256 ;;  cp              3    0        PTR unsigned char 
  1257 ;;  done            2   77[COMRAM] int 
  1258 ;;  i               2    0        int 
  1259 ;;  c               1    0        unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  2   59[COMRAM] int 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1269 ;;      Params:         6       0       0       0       0       0       0
  1270 ;;      Locals:        12       0       0       0       0       0       0
  1271 ;;      Temps:          4       0       0       0       0       0       0
  1272 ;;      Totals:        22       0       0       0       0       0       0
  1273 ;;Total ram usage:       22 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 6
  1276 ;; This function calls:
  1277 ;;		_atoi
  1278 ;;		_fputc
  1279 ;;		_isdigit
  1280 ;;		_utoa
  1281 ;; This function is called by:
  1282 ;;		_vfprintf
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text3
  1287  000646                     __ptext3:
  1288                           	callstack 0
  1289  000646                     _vfpfcnvrt:
  1290                           	callstack 22
  1291  000646                     
  1292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1293  000646  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1294  00064A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1295  00064E  CFDE FFF6          	movff	postinc2,tblptrl
  1296  000652  CFDD FFF7          	movff	postdec2,tblptrh
  1297  000656                     	if	0	;tblptru may be non-zero
  1298  000656                     	endif
  1299  000656                     	if	0	;tblptru may be non-zero
  1300  000656                     	endif
  1301  000656  0008               	tblrd		*
  1302  000658  50F5               	movf	tablat,w,c
  1303  00065A  0A25               	xorlw	37
  1304  00065C  A4D8               	btfss	status,2,c
  1305  00065E  EF33  F003         	goto	u1081
  1306  000662  EF35  F003         	goto	u1080
  1307  000666                     u1081:
  1308  000666  EFB1  F004         	goto	l1769
  1309  00066A                     u1080:
  1310  00066A                     
  1311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1312  00066A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1313  00066E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1314  000672  2ADE               	incf	postinc2,f,c
  1315  000674  0E00               	movlw	0
  1316  000676  22DD               	addwfc	postdec2,f,c
  1317  000678                     
  1318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1319  000678  0E00               	movlw	0
  1320  00067A  0100               	movlb	0	; () banked
  1321  00067C  6F83               	movwf	(_width+1)& (0+255),b
  1322  00067E  0E00               	movlw	0
  1323  000680  6F82               	movwf	_width& (0+255),b
  1324  000682  C082  F086         	movff	_width,_flags
  1325  000686  C083  F087         	movff	_width+1,_flags+1
  1326  00068A                     
  1327                           ; BSR set to: 0
  1328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1329  00068A  6984               	setf	_prec& (0+255),b
  1330  00068C  6985               	setf	(_prec+1)& (0+255),b
  1331  00068E                     
  1332                           ; BSR set to: 0
  1333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1334  00068E  0E00               	movlw	0
  1335  000690  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
  1336  000692  0E00               	movlw	0
  1337  000694  6E4E               	movwf	vfpfcnvrt@done^0,c
  1338                           
  1339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1340  000696  EF98  F003         	goto	l1723
  1341  00069A                     l1697:
  1342                           
  1343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1344  00069A  0100               	movlb	0	; () banked
  1345  00069C  8186               	bsf	_flags& (0+255),0,b
  1346  00069E                     l1699:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1350  00069E  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1351  0006A2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1352  0006A6  2ADE               	incf	postinc2,f,c
  1353  0006A8  0E00               	movlw	0
  1354  0006AA  22DD               	addwfc	postdec2,f,c
  1355                           
  1356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1357  0006AC  EF98  F003         	goto	l1723
  1358  0006B0                     l1701:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1361  0006B0  0100               	movlb	0	; () banked
  1362  0006B2  8386               	bsf	_flags& (0+255),1,b
  1363  0006B4  EF4F  F003         	goto	l1699
  1364  0006B8                     l1705:
  1365                           
  1366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1367  0006B8  0100               	movlb	0	; () banked
  1368  0006BA  8586               	bsf	_flags& (0+255),2,b
  1369  0006BC  EF4F  F003         	goto	l1699
  1370  0006C0                     l1709:
  1371                           
  1372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1373  0006C0  0100               	movlb	0	; () banked
  1374  0006C2  8786               	bsf	_flags& (0+255),3,b
  1375  0006C4  EF4F  F003         	goto	l1699
  1376  0006C8                     l1713:
  1377                           
  1378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1379  0006C8  0100               	movlb	0	; () banked
  1380  0006CA  8986               	bsf	_flags& (0+255),4,b
  1381  0006CC  EF4F  F003         	goto	l1699
  1382  0006D0                     l1717:
  1383                           
  1384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1385  0006D0  0E00               	movlw	0
  1386  0006D2  6E4F               	movwf	(vfpfcnvrt@done+1)^0,c
  1387  0006D4  0E01               	movlw	1
  1388  0006D6  6E4E               	movwf	vfpfcnvrt@done^0,c
  1389                           
  1390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1391  0006D8  EF98  F003         	goto	l1723
  1392  0006DC                     l1721:
  1393  0006DC  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1394  0006E0  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1395  0006E4  CFDE FFF6          	movff	postinc2,tblptrl
  1396  0006E8  CFDD FFF7          	movff	postdec2,tblptrh
  1397  0006EC                     	if	0	;tblptru may be non-zero
  1398  0006EC                     	endif
  1399  0006EC                     	if	0	;tblptru may be non-zero
  1400  0006EC                     	endif
  1401  0006EC  0008               	tblrd		*
  1402  0006EE  50F5               	movf	tablat,w,c
  1403  0006F0  6E42               	movwf	??_vfpfcnvrt^0,c
  1404  0006F2  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
  1405                           
  1406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1407                           ; Switch size 1, requested type "simple"
  1408                           ; Number of cases is 1, Range of values is 0 to 0
  1409                           ; switch strategies available:
  1410                           ; Name         Instructions Cycles
  1411                           ; simple_byte            4     3 (average)
  1412                           ;	Chosen strategy is simple_byte
  1413  0006F4  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1414  0006F6  0A00               	xorlw	0	; case 0
  1415  0006F8  B4D8               	btfsc	status,2,c
  1416  0006FA  EF81  F003         	goto	l2047
  1417  0006FE  EF68  F003         	goto	l1717
  1418  000702                     l2047:
  1419                           
  1420                           ; Switch size 1, requested type "simple"
  1421                           ; Number of cases is 5, Range of values is 32 to 48
  1422                           ; switch strategies available:
  1423                           ; Name         Instructions Cycles
  1424                           ; simple_byte           16     9 (average)
  1425                           ;	Chosen strategy is simple_byte
  1426  000702  5042               	movf	??_vfpfcnvrt^0,w,c
  1427  000704  0A20               	xorlw	32	; case 32
  1428  000706  B4D8               	btfsc	status,2,c
  1429  000708  EF60  F003         	goto	l1709
  1430  00070C  0A03               	xorlw	3	; case 35
  1431  00070E  B4D8               	btfsc	status,2,c
  1432  000710  EF64  F003         	goto	l1713
  1433  000714  0A08               	xorlw	8	; case 43
  1434  000716  B4D8               	btfsc	status,2,c
  1435  000718  EF5C  F003         	goto	l1705
  1436  00071C  0A06               	xorlw	6	; case 45
  1437  00071E  B4D8               	btfsc	status,2,c
  1438  000720  EF4D  F003         	goto	l1697
  1439  000724  0A1D               	xorlw	29	; case 48
  1440  000726  B4D8               	btfsc	status,2,c
  1441  000728  EF58  F003         	goto	l1701
  1442  00072C  EF68  F003         	goto	l1717
  1443  000730                     l1723:
  1444                           
  1445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1446  000730  504E               	movf	vfpfcnvrt@done^0,w,c
  1447  000732  104F               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1448  000734  B4D8               	btfsc	status,2,c
  1449  000736  EF9F  F003         	goto	u1091
  1450  00073A  EFA1  F003         	goto	u1090
  1451  00073E                     u1091:
  1452  00073E  EF6E  F003         	goto	l1721
  1453  000742                     u1090:
  1454  000742                     
  1455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1456  000742  0100               	movlb	0	; () banked
  1457  000744  A186               	btfss	_flags& (0+255),0,b
  1458  000746  EFA7  F003         	goto	u1101
  1459  00074A  EFA9  F003         	goto	u1100
  1460  00074E                     u1101:
  1461  00074E  EFAA  F003         	goto	l1727
  1462  000752                     u1100:
  1463  000752                     
  1464                           ; BSR set to: 0
  1465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1466  000752  9386               	bcf	_flags& (0+255),1,b
  1467  000754                     l1727:
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1471  000754  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1472  000758  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1473  00075C  CFDE FFF6          	movff	postinc2,tblptrl
  1474  000760  CFDD FFF7          	movff	postdec2,tblptrh
  1475  000764                     	if	0	;tblptru may be non-zero
  1476  000764                     	endif
  1477  000764                     	if	0	;tblptru may be non-zero
  1478  000764                     	endif
  1479  000764  0008               	tblrd		*
  1480  000766  50F5               	movf	tablat,w,c
  1481  000768  0A2A               	xorlw	42
  1482  00076A  A4D8               	btfss	status,2,c
  1483  00076C  EFBA  F003         	goto	u1111
  1484  000770  EFBC  F003         	goto	u1110
  1485  000774                     u1111:
  1486  000774  EFE5  F003         	goto	l1735
  1487  000778                     u1110:
  1488  000778                     
  1489                           ; BSR set to: 0
  1490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1491  000778  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1492  00077C  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1493  000780  2ADE               	incf	postinc2,f,c
  1494  000782  0E00               	movlw	0
  1495  000784  22DD               	addwfc	postdec2,f,c
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1498  000786  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1499  00078A  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1500  00078E  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1501  000792  0E02               	movlw	2
  1502  000794  26DE               	addwf	postinc2,f,c
  1503  000796  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1504  00079A  0E00               	movlw	0
  1505  00079C  22DD               	addwfc	postdec2,f,c
  1506  00079E  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1507  0007A2  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1508  0007A6  CFDE F082          	movff	postinc2,_width
  1509  0007AA  CFDD F083          	movff	postdec2,_width+1
  1510  0007AE                     
  1511                           ; BSR set to: 0
  1512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1513  0007AE  BF83               	btfsc	(_width+1)& (0+255),7,b
  1514  0007B0  EFDE  F003         	goto	u1120
  1515  0007B4  EFDC  F003         	goto	u1121
  1516  0007B8                     u1121:
  1517  0007B8  EF28  F004         	goto	l1745
  1518  0007BC                     u1120:
  1519  0007BC                     
  1520                           ; BSR set to: 0
  1521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1522  0007BC  8186               	bsf	_flags& (0+255),0,b
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1525  0007BE  6D82               	negf	_width& (0+255),b
  1526  0007C0  1F83               	comf	(_width+1)& (0+255),f,b
  1527  0007C2  B0D8               	btfsc	status,0,c
  1528  0007C4  2B83               	incf	(_width+1)& (0+255),f,b
  1529  0007C6  EF28  F004         	goto	l1745
  1530  0007CA                     l1735:
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1534  0007CA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1535  0007CE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1536  0007D2  CFDE F008          	movff	postinc2,atoi@s
  1537  0007D6  CFDD F009          	movff	postdec2,atoi@s+1
  1538  0007DA  ECF2  F006         	call	_atoi	;wreg free
  1539  0007DE  C008  F082         	movff	?_atoi,_width
  1540  0007E2  C009  F083         	movff	?_atoi+1,_width+1
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1543  0007E6  EFFC  F003         	goto	l1739
  1544  0007EA                     l1737:
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1547  0007EA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1548  0007EE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1549  0007F2  2ADE               	incf	postinc2,f,c
  1550  0007F4  0E00               	movlw	0
  1551  0007F6  22DD               	addwfc	postdec2,f,c
  1552  0007F8                     l1739:
  1553  0007F8  0ED0               	movlw	208
  1554  0007FA  6E42               	movwf	??_vfpfcnvrt^0,c
  1555  0007FC  0EFF               	movlw	255
  1556  0007FE  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1557  000800  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1558  000804  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1559  000808  CFDE FFF6          	movff	postinc2,tblptrl
  1560  00080C  CFDD FFF7          	movff	postdec2,tblptrh
  1561  000810                     	if	0	;tblptru may be non-zero
  1562  000810                     	endif
  1563  000810                     	if	0	;tblptru may be non-zero
  1564  000810                     	endif
  1565  000810  0008               	tblrd		*
  1566  000812  50F5               	movf	tablat,w,c
  1567  000814  6E44               	movwf	(??_vfpfcnvrt+2)^0,c
  1568  000816  6A45               	clrf	(??_vfpfcnvrt+3)^0,c
  1569  000818  5042               	movf	??_vfpfcnvrt^0,w,c
  1570  00081A  2644               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1571  00081C  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1572  00081E  2245               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1573  000820  5045               	movf	(??_vfpfcnvrt+3)^0,w,c
  1574  000822  E10A               	bnz	u1130
  1575  000824  0E0A               	movlw	10
  1576  000826  5C44               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1577  000828  A0D8               	btfss	status,0,c
  1578  00082A  EF19  F004         	goto	u1131
  1579  00082E  EF1C  F004         	goto	u1130
  1580  000832                     u1131:
  1581  000832  0E01               	movlw	1
  1582  000834  EF1D  F004         	goto	u1140
  1583  000838                     u1130:
  1584  000838  0E00               	movlw	0
  1585  00083A                     u1140:
  1586  00083A  6E50               	movwf	_vfpfcnvrt$862^0,c
  1587  00083C  6A51               	clrf	(_vfpfcnvrt$862+1)^0,c
  1588  00083E  5050               	movf	_vfpfcnvrt$862^0,w,c
  1589  000840  1051               	iorwf	(_vfpfcnvrt$862+1)^0,w,c
  1590  000842  A4D8               	btfss	status,2,c
  1591  000844  EF26  F004         	goto	u1151
  1592  000848  EF28  F004         	goto	u1150
  1593  00084C                     u1151:
  1594  00084C  EFF5  F003         	goto	l1737
  1595  000850                     u1150:
  1596  000850                     l1745:
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  1599  000850  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1600  000854  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1601  000858  CFDE FFF6          	movff	postinc2,tblptrl
  1602  00085C  CFDD FFF7          	movff	postdec2,tblptrh
  1603  000860                     	if	0	;tblptru may be non-zero
  1604  000860                     	endif
  1605  000860                     	if	0	;tblptru may be non-zero
  1606  000860                     	endif
  1607  000860  0008               	tblrd		*
  1608  000862  50F5               	movf	tablat,w,c
  1609  000864  0A75               	xorlw	117
  1610  000866  A4D8               	btfss	status,2,c
  1611  000868  EF38  F004         	goto	u1161
  1612  00086C  EF3A  F004         	goto	u1160
  1613  000870                     u1161:
  1614  000870  EF7B  F004         	goto	l1753
  1615  000874                     u1160:
  1616  000874                     
  1617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  1618  000874  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1619  000878  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1620  00087C  2ADE               	incf	postinc2,f,c
  1621  00087E  0E00               	movlw	0
  1622  000880  22DD               	addwfc	postdec2,f,c
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1625  000882  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1626  000886  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1627  00088A  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1628  00088E  0E02               	movlw	2
  1629  000890  26DE               	addwf	postinc2,f,c
  1630  000892  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1631  000896  0E00               	movlw	0
  1632  000898  22DD               	addwfc	postdec2,f,c
  1633  00089A  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1634  00089E  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1635  0008A2  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  1636  0008A6  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  1637  0008AA  C044  F046         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1638  0008AE  C045  F047         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1639  0008B2  6A48               	clrf	(vfpfcnvrt@llu+2)^0,c
  1640  0008B4  6A49               	clrf	(vfpfcnvrt@llu+3)^0,c
  1641  0008B6  6A4A               	clrf	(vfpfcnvrt@llu+4)^0,c
  1642  0008B8  6A4B               	clrf	(vfpfcnvrt@llu+5)^0,c
  1643  0008BA  6A4C               	clrf	(vfpfcnvrt@llu+6)^0,c
  1644  0008BC  6A4D               	clrf	(vfpfcnvrt@llu+7)^0,c
  1645  0008BE                     
  1646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  1647  0008BE  C03C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  1648  0008C2  C03D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1649  0008C6  C046  F01E         	movff	vfpfcnvrt@llu,utoa@d
  1650  0008CA  C047  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1651  0008CE  C048  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1652  0008D2  C049  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1653  0008D6  C04A  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1654  0008DA  C04B  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1655  0008DE  C04C  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1656  0008E2  C04D  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1657  0008E6  ECF1  F005         	call	_utoa	;wreg free
  1658  0008EA  C01C  F03C         	movff	?_utoa,?_vfpfcnvrt
  1659  0008EE  C01D  F03D         	movff	?_utoa+1,?_vfpfcnvrt+1
  1660  0008F2  EFCC  F004         	goto	l884
  1661  0008F6                     l1753:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1664  0008F6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1665  0008FA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1666  0008FE  CFDE FFF6          	movff	postinc2,tblptrl
  1667  000902  CFDD FFF7          	movff	postdec2,tblptrh
  1668  000906                     	if	0	;tblptru may be non-zero
  1669  000906                     	endif
  1670  000906                     	if	0	;tblptru may be non-zero
  1671  000906                     	endif
  1672  000906  0008               	tblrd		*
  1673  000908  50F5               	movf	tablat,w,c
  1674  00090A  0A25               	xorlw	37
  1675  00090C  A4D8               	btfss	status,2,c
  1676  00090E  EF8B  F004         	goto	u1171
  1677  000912  EF8D  F004         	goto	u1170
  1678  000916                     u1171:
  1679  000916  EFA4  F004         	goto	l1763
  1680  00091A                     u1170:
  1681  00091A                     
  1682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1683  00091A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1684  00091E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1685  000922  2ADE               	incf	postinc2,f,c
  1686  000924  0E00               	movlw	0
  1687  000926  22DD               	addwfc	postdec2,f,c
  1688  000928                     
  1689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1690  000928  0E00               	movlw	0
  1691  00092A  6E02               	movwf	(fputc@c+1)^0,c
  1692  00092C  0E25               	movlw	37
  1693  00092E  6E01               	movwf	fputc@c^0,c
  1694  000930  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1695  000934  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1696  000938  EC9A  F008         	call	_fputc	;wreg free
  1697  00093C                     l1759:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1700  00093C  0E00               	movlw	0
  1701  00093E  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1702  000940  0E01               	movlw	1
  1703  000942  6E3C               	movwf	?_vfpfcnvrt^0,c
  1704  000944  EFCC  F004         	goto	l884
  1705  000948                     l1763:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1708  000948  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1709  00094C  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1710  000950  2ADE               	incf	postinc2,f,c
  1711  000952  0E00               	movlw	0
  1712  000954  22DD               	addwfc	postdec2,f,c
  1713  000956                     
  1714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1715  000956  0E00               	movlw	0
  1716  000958  6E3D               	movwf	(?_vfpfcnvrt+1)^0,c
  1717  00095A  0E00               	movlw	0
  1718  00095C  6E3C               	movwf	?_vfpfcnvrt^0,c
  1719  00095E  EFCC  F004         	goto	l884
  1720  000962                     l1769:
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1723  000962  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1724  000966  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1725  00096A  CFDE FFF6          	movff	postinc2,tblptrl
  1726  00096E  CFDD FFF7          	movff	postdec2,tblptrh
  1727  000972                     	if	0	;tblptru may be non-zero
  1728  000972                     	endif
  1729  000972                     	if	0	;tblptru may be non-zero
  1730  000972                     	endif
  1731  000972  0008               	tblrd		*
  1732  000974  50F5               	movf	tablat,w,c
  1733  000976  6E01               	movwf	fputc@c^0,c
  1734  000978  6A02               	clrf	(fputc@c+1)^0,c
  1735  00097A  C03C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1736  00097E  C03D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1737  000982  EC9A  F008         	call	_fputc	;wreg free
  1738  000986                     
  1739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1740  000986  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1741  00098A  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1742  00098E  2ADE               	incf	postinc2,f,c
  1743  000990  0E00               	movlw	0
  1744  000992  22DD               	addwfc	postdec2,f,c
  1745  000994  EF9E  F004         	goto	l1759
  1746  000998                     l884:
  1747  000998  0012               	return		;funcret
  1748  00099A                     __end_of_vfpfcnvrt:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function _utoa *****************
  1752 ;; Defined at:
  1753 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1756 ;;		 -> sprintf@f(6), 
  1757 ;;  d               8   29[COMRAM] unsigned long long 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  n               8   49[COMRAM] unsigned long long 
  1760 ;;  i               2   57[COMRAM] int 
  1761 ;;  w               2   47[COMRAM] int 
  1762 ;;  p               2   45[COMRAM] int 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  2   27[COMRAM] int 
  1765 ;; Registers used:
  1766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1772 ;;      Params:        10       0       0       0       0       0       0
  1773 ;;      Locals:        14       0       0       0       0       0       0
  1774 ;;      Temps:          8       0       0       0       0       0       0
  1775 ;;      Totals:        32       0       0       0       0       0       0
  1776 ;;Total ram usage:       32 bytes
  1777 ;; Hardware stack levels used: 1
  1778 ;; Hardware stack levels required when called: 5
  1779 ;; This function calls:
  1780 ;;		___lodiv
  1781 ;;		___lomod
  1782 ;;		_pad
  1783 ;; This function is called by:
  1784 ;;		_vfpfcnvrt
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text4
  1789  000BE2                     __ptext4:
  1790                           	callstack 0
  1791  000BE2                     _utoa:
  1792                           	callstack 22
  1793  000BE2                     
  1794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  1795  000BE2  0100               	movlb	0	; () banked
  1796  000BE4  BF85               	btfsc	(_prec+1)& (0+255),7,b
  1797  000BE6  EFF7  F005         	goto	u931
  1798  000BEA  EFF9  F005         	goto	u930
  1799  000BEE                     u931:
  1800  000BEE  EFFA  F005         	goto	l1603
  1801  000BF2                     u930:
  1802  000BF2                     
  1803                           ; BSR set to: 0
  1804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  1805  000BF2  9386               	bcf	_flags& (0+255),1,b
  1806  000BF4                     l1603:
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  1810  000BF4  BF85               	btfsc	(_prec+1)& (0+255),7,b
  1811  000BF6  EF07  F006         	goto	u940
  1812  000BFA  5185               	movf	(_prec+1)& (0+255),w,b
  1813  000BFC  E106               	bnz	u941
  1814  000BFE  0584               	decf	_prec& (0+255),w,b
  1815  000C00  B0D8               	btfsc	status,0,c
  1816  000C02  EF05  F006         	goto	u941
  1817  000C06  EF07  F006         	goto	u940
  1818  000C0A                     u941:
  1819  000C0A  EF0D  F006         	goto	l847
  1820  000C0E                     u940:
  1821  000C0E                     
  1822                           ; BSR set to: 0
  1823  000C0E  0E00               	movlw	0
  1824  000C10  6E2F               	movwf	(utoa@p+1)^0,c
  1825  000C12  0E01               	movlw	1
  1826  000C14  6E2E               	movwf	utoa@p^0,c
  1827  000C16  EF11  F006         	goto	l849
  1828  000C1A                     l847:
  1829                           
  1830                           ; BSR set to: 0
  1831  000C1A  C084  F02E         	movff	_prec,utoa@p
  1832  000C1E  C085  F02F         	movff	_prec+1,utoa@p+1
  1833  000C22                     l849:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  1837  000C22  C082  F030         	movff	_width,utoa@w
  1838  000C26  C083  F031         	movff	_width+1,utoa@w+1
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 628:     n = d;
  1841  000C2A  C01E  F032         	movff	utoa@d,utoa@n
  1842  000C2E  C01F  F033         	movff	utoa@d+1,utoa@n+1
  1843  000C32  C020  F034         	movff	utoa@d+2,utoa@n+2
  1844  000C36  C021  F035         	movff	utoa@d+3,utoa@n+3
  1845  000C3A  C022  F036         	movff	utoa@d+4,utoa@n+4
  1846  000C3E  C023  F037         	movff	utoa@d+5,utoa@n+5
  1847  000C42  C024  F038         	movff	utoa@d+6,utoa@n+6
  1848  000C46  C025  F039         	movff	utoa@d+7,utoa@n+7
  1849  000C4A                     
  1850                           ; BSR set to: 0
  1851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  1852  000C4A  0E00               	movlw	0
  1853  000C4C  6E3B               	movwf	(utoa@i+1)^0,c
  1854  000C4E  0E1F               	movlw	31
  1855  000C50  6E3A               	movwf	utoa@i^0,c
  1856  000C52                     
  1857                           ; BSR set to: 0
  1858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  1859  000C52  0E00               	movlw	0
  1860  000C54  6FB5               	movwf	(_dbuf+31)& (0+255),b
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1863  000C56  EFA3  F006         	goto	l1621
  1864  000C5A                     l1611:
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 632:         --i;
  1867  000C5A  063A               	decf	utoa@i^0,f,c
  1868  000C5C  A0D8               	btfss	status,0,c
  1869  000C5E  063B               	decf	(utoa@i+1)^0,f,c
  1870  000C60                     
  1871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  1872  000C60  0E96               	movlw	low _dbuf
  1873  000C62  243A               	addwf	utoa@i^0,w,c
  1874  000C64  6ED9               	movwf	fsr2l,c
  1875  000C66  0E00               	movlw	high _dbuf
  1876  000C68  203B               	addwfc	(utoa@i+1)^0,w,c
  1877  000C6A  6EDA               	movwf	fsr2h,c
  1878  000C6C  C032  F001         	movff	utoa@n,___lomod@dividend
  1879  000C70  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  1880  000C74  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  1881  000C78  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  1882  000C7C  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  1883  000C80  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  1884  000C84  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  1885  000C88  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  1886  000C8C  0E0A               	movlw	10
  1887  000C8E  6E09               	movwf	___lomod@divisor^0,c
  1888  000C90  0E00               	movlw	0
  1889  000C92  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1890  000C94  0E00               	movlw	0
  1891  000C96  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1892  000C98  0E00               	movlw	0
  1893  000C9A  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1894  000C9C  0E00               	movlw	0
  1895  000C9E  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1896  000CA0  0E00               	movlw	0
  1897  000CA2  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1898  000CA4  0E00               	movlw	0
  1899  000CA6  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1900  000CA8  0E00               	movlw	0
  1901  000CAA  6E10               	movwf	(___lomod@divisor+7)^0,c
  1902  000CAC  EC32  F008         	call	___lomod	;wreg free
  1903  000CB0  C001  F026         	movff	?___lomod,??_utoa
  1904  000CB4  C002  F027         	movff	?___lomod+1,??_utoa+1
  1905  000CB8  C003  F028         	movff	?___lomod+2,??_utoa+2
  1906  000CBC  C004  F029         	movff	?___lomod+3,??_utoa+3
  1907  000CC0  C005  F02A         	movff	?___lomod+4,??_utoa+4
  1908  000CC4  C006  F02B         	movff	?___lomod+5,??_utoa+5
  1909  000CC8  C007  F02C         	movff	?___lomod+6,??_utoa+6
  1910  000CCC  C008  F02D         	movff	?___lomod+7,??_utoa+7
  1911  000CD0  5026               	movf	??_utoa^0,w,c
  1912  000CD2  0F30               	addlw	48
  1913  000CD4  6EDF               	movwf	indf2,c
  1914  000CD6                     
  1915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 634:         --p;
  1916  000CD6  062E               	decf	utoa@p^0,f,c
  1917  000CD8  A0D8               	btfss	status,0,c
  1918  000CDA  062F               	decf	(utoa@p+1)^0,f,c
  1919  000CDC                     
  1920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 635:         --w;
  1921  000CDC  0630               	decf	utoa@w^0,f,c
  1922  000CDE  A0D8               	btfss	status,0,c
  1923  000CE0  0631               	decf	(utoa@w+1)^0,f,c
  1924  000CE2                     
  1925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  1926  000CE2  C032  F001         	movff	utoa@n,___lodiv@dividend
  1927  000CE6  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1928  000CEA  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1929  000CEE  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1930  000CF2  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1931  000CF6  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1932  000CFA  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1933  000CFE  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1934  000D02  0E0A               	movlw	10
  1935  000D04  6E09               	movwf	___lodiv@divisor^0,c
  1936  000D06  0E00               	movlw	0
  1937  000D08  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1938  000D0A  0E00               	movlw	0
  1939  000D0C  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1940  000D0E  0E00               	movlw	0
  1941  000D10  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1942  000D12  0E00               	movlw	0
  1943  000D14  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1944  000D16  0E00               	movlw	0
  1945  000D18  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1946  000D1A  0E00               	movlw	0
  1947  000D1C  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1948  000D1E  0E00               	movlw	0
  1949  000D20  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1950  000D22  ECBA  F007         	call	___lodiv	;wreg free
  1951  000D26  C001  F032         	movff	?___lodiv,utoa@n
  1952  000D2A  C002  F033         	movff	?___lodiv+1,utoa@n+1
  1953  000D2E  C003  F034         	movff	?___lodiv+2,utoa@n+2
  1954  000D32  C004  F035         	movff	?___lodiv+3,utoa@n+3
  1955  000D36  C005  F036         	movff	?___lodiv+4,utoa@n+4
  1956  000D3A  C006  F037         	movff	?___lodiv+5,utoa@n+5
  1957  000D3E  C007  F038         	movff	?___lodiv+6,utoa@n+6
  1958  000D42  C008  F039         	movff	?___lodiv+7,utoa@n+7
  1959  000D46                     l1621:
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1962  000D46  503A               	movf	utoa@i^0,w,c
  1963  000D48  103B               	iorwf	(utoa@i+1)^0,w,c
  1964  000D4A  B4D8               	btfsc	status,2,c
  1965  000D4C  EFAA  F006         	goto	u951
  1966  000D50  EFAC  F006         	goto	u950
  1967  000D54                     u951:
  1968  000D54  EFDD  F006         	goto	l1631
  1969  000D58                     u950:
  1970  000D58  5032               	movf	utoa@n^0,w,c
  1971  000D5A  1033               	iorwf	(utoa@n+1)^0,w,c
  1972  000D5C  1034               	iorwf	(utoa@n+2)^0,w,c
  1973  000D5E  1035               	iorwf	(utoa@n+3)^0,w,c
  1974  000D60  1036               	iorwf	(utoa@n+4)^0,w,c
  1975  000D62  1037               	iorwf	(utoa@n+5)^0,w,c
  1976  000D64  1038               	iorwf	(utoa@n+6)^0,w,c
  1977  000D66  1039               	iorwf	(utoa@n+7)^0,w,c
  1978  000D68  A4D8               	btfss	status,2,c
  1979  000D6A  EFB9  F006         	goto	u961
  1980  000D6E  EFBB  F006         	goto	u960
  1981  000D72                     u961:
  1982  000D72  EF2D  F006         	goto	l1611
  1983  000D76                     u960:
  1984  000D76  BE2F               	btfsc	(utoa@p+1)^0,7,c
  1985  000D78  EFC8  F006         	goto	u970
  1986  000D7C  502F               	movf	(utoa@p+1)^0,w,c
  1987  000D7E  E106               	bnz	u971
  1988  000D80  042E               	decf	utoa@p^0,w,c
  1989  000D82  B0D8               	btfsc	status,0,c
  1990  000D84  EFC6  F006         	goto	u971
  1991  000D88  EFC8  F006         	goto	u970
  1992  000D8C                     u971:
  1993  000D8C  EF2D  F006         	goto	l1611
  1994  000D90                     u970:
  1995  000D90  BE31               	btfsc	(utoa@w+1)^0,7,c
  1996  000D92  EFD3  F006         	goto	u981
  1997  000D96  5031               	movf	(utoa@w+1)^0,w,c
  1998  000D98  E108               	bnz	u980
  1999  000D9A  0430               	decf	utoa@w^0,w,c
  2000  000D9C  A0D8               	btfss	status,0,c
  2001  000D9E  EFD3  F006         	goto	u981
  2002  000DA2  EFD5  F006         	goto	u980
  2003  000DA6                     u981:
  2004  000DA6  EFDD  F006         	goto	l1631
  2005  000DAA                     u980:
  2006  000DAA  0100               	movlb	0	; () banked
  2007  000DAC  B386               	btfsc	_flags& (0+255),1,b
  2008  000DAE  EFDB  F006         	goto	u991
  2009  000DB2  EFDD  F006         	goto	u990
  2010  000DB6                     u991:
  2011  000DB6  EF2D  F006         	goto	l1611
  2012  000DBA                     u990:
  2013  000DBA                     l1631:
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  2016  000DBA  C01C  F011         	movff	utoa@fp,pad@fp
  2017  000DBE  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  2018  000DC2  0E96               	movlw	low _dbuf
  2019  000DC4  243A               	addwf	utoa@i^0,w,c
  2020  000DC6  6E13               	movwf	pad@buf^0,c
  2021  000DC8  0E00               	movlw	high _dbuf
  2022  000DCA  203B               	addwfc	(utoa@i+1)^0,w,c
  2023  000DCC  6E14               	movwf	(pad@buf+1)^0,c
  2024  000DCE  C030  F015         	movff	utoa@w,pad@p
  2025  000DD2  C031  F016         	movff	utoa@w+1,pad@p+1
  2026  000DD6  ECFF  F008         	call	_pad	;wreg free
  2027  000DDA  C011  F01C         	movff	?_pad,?_utoa
  2028  000DDE  C012  F01D         	movff	?_pad+1,?_utoa+1
  2029  000DE2  0012               	return		;funcret
  2030  000DE4                     __end_of_utoa:
  2031                           	callstack 0
  2032                           
  2033 ;; *************** function _pad *****************
  2034 ;; Defined at:
  2035 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2038 ;;		 -> sprintf@f(6), 
  2039 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2040 ;;		 -> dbuf(32), 
  2041 ;;  p               2   20[COMRAM] int 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  w               2   25[COMRAM] int 
  2044 ;;  i               2   23[COMRAM] int 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2   16[COMRAM] int 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2054 ;;      Params:         6       0       0       0       0       0       0
  2055 ;;      Locals:         4       0       0       0       0       0       0
  2056 ;;      Temps:          1       0       0       0       0       0       0
  2057 ;;      Totals:        11       0       0       0       0       0       0
  2058 ;;Total ram usage:       11 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 4
  2061 ;; This function calls:
  2062 ;;		_fputc
  2063 ;;		_fputs
  2064 ;;		_strlen
  2065 ;; This function is called by:
  2066 ;;		_utoa
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text5
  2071  0011FE                     __ptext5:
  2072                           	callstack 0
  2073  0011FE                     _pad:
  2074                           	callstack 22
  2075  0011FE                     
  2076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2077  0011FE  0100               	movlb	0	; () banked
  2078  001200  A186               	btfss	_flags& (0+255),0,b
  2079  001202  EF05  F009         	goto	u851
  2080  001206  EF07  F009         	goto	u850
  2081  00120A                     u851:
  2082  00120A  EF11  F009         	goto	l1565
  2083  00120E                     u850:
  2084  00120E                     
  2085                           ; BSR set to: 0
  2086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2087  00120E  C013  F00A         	movff	pad@buf,fputs@s
  2088  001212  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2089  001216  C011  F00C         	movff	pad@fp,fputs@fp
  2090  00121A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2091  00121E  ECED  F00A         	call	_fputs	;wreg free
  2092  001222                     l1565:
  2093                           
  2094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2095  001222  BE16               	btfsc	(pad@p+1)^0,7,c
  2096  001224  EF16  F009         	goto	u861
  2097  001228  EF18  F009         	goto	u860
  2098  00122C                     u861:
  2099  00122C  EF1E  F009         	goto	l1569
  2100  001230                     u860:
  2101  001230  C015  F01A         	movff	pad@p,pad@w
  2102  001234  C016  F01B         	movff	pad@p+1,pad@w+1
  2103  001238  EF22  F009         	goto	l837
  2104  00123C                     l1569:
  2105  00123C  0E00               	movlw	0
  2106  00123E  6E1B               	movwf	(pad@w+1)^0,c
  2107  001240  0E00               	movlw	0
  2108  001242  6E1A               	movwf	pad@w^0,c
  2109  001244                     l837:
  2110                           
  2111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2112  001244  0E00               	movlw	0
  2113  001246  6E19               	movwf	(pad@i+1)^0,c
  2114  001248  0E00               	movlw	0
  2115  00124A  6E18               	movwf	pad@i^0,c
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2118  00124C  EF34  F009         	goto	l1575
  2119  001250                     l1571:
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2122  001250  0E00               	movlw	0
  2123  001252  6E02               	movwf	(fputc@c+1)^0,c
  2124  001254  0E20               	movlw	32
  2125  001256  6E01               	movwf	fputc@c^0,c
  2126  001258  C011  F003         	movff	pad@fp,fputc@fp
  2127  00125C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2128  001260  EC9A  F008         	call	_fputc	;wreg free
  2129  001264                     
  2130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2131  001264  4A18               	infsnz	pad@i^0,f,c
  2132  001266  2A19               	incf	(pad@i+1)^0,f,c
  2133  001268                     l1575:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2136  001268  501A               	movf	pad@w^0,w,c
  2137  00126A  5C18               	subwf	pad@i^0,w,c
  2138  00126C  5019               	movf	(pad@i+1)^0,w,c
  2139  00126E  0A80               	xorlw	128
  2140  001270  6E17               	movwf	??_pad^0,c
  2141  001272  501B               	movf	(pad@w+1)^0,w,c
  2142  001274  0A80               	xorlw	128
  2143  001276  5817               	subwfb	??_pad^0,w,c
  2144  001278  A0D8               	btfss	status,0,c
  2145  00127A  EF41  F009         	goto	u871
  2146  00127E  EF43  F009         	goto	u870
  2147  001282                     u871:
  2148  001282  EF28  F009         	goto	l1571
  2149  001286                     u870:
  2150  001286                     
  2151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2152  001286  0100               	movlb	0	; () banked
  2153  001288  B186               	btfsc	_flags& (0+255),0,b
  2154  00128A  EF49  F009         	goto	u881
  2155  00128E  EF4B  F009         	goto	u880
  2156  001292                     u881:
  2157  001292  EF55  F009         	goto	l1579
  2158  001296                     u880:
  2159  001296                     
  2160                           ; BSR set to: 0
  2161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2162  001296  C013  F00A         	movff	pad@buf,fputs@s
  2163  00129A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2164  00129E  C011  F00C         	movff	pad@fp,fputs@fp
  2165  0012A2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2166  0012A6  ECED  F00A         	call	_fputs	;wreg free
  2167  0012AA                     l1579:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2170  0012AA  C013  F001         	movff	pad@buf,strlen@s
  2171  0012AE  C014  F002         	movff	pad@buf+1,strlen@s+1
  2172  0012B2  EC82  F00B         	call	_strlen	;wreg free
  2173  0012B6  501A               	movf	pad@w^0,w,c
  2174  0012B8  2401               	addwf	?_strlen^0,w,c
  2175  0012BA  6E11               	movwf	?_pad^0,c
  2176  0012BC  501B               	movf	(pad@w+1)^0,w,c
  2177  0012BE  2002               	addwfc	(?_strlen+1)^0,w,c
  2178  0012C0  6E12               	movwf	(?_pad+1)^0,c
  2179  0012C2  0012               	return		;funcret
  2180  0012C4                     __end_of_pad:
  2181                           	callstack 0
  2182                           
  2183 ;; *************** function _strlen *****************
  2184 ;; Defined at:
  2185 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2188 ;;		 -> dbuf(32), 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2191 ;;		 -> dbuf(32), 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  2    0[COMRAM] unsigned int 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2201 ;;      Params:         2       0       0       0       0       0       0
  2202 ;;      Locals:         2       0       0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0
  2204 ;;      Totals:         4       0       0       0       0       0       0
  2205 ;;Total ram usage:        4 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 1
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_pad
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text6
  2216  001704                     __ptext6:
  2217                           	callstack 0
  2218  001704                     _strlen:
  2219                           	callstack 24
  2220  001704  C001  F003         	movff	strlen@s,strlen@a
  2221  001708  C002  F004         	movff	strlen@s+1,strlen@a+1
  2222  00170C  EF8A  F00B         	goto	l1511
  2223  001710                     l1509:
  2224  001710  4A01               	infsnz	strlen@s^0,f,c
  2225  001712  2A02               	incf	(strlen@s+1)^0,f,c
  2226  001714                     l1511:
  2227  001714  C001  FFD9         	movff	strlen@s,fsr2l
  2228  001718  C002  FFDA         	movff	strlen@s+1,fsr2h
  2229  00171C  50DF               	movf	indf2,w,c
  2230  00171E  A4D8               	btfss	status,2,c
  2231  001720  EF94  F00B         	goto	u771
  2232  001724  EF96  F00B         	goto	u770
  2233  001728                     u771:
  2234  001728  EF88  F00B         	goto	l1509
  2235  00172C                     u770:
  2236  00172C  5003               	movf	strlen@a^0,w,c
  2237  00172E  5C01               	subwf	strlen@s^0,w,c
  2238  001730  6E01               	movwf	?_strlen^0,c
  2239  001732  5004               	movf	(strlen@a+1)^0,w,c
  2240  001734  5802               	subwfb	(strlen@s+1)^0,w,c
  2241  001736  6E02               	movwf	(?_strlen+1)^0,c
  2242  001738  0012               	return		;funcret
  2243  00173A                     __end_of_strlen:
  2244                           	callstack 0
  2245                           
  2246 ;; *************** function _fputs *****************
  2247 ;; Defined at:
  2248 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2251 ;;		 -> dbuf(32), 
  2252 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2253 ;;		 -> sprintf@f(6), 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  i               2   14[COMRAM] int 
  2256 ;;  c               1   13[COMRAM] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  2    9[COMRAM] int 
  2259 ;; Registers used:
  2260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2266 ;;      Params:         4       0       0       0       0       0       0
  2267 ;;      Locals:         3       0       0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0
  2269 ;;      Totals:         7       0       0       0       0       0       0
  2270 ;;Total ram usage:        7 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 3
  2273 ;; This function calls:
  2274 ;;		_fputc
  2275 ;; This function is called by:
  2276 ;;		_pad
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text7
  2281  0015DA                     __ptext7:
  2282                           	callstack 0
  2283  0015DA                     _fputs:
  2284                           	callstack 22
  2285  0015DA  0E00               	movlw	0
  2286  0015DC  6E10               	movwf	(fputs@i+1)^0,c
  2287  0015DE  0E00               	movlw	0
  2288  0015E0  6E0F               	movwf	fputs@i^0,c
  2289  0015E2  EFFE  F00A         	goto	l1505
  2290  0015E6                     l1501:
  2291  0015E6  C00E  F001         	movff	fputs@c,fputc@c
  2292  0015EA  6A02               	clrf	(fputc@c+1)^0,c
  2293  0015EC  C00C  F003         	movff	fputs@fp,fputc@fp
  2294  0015F0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2295  0015F4  EC9A  F008         	call	_fputc	;wreg free
  2296  0015F8  4A0F               	infsnz	fputs@i^0,f,c
  2297  0015FA  2A10               	incf	(fputs@i+1)^0,f,c
  2298  0015FC                     l1505:
  2299  0015FC  500F               	movf	fputs@i^0,w,c
  2300  0015FE  240A               	addwf	fputs@s^0,w,c
  2301  001600  6ED9               	movwf	fsr2l,c
  2302  001602  5010               	movf	(fputs@i+1)^0,w,c
  2303  001604  200B               	addwfc	(fputs@s+1)^0,w,c
  2304  001606  6EDA               	movwf	fsr2h,c
  2305  001608  50DF               	movf	indf2,w,c
  2306  00160A  6E0E               	movwf	fputs@c^0,c
  2307  00160C  500E               	movf	fputs@c^0,w,c
  2308  00160E  A4D8               	btfss	status,2,c
  2309  001610  EF0C  F00B         	goto	u761
  2310  001614  EF0E  F00B         	goto	u760
  2311  001618                     u761:
  2312  001618  EFF3  F00A         	goto	l1501
  2313  00161C                     u760:
  2314  00161C  0012               	return		;funcret
  2315  00161E                     __end_of_fputs:
  2316                           	callstack 0
  2317                           
  2318 ;; *************** function _fputc *****************
  2319 ;; Defined at:
  2320 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  c               2    0[COMRAM] int 
  2323 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2324 ;;		 -> sprintf@f(6), 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  2    0[COMRAM] int 
  2329 ;; Registers used:
  2330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2336 ;;      Params:         4       0       0       0       0       0       0
  2337 ;;      Locals:         0       0       0       0       0       0       0
  2338 ;;      Temps:          5       0       0       0       0       0       0
  2339 ;;      Totals:         9       0       0       0       0       0       0
  2340 ;;Total ram usage:        9 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 2
  2343 ;; This function calls:
  2344 ;;		_putch
  2345 ;; This function is called by:
  2346 ;;		_pad
  2347 ;;		_vfpfcnvrt
  2348 ;;		_fputs
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text8
  2353  001134                     __ptext8:
  2354                           	callstack 0
  2355  001134                     _fputc:
  2356                           	callstack 22
  2357  001134  5003               	movf	fputc@fp^0,w,c
  2358  001136  1004               	iorwf	(fputc@fp+1)^0,w,c
  2359  001138  B4D8               	btfsc	status,2,c
  2360  00113A  EFA1  F008         	goto	u721
  2361  00113E  EFA3  F008         	goto	u720
  2362  001142                     u721:
  2363  001142  EFAC  F008         	goto	l1489
  2364  001146                     u720:
  2365  001146  5003               	movf	fputc@fp^0,w,c
  2366  001148  1004               	iorwf	(fputc@fp+1)^0,w,c
  2367  00114A  A4D8               	btfss	status,2,c
  2368  00114C  EFAA  F008         	goto	u731
  2369  001150  EFAC  F008         	goto	u730
  2370  001154                     u731:
  2371  001154  EFB1  F008         	goto	l1491
  2372  001158                     u730:
  2373  001158                     l1489:
  2374  001158  5001               	movf	fputc@c^0,w,c
  2375  00115A  EC0C  F00C         	call	_putch
  2376  00115E  EFFE  F008         	goto	l948
  2377  001162                     l1491:
  2378  001162  EE20 F004          	lfsr	2,4
  2379  001166  5003               	movf	fputc@fp^0,w,c
  2380  001168  26D9               	addwf	fsr2l,f,c
  2381  00116A  5004               	movf	(fputc@fp+1)^0,w,c
  2382  00116C  22DA               	addwfc	fsr2h,f,c
  2383  00116E  50DE               	movf	postinc2,w,c
  2384  001170  10DE               	iorwf	postinc2,w,c
  2385  001172  B4D8               	btfsc	status,2,c
  2386  001174  EFBE  F008         	goto	u741
  2387  001178  EFC0  F008         	goto	u740
  2388  00117C                     u741:
  2389  00117C  EFDB  F008         	goto	l1495
  2390  001180                     u740:
  2391  001180  EE20 F004          	lfsr	2,4
  2392  001184  5003               	movf	fputc@fp^0,w,c
  2393  001186  26D9               	addwf	fsr2l,f,c
  2394  001188  5004               	movf	(fputc@fp+1)^0,w,c
  2395  00118A  22DA               	addwfc	fsr2h,f,c
  2396  00118C  EE10 F002          	lfsr	1,2
  2397  001190  5003               	movf	fputc@fp^0,w,c
  2398  001192  26E1               	addwf	fsr1l,f,c
  2399  001194  5004               	movf	(fputc@fp+1)^0,w,c
  2400  001196  22E2               	addwfc	fsr1h,f,c
  2401  001198  50DE               	movf	postinc2,w,c
  2402  00119A  5CE6               	subwf	postinc1,w,c
  2403  00119C  50E6               	movf	postinc1,w,c
  2404  00119E  0A80               	xorlw	128
  2405  0011A0  6E09               	movwf	(??_fputc+4)^0,c
  2406  0011A2  50DE               	movf	postinc2,w,c
  2407  0011A4  0A80               	xorlw	128
  2408  0011A6  5809               	subwfb	(??_fputc+4)^0,w,c
  2409  0011A8  B0D8               	btfsc	status,0,c
  2410  0011AA  EFD9  F008         	goto	u751
  2411  0011AE  EFDB  F008         	goto	u750
  2412  0011B2                     u751:
  2413  0011B2  EFFE  F008         	goto	l948
  2414  0011B6                     u750:
  2415  0011B6                     l1495:
  2416  0011B6  EE20 F002          	lfsr	2,2
  2417  0011BA  5003               	movf	fputc@fp^0,w,c
  2418  0011BC  26D9               	addwf	fsr2l,f,c
  2419  0011BE  5004               	movf	(fputc@fp+1)^0,w,c
  2420  0011C0  22DA               	addwfc	fsr2h,f,c
  2421  0011C2  CFDE F005          	movff	postinc2,??_fputc
  2422  0011C6  CFDD F006          	movff	postdec2,??_fputc+1
  2423  0011CA  C003  FFD9         	movff	fputc@fp,fsr2l
  2424  0011CE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2425  0011D2  CFDE F007          	movff	postinc2,??_fputc+2
  2426  0011D6  CFDD F008          	movff	postdec2,??_fputc+3
  2427  0011DA  5005               	movf	??_fputc^0,w,c
  2428  0011DC  2407               	addwf	(??_fputc+2)^0,w,c
  2429  0011DE  6ED9               	movwf	fsr2l,c
  2430  0011E0  5006               	movf	(??_fputc+1)^0,w,c
  2431  0011E2  2008               	addwfc	(??_fputc+3)^0,w,c
  2432  0011E4  6EDA               	movwf	fsr2h,c
  2433  0011E6  C001  FFDF         	movff	fputc@c,indf2
  2434  0011EA  EE20 F002          	lfsr	2,2
  2435  0011EE  5003               	movf	fputc@fp^0,w,c
  2436  0011F0  26D9               	addwf	fsr2l,f,c
  2437  0011F2  5004               	movf	(fputc@fp+1)^0,w,c
  2438  0011F4  22DA               	addwfc	fsr2h,f,c
  2439  0011F6  2ADE               	incf	postinc2,f,c
  2440  0011F8  0E00               	movlw	0
  2441  0011FA  22DD               	addwfc	postdec2,f,c
  2442  0011FC                     l948:
  2443  0011FC  0012               	return		;funcret
  2444  0011FE                     __end_of_fputc:
  2445                           	callstack 0
  2446                           
  2447 ;; *************** function _putch *****************
  2448 ;; Defined at:
  2449 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  c               1    wreg     unsigned char 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  c               1    0[COMRAM] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2463 ;;      Params:         0       0       0       0       0       0       0
  2464 ;;      Locals:         0       0       0       0       0       0       0
  2465 ;;      Temps:          0       0       0       0       0       0       0
  2466 ;;      Totals:         0       0       0       0       0       0       0
  2467 ;;Total ram usage:        0 bytes
  2468 ;; Hardware stack levels used: 1
  2469 ;; Hardware stack levels required when called: 1
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_fputc
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text9
  2478  001818                     __ptext9:
  2479                           	callstack 0
  2480  001818                     _putch:
  2481                           	callstack 22
  2482  001818  0012               	return		;funcret
  2483  00181A                     __end_of_putch:
  2484                           	callstack 0
  2485                           
  2486 ;; *************** function ___lomod *****************
  2487 ;; Defined at:
  2488 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lomod.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  dividend        8    0[COMRAM] unsigned long long 
  2491 ;;  divisor         8    8[COMRAM] unsigned long long 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  counter         1   16[COMRAM] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  8    0[COMRAM] unsigned long long 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2503 ;;      Params:        16       0       0       0       0       0       0
  2504 ;;      Locals:         1       0       0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0
  2506 ;;      Totals:        17       0       0       0       0       0       0
  2507 ;;Total ram usage:       17 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 1
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_utoa
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text10
  2518  001064                     __ptext10:
  2519                           	callstack 0
  2520  001064                     ___lomod:
  2521                           	callstack 25
  2522  001064  5009               	movf	___lomod@divisor^0,w,c
  2523  001066  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2524  001068  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2525  00106A  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2526  00106C  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2527  00106E  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2528  001070  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2529  001072  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2530  001074  B4D8               	btfsc	status,2,c
  2531  001076  EF3F  F008         	goto	u821
  2532  00107A  EF41  F008         	goto	u820
  2533  00107E                     u821:
  2534  00107E  EF89  F008         	goto	l578
  2535  001082                     u820:
  2536  001082  0E01               	movlw	1
  2537  001084  6E11               	movwf	___lomod@counter^0,c
  2538  001086  EF4F  F008         	goto	l1551
  2539  00108A                     l1549:
  2540  00108A  90D8               	bcf	status,0,c
  2541  00108C  3609               	rlcf	___lomod@divisor^0,f,c
  2542  00108E  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2543  001090  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2544  001092  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2545  001094  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2546  001096  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2547  001098  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2548  00109A  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2549  00109C  2A11               	incf	___lomod@counter^0,f,c
  2550  00109E                     l1551:
  2551  00109E  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2552  0010A0  EF54  F008         	goto	u831
  2553  0010A4  EF56  F008         	goto	u830
  2554  0010A8                     u831:
  2555  0010A8  EF45  F008         	goto	l1549
  2556  0010AC                     u830:
  2557  0010AC                     l1553:
  2558  0010AC  5009               	movf	___lomod@divisor^0,w,c
  2559  0010AE  5C01               	subwf	___lomod@dividend^0,w,c
  2560  0010B0  500A               	movf	(___lomod@divisor+1)^0,w,c
  2561  0010B2  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2562  0010B4  500B               	movf	(___lomod@divisor+2)^0,w,c
  2563  0010B6  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2564  0010B8  500C               	movf	(___lomod@divisor+3)^0,w,c
  2565  0010BA  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2566  0010BC  500D               	movf	(___lomod@divisor+4)^0,w,c
  2567  0010BE  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2568  0010C0  500E               	movf	(___lomod@divisor+5)^0,w,c
  2569  0010C2  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2570  0010C4  500F               	movf	(___lomod@divisor+6)^0,w,c
  2571  0010C6  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2572  0010C8  5010               	movf	(___lomod@divisor+7)^0,w,c
  2573  0010CA  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2574  0010CC  A0D8               	btfss	status,0,c
  2575  0010CE  EF6B  F008         	goto	u841
  2576  0010D2  EF6D  F008         	goto	u840
  2577  0010D6                     u841:
  2578  0010D6  EF7D  F008         	goto	l1557
  2579  0010DA                     u840:
  2580  0010DA  5009               	movf	___lomod@divisor^0,w,c
  2581  0010DC  5E01               	subwf	___lomod@dividend^0,f,c
  2582  0010DE  500A               	movf	(___lomod@divisor+1)^0,w,c
  2583  0010E0  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2584  0010E2  500B               	movf	(___lomod@divisor+2)^0,w,c
  2585  0010E4  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2586  0010E6  500C               	movf	(___lomod@divisor+3)^0,w,c
  2587  0010E8  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2588  0010EA  500D               	movf	(___lomod@divisor+4)^0,w,c
  2589  0010EC  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2590  0010EE  500E               	movf	(___lomod@divisor+5)^0,w,c
  2591  0010F0  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2592  0010F2  500F               	movf	(___lomod@divisor+6)^0,w,c
  2593  0010F4  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2594  0010F6  5010               	movf	(___lomod@divisor+7)^0,w,c
  2595  0010F8  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2596  0010FA                     l1557:
  2597  0010FA  90D8               	bcf	status,0,c
  2598  0010FC  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2599  0010FE  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2600  001100  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2601  001102  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2602  001104  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2603  001106  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2604  001108  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2605  00110A  3209               	rrcf	___lomod@divisor^0,f,c
  2606  00110C  2E11               	decfsz	___lomod@counter^0,f,c
  2607  00110E  EF56  F008         	goto	l1553
  2608  001112                     l578:
  2609  001112  C001  F001         	movff	___lomod@dividend,?___lomod
  2610  001116  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2611  00111A  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2612  00111E  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2613  001122  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2614  001126  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2615  00112A  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2616  00112E  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2617  001132  0012               	return		;funcret
  2618  001134                     __end_of___lomod:
  2619                           	callstack 0
  2620                           
  2621 ;; *************** function ___lodiv *****************
  2622 ;; Defined at:
  2623 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lodiv.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  dividend        8    0[COMRAM] unsigned long long 
  2626 ;;  divisor         8    8[COMRAM] unsigned long long 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  quotient        8   16[COMRAM] unsigned long long 
  2629 ;;  counter         1   24[COMRAM] unsigned char 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  8    0[COMRAM] unsigned long long 
  2632 ;; Registers used:
  2633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2639 ;;      Params:        16       0       0       0       0       0       0
  2640 ;;      Locals:         9       0       0       0       0       0       0
  2641 ;;      Temps:          0       0       0       0       0       0       0
  2642 ;;      Totals:        25       0       0       0       0       0       0
  2643 ;;Total ram usage:       25 bytes
  2644 ;; Hardware stack levels used: 1
  2645 ;; Hardware stack levels required when called: 1
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_utoa
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text11
  2654  000F74                     __ptext11:
  2655                           	callstack 0
  2656  000F74                     ___lodiv:
  2657                           	callstack 25
  2658  000F74  EE20  F011         	lfsr	2,___lodiv@quotient
  2659  000F78  0E07               	movlw	7
  2660  000F7A                     u781:
  2661  000F7A  6ADE               	clrf	postinc2,c
  2662  000F7C  06E8               	decf	wreg,f,c
  2663  000F7E  E2FD               	bc	u781
  2664  000F80  5009               	movf	___lodiv@divisor^0,w,c
  2665  000F82  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2666  000F84  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2667  000F86  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2668  000F88  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2669  000F8A  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2670  000F8C  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2671  000F8E  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2672  000F90  B4D8               	btfsc	status,2,c
  2673  000F92  EFCD  F007         	goto	u791
  2674  000F96  EFCF  F007         	goto	u790
  2675  000F9A                     u791:
  2676  000F9A  EF21  F008         	goto	l568
  2677  000F9E                     u790:
  2678  000F9E  0E01               	movlw	1
  2679  000FA0  6E19               	movwf	___lodiv@counter^0,c
  2680  000FA2  EFDD  F007         	goto	l1531
  2681  000FA6                     l1529:
  2682  000FA6  90D8               	bcf	status,0,c
  2683  000FA8  3609               	rlcf	___lodiv@divisor^0,f,c
  2684  000FAA  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2685  000FAC  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2686  000FAE  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2687  000FB0  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2688  000FB2  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2689  000FB4  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2690  000FB6  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2691  000FB8  2A19               	incf	___lodiv@counter^0,f,c
  2692  000FBA                     l1531:
  2693  000FBA  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2694  000FBC  EFE2  F007         	goto	u801
  2695  000FC0  EFE4  F007         	goto	u800
  2696  000FC4                     u801:
  2697  000FC4  EFD3  F007         	goto	l1529
  2698  000FC8                     u800:
  2699  000FC8                     l1533:
  2700  000FC8  90D8               	bcf	status,0,c
  2701  000FCA  3611               	rlcf	___lodiv@quotient^0,f,c
  2702  000FCC  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2703  000FCE  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2704  000FD0  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2705  000FD2  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2706  000FD4  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2707  000FD6  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2708  000FD8  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2709  000FDA  5009               	movf	___lodiv@divisor^0,w,c
  2710  000FDC  5C01               	subwf	___lodiv@dividend^0,w,c
  2711  000FDE  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2712  000FE0  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2713  000FE2  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2714  000FE4  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2715  000FE6  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2716  000FE8  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2717  000FEA  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2718  000FEC  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2719  000FEE  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2720  000FF0  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2721  000FF2  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2722  000FF4  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2723  000FF6  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2724  000FF8  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2725  000FFA  A0D8               	btfss	status,0,c
  2726  000FFC  EF02  F008         	goto	u811
  2727  001000  EF04  F008         	goto	u810
  2728  001004                     u811:
  2729  001004  EF15  F008         	goto	l1541
  2730  001008                     u810:
  2731  001008  5009               	movf	___lodiv@divisor^0,w,c
  2732  00100A  5E01               	subwf	___lodiv@dividend^0,f,c
  2733  00100C  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2734  00100E  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2735  001010  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2736  001012  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2737  001014  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2738  001016  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2739  001018  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2740  00101A  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2741  00101C  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2742  00101E  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2743  001020  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2744  001022  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2745  001024  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2746  001026  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2747  001028  8011               	bsf	___lodiv@quotient^0,0,c
  2748  00102A                     l1541:
  2749  00102A  90D8               	bcf	status,0,c
  2750  00102C  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2751  00102E  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2752  001030  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2753  001032  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2754  001034  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2755  001036  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2756  001038  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2757  00103A  3209               	rrcf	___lodiv@divisor^0,f,c
  2758  00103C  2E19               	decfsz	___lodiv@counter^0,f,c
  2759  00103E  EFE4  F007         	goto	l1533
  2760  001042                     l568:
  2761  001042  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2762  001046  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2763  00104A  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2764  00104E  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2765  001052  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2766  001056  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2767  00105A  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2768  00105E  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2769  001062  0012               	return		;funcret
  2770  001064                     __end_of___lodiv:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function _atoi *****************
  2774 ;; Defined at:
  2775 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  s               2    7[COMRAM] PTR const unsigned char 
  2778 ;;		 -> STR_4(5), STR_3(5), 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  n               2   20[COMRAM] int 
  2781 ;;  neg             2   13[COMRAM] int 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  2    7[COMRAM] int 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2791 ;;      Params:         2       0       0       0       0       0       0
  2792 ;;      Locals:         9       0       0       0       0       0       0
  2793 ;;      Temps:          4       0       0       0       0       0       0
  2794 ;;      Totals:        15       0       0       0       0       0       0
  2795 ;;Total ram usage:       15 bytes
  2796 ;; Hardware stack levels used: 1
  2797 ;; Hardware stack levels required when called: 2
  2798 ;; This function calls:
  2799 ;;		___wmul
  2800 ;;		_isdigit
  2801 ;;		_isspace
  2802 ;; This function is called by:
  2803 ;;		_vfpfcnvrt
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text12
  2808  000DE4                     __ptext12:
  2809                           	callstack 0
  2810  000DE4                     _atoi:
  2811                           	callstack 25
  2812  000DE4  0E00               	movlw	0
  2813  000DE6  6E16               	movwf	(atoi@n+1)^0,c
  2814  000DE8  0E00               	movlw	0
  2815  000DEA  6E15               	movwf	atoi@n^0,c
  2816  000DEC  0E00               	movlw	0
  2817  000DEE  6E0F               	movwf	(atoi@neg+1)^0,c
  2818  000DF0  0E00               	movlw	0
  2819  000DF2  6E0E               	movwf	atoi@neg^0,c
  2820  000DF4  EFFE  F006         	goto	l1639
  2821  000DF8                     l1637:
  2822  000DF8  4A08               	infsnz	atoi@s^0,f,c
  2823  000DFA  2A09               	incf	(atoi@s+1)^0,f,c
  2824  000DFC                     l1639:
  2825  000DFC  0E01               	movlw	1
  2826  000DFE  6E14               	movwf	_atoi$881^0,c
  2827  000E00  C008  FFF6         	movff	atoi@s,tblptrl
  2828  000E04  C009  FFF7         	movff	atoi@s+1,tblptrh
  2829  000E08                     	if	0	;tblptru may be non-zero
  2830  000E08                     	endif
  2831  000E08                     	if	0	;tblptru may be non-zero
  2832  000E08                     	endif
  2833  000E08  0008               	tblrd		*
  2834  000E0A  50F5               	movf	tablat,w,c
  2835  000E0C  0A20               	xorlw	32
  2836  000E0E  B4D8               	btfsc	status,2,c
  2837  000E10  EF0C  F007         	goto	u1001
  2838  000E14  EF0E  F007         	goto	u1000
  2839  000E18                     u1001:
  2840  000E18  EF2B  F007         	goto	l1647
  2841  000E1C                     u1000:
  2842  000E1C  0EF7               	movlw	247
  2843  000E1E  6E0A               	movwf	??_atoi^0,c
  2844  000E20  0EFF               	movlw	255
  2845  000E22  6E0B               	movwf	(??_atoi+1)^0,c
  2846  000E24  C008  FFF6         	movff	atoi@s,tblptrl
  2847  000E28  C009  FFF7         	movff	atoi@s+1,tblptrh
  2848  000E2C                     	if	0	;tblptru may be non-zero
  2849  000E2C                     	endif
  2850  000E2C                     	if	0	;tblptru may be non-zero
  2851  000E2C                     	endif
  2852  000E2C  0008               	tblrd		*
  2853  000E2E  50F5               	movf	tablat,w,c
  2854  000E30  6E0C               	movwf	(??_atoi+2)^0,c
  2855  000E32  6A0D               	clrf	(??_atoi+3)^0,c
  2856  000E34  500A               	movf	??_atoi^0,w,c
  2857  000E36  260C               	addwf	(??_atoi+2)^0,f,c
  2858  000E38  500B               	movf	(??_atoi+1)^0,w,c
  2859  000E3A  220D               	addwfc	(??_atoi+3)^0,f,c
  2860  000E3C  500D               	movf	(??_atoi+3)^0,w,c
  2861  000E3E  E109               	bnz	u1010
  2862  000E40  0E05               	movlw	5
  2863  000E42  5C0C               	subwf	(??_atoi+2)^0,w,c
  2864  000E44  A0D8               	btfss	status,0,c
  2865  000E46  EF27  F007         	goto	u1011
  2866  000E4A  EF29  F007         	goto	u1010
  2867  000E4E                     u1011:
  2868  000E4E  EF2B  F007         	goto	l1647
  2869  000E52                     u1010:
  2870  000E52  0E00               	movlw	0
  2871  000E54  6E14               	movwf	_atoi$881^0,c
  2872  000E56                     l1647:
  2873  000E56  C014  F010         	movff	_atoi$881,_atoi$880
  2874  000E5A  6A11               	clrf	(_atoi$880+1)^0,c
  2875  000E5C  5010               	movf	_atoi$880^0,w,c
  2876  000E5E  1011               	iorwf	(_atoi$880+1)^0,w,c
  2877  000E60  A4D8               	btfss	status,2,c
  2878  000E62  EF35  F007         	goto	u1021
  2879  000E66  EF37  F007         	goto	u1020
  2880  000E6A                     u1021:
  2881  000E6A  EFFC  F006         	goto	l1637
  2882  000E6E                     u1020:
  2883  000E6E  EF41  F007         	goto	l1657
  2884  000E72                     l1653:
  2885  000E72  0E00               	movlw	0
  2886  000E74  6E0F               	movwf	(atoi@neg+1)^0,c
  2887  000E76  0E01               	movlw	1
  2888  000E78  6E0E               	movwf	atoi@neg^0,c
  2889  000E7A                     l1655:
  2890  000E7A  4A08               	infsnz	atoi@s^0,f,c
  2891  000E7C  2A09               	incf	(atoi@s+1)^0,f,c
  2892  000E7E  EF76  F007         	goto	l1663
  2893  000E82                     l1657:
  2894  000E82  C008  FFF6         	movff	atoi@s,tblptrl
  2895  000E86  C009  FFF7         	movff	atoi@s+1,tblptrh
  2896  000E8A                     	if	0	;tblptru may be non-zero
  2897  000E8A                     	endif
  2898  000E8A                     	if	0	;tblptru may be non-zero
  2899  000E8A                     	endif
  2900  000E8A  0008               	tblrd		*
  2901  000E8C  50F5               	movf	tablat,w,c
  2902  000E8E  6E0A               	movwf	??_atoi^0,c
  2903  000E90  6A0B               	clrf	(??_atoi+1)^0,c
  2904                           
  2905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2906                           ; Switch size 1, requested type "simple"
  2907                           ; Number of cases is 1, Range of values is 0 to 0
  2908                           ; switch strategies available:
  2909                           ; Name         Instructions Cycles
  2910                           ; simple_byte            4     3 (average)
  2911                           ;	Chosen strategy is simple_byte
  2912  000E92  500B               	movf	(??_atoi+1)^0,w,c
  2913  000E94  0A00               	xorlw	0	; case 0
  2914  000E96  B4D8               	btfsc	status,2,c
  2915  000E98  EF50  F007         	goto	l2049
  2916  000E9C  EF76  F007         	goto	l1663
  2917  000EA0                     l2049:
  2918                           
  2919                           ; Switch size 1, requested type "simple"
  2920                           ; Number of cases is 2, Range of values is 43 to 45
  2921                           ; switch strategies available:
  2922                           ; Name         Instructions Cycles
  2923                           ; simple_byte            7     4 (average)
  2924                           ;	Chosen strategy is simple_byte
  2925  000EA0  500A               	movf	??_atoi^0,w,c
  2926  000EA2  0A2B               	xorlw	43	; case 43
  2927  000EA4  B4D8               	btfsc	status,2,c
  2928  000EA6  EF3D  F007         	goto	l1655
  2929  000EAA  0A06               	xorlw	6	; case 45
  2930  000EAC  B4D8               	btfsc	status,2,c
  2931  000EAE  EF39  F007         	goto	l1653
  2932  000EB2  EF76  F007         	goto	l1663
  2933  000EB6                     l1659:
  2934  000EB6  C015  F001         	movff	atoi@n,___wmul@multiplier
  2935  000EBA  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  2936  000EBE  0E00               	movlw	0
  2937  000EC0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2938  000EC2  0E0A               	movlw	10
  2939  000EC4  6E03               	movwf	___wmul@multiplicand^0,c
  2940  000EC6  ECC9  F00B         	call	___wmul	;wreg free
  2941  000ECA  C008  FFF6         	movff	atoi@s,tblptrl
  2942  000ECE  C009  FFF7         	movff	atoi@s+1,tblptrh
  2943  000ED2                     	if	0	;tblptru may be non-zero
  2944  000ED2                     	endif
  2945  000ED2                     	if	0	;tblptru may be non-zero
  2946  000ED2                     	endif
  2947  000ED2  0008               	tblrd		*
  2948  000ED4  50F5               	movf	tablat,w,c
  2949  000ED6  5E01               	subwf	?___wmul^0,f,c
  2950  000ED8  0E00               	movlw	0
  2951  000EDA  5A02               	subwfb	(?___wmul+1)^0,f,c
  2952  000EDC  0E30               	movlw	48
  2953  000EDE  2401               	addwf	?___wmul^0,w,c
  2954  000EE0  6E15               	movwf	atoi@n^0,c
  2955  000EE2  0E00               	movlw	0
  2956  000EE4  2002               	addwfc	(?___wmul+1)^0,w,c
  2957  000EE6  6E16               	movwf	(atoi@n+1)^0,c
  2958  000EE8  EF3D  F007         	goto	l1655
  2959  000EEC                     l1663:
  2960  000EEC  0ED0               	movlw	208
  2961  000EEE  6E0A               	movwf	??_atoi^0,c
  2962  000EF0  0EFF               	movlw	255
  2963  000EF2  6E0B               	movwf	(??_atoi+1)^0,c
  2964  000EF4  C008  FFF6         	movff	atoi@s,tblptrl
  2965  000EF8  C009  FFF7         	movff	atoi@s+1,tblptrh
  2966  000EFC                     	if	0	;tblptru may be non-zero
  2967  000EFC                     	endif
  2968  000EFC                     	if	0	;tblptru may be non-zero
  2969  000EFC                     	endif
  2970  000EFC  0008               	tblrd		*
  2971  000EFE  50F5               	movf	tablat,w,c
  2972  000F00  6E0C               	movwf	(??_atoi+2)^0,c
  2973  000F02  6A0D               	clrf	(??_atoi+3)^0,c
  2974  000F04  500A               	movf	??_atoi^0,w,c
  2975  000F06  260C               	addwf	(??_atoi+2)^0,f,c
  2976  000F08  500B               	movf	(??_atoi+1)^0,w,c
  2977  000F0A  220D               	addwfc	(??_atoi+3)^0,f,c
  2978  000F0C  500D               	movf	(??_atoi+3)^0,w,c
  2979  000F0E  E10A               	bnz	u1030
  2980  000F10  0E0A               	movlw	10
  2981  000F12  5C0C               	subwf	(??_atoi+2)^0,w,c
  2982  000F14  A0D8               	btfss	status,0,c
  2983  000F16  EF8F  F007         	goto	u1031
  2984  000F1A  EF92  F007         	goto	u1030
  2985  000F1E                     u1031:
  2986  000F1E  0E01               	movlw	1
  2987  000F20  EF93  F007         	goto	u1040
  2988  000F24                     u1030:
  2989  000F24  0E00               	movlw	0
  2990  000F26                     u1040:
  2991  000F26  6E12               	movwf	_atoi$882^0,c
  2992  000F28  6A13               	clrf	(_atoi$882+1)^0,c
  2993  000F2A  5012               	movf	_atoi$882^0,w,c
  2994  000F2C  1013               	iorwf	(_atoi$882+1)^0,w,c
  2995  000F2E  A4D8               	btfss	status,2,c
  2996  000F30  EF9C  F007         	goto	u1051
  2997  000F34  EF9E  F007         	goto	u1050
  2998  000F38                     u1051:
  2999  000F38  EF5B  F007         	goto	l1659
  3000  000F3C                     u1050:
  3001  000F3C  500E               	movf	atoi@neg^0,w,c
  3002  000F3E  100F               	iorwf	(atoi@neg+1)^0,w,c
  3003  000F40  A4D8               	btfss	status,2,c
  3004  000F42  EFA5  F007         	goto	u1061
  3005  000F46  EFA7  F007         	goto	u1060
  3006  000F4A                     u1061:
  3007  000F4A  EFB5  F007         	goto	l919
  3008  000F4E                     u1060:
  3009  000F4E  C015  F00A         	movff	atoi@n,??_atoi
  3010  000F52  C016  F00B         	movff	atoi@n+1,??_atoi+1
  3011  000F56  1E0A               	comf	??_atoi^0,f,c
  3012  000F58  1E0B               	comf	(??_atoi+1)^0,f,c
  3013  000F5A  4A0A               	infsnz	??_atoi^0,f,c
  3014  000F5C  2A0B               	incf	(??_atoi+1)^0,f,c
  3015  000F5E  C00A  F008         	movff	??_atoi,?_atoi
  3016  000F62  C00B  F009         	movff	??_atoi+1,?_atoi+1
  3017  000F66  EFB9  F007         	goto	l922
  3018  000F6A                     l919:
  3019  000F6A  C015  F008         	movff	atoi@n,?_atoi
  3020  000F6E  C016  F009         	movff	atoi@n+1,?_atoi+1
  3021  000F72                     l922:
  3022  000F72  0012               	return		;funcret
  3023  000F74                     __end_of_atoi:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _isspace *****************
  3027 ;; Defined at:
  3028 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  c               2    0[COMRAM] int 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  2    0[COMRAM] int 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2, status,0
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3042 ;;      Params:         2       0       0       0       0       0       0
  3043 ;;      Locals:         1       0       0       0       0       0       0
  3044 ;;      Temps:          4       0       0       0       0       0       0
  3045 ;;      Totals:         7       0       0       0       0       0       0
  3046 ;;Total ram usage:        7 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 1
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_atoi
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text13
  3057  00153A                     __ptext13:
  3058                           	callstack 0
  3059  00153A                     _isspace:
  3060                           	callstack 25
  3061  00153A  0E01               	movlw	1
  3062  00153C  6E07               	movwf	_isspace$898^0,c
  3063  00153E  0E20               	movlw	32
  3064  001540  1801               	xorwf	isspace@c^0,w,c
  3065  001542  1002               	iorwf	(isspace@c+1)^0,w,c
  3066  001544  B4D8               	btfsc	status,2,c
  3067  001546  EFA7  F00A         	goto	u911
  3068  00154A  EFA9  F00A         	goto	u910
  3069  00154E                     u911:
  3070  00154E  EFC2  F00A         	goto	l1595
  3071  001552                     u910:
  3072  001552  0EF7               	movlw	247
  3073  001554  6E03               	movwf	??_isspace^0,c
  3074  001556  0EFF               	movlw	255
  3075  001558  6E04               	movwf	(??_isspace+1)^0,c
  3076  00155A  C001  F005         	movff	isspace@c,??_isspace+2
  3077  00155E  C002  F006         	movff	isspace@c+1,??_isspace+3
  3078  001562  5003               	movf	??_isspace^0,w,c
  3079  001564  2605               	addwf	(??_isspace+2)^0,f,c
  3080  001566  5004               	movf	(??_isspace+1)^0,w,c
  3081  001568  2206               	addwfc	(??_isspace+3)^0,f,c
  3082  00156A  5006               	movf	(??_isspace+3)^0,w,c
  3083  00156C  E109               	bnz	u920
  3084  00156E  0E05               	movlw	5
  3085  001570  5C05               	subwf	(??_isspace+2)^0,w,c
  3086  001572  A0D8               	btfss	status,0,c
  3087  001574  EFBE  F00A         	goto	u921
  3088  001578  EFC0  F00A         	goto	u920
  3089  00157C                     u921:
  3090  00157C  EFC2  F00A         	goto	l1595
  3091  001580                     u920:
  3092  001580  0E00               	movlw	0
  3093  001582  6E07               	movwf	_isspace$898^0,c
  3094  001584                     l1595:
  3095  001584  C007  F001         	movff	_isspace$898,?_isspace
  3096  001588  6A02               	clrf	(?_isspace+1)^0,c
  3097  00158A  0012               	return		;funcret
  3098  00158C                     __end_of_isspace:
  3099                           	callstack 0
  3100                           
  3101 ;; *************** function _isdigit *****************
  3102 ;; Defined at:
  3103 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  c               2    0[COMRAM] int 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  2    0[COMRAM] int 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3117 ;;      Params:         2       0       0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0       0       0
  3119 ;;      Temps:          4       0       0       0       0       0       0
  3120 ;;      Totals:         6       0       0       0       0       0       0
  3121 ;;Total ram usage:        6 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; Hardware stack levels required when called: 1
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_vfpfcnvrt
  3128 ;;		_atoi
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text14
  3133  0016CC                     __ptext14:
  3134                           	callstack 0
  3135  0016CC                     _isdigit:
  3136                           	callstack 26
  3137  0016CC  0ED0               	movlw	208
  3138  0016CE  6E03               	movwf	??_isdigit^0,c
  3139  0016D0  0EFF               	movlw	255
  3140  0016D2  6E04               	movwf	(??_isdigit+1)^0,c
  3141  0016D4  C001  F005         	movff	isdigit@c,??_isdigit+2
  3142  0016D8  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  3143  0016DC  5003               	movf	??_isdigit^0,w,c
  3144  0016DE  2605               	addwf	(??_isdigit+2)^0,f,c
  3145  0016E0  5004               	movf	(??_isdigit+1)^0,w,c
  3146  0016E2  2206               	addwfc	(??_isdigit+3)^0,f,c
  3147  0016E4  5006               	movf	(??_isdigit+3)^0,w,c
  3148  0016E6  E10A               	bnz	u890
  3149  0016E8  0E0A               	movlw	10
  3150  0016EA  5C05               	subwf	(??_isdigit+2)^0,w,c
  3151  0016EC  A0D8               	btfss	status,0,c
  3152  0016EE  EF7B  F00B         	goto	u891
  3153  0016F2  EF7E  F00B         	goto	u890
  3154  0016F6                     u891:
  3155  0016F6  0E01               	movlw	1
  3156  0016F8  EF7F  F00B         	goto	u900
  3157  0016FC                     u890:
  3158  0016FC  0E00               	movlw	0
  3159  0016FE                     u900:
  3160  0016FE  6E01               	movwf	?_isdigit^0,c
  3161  001700  6A02               	clrf	(?_isdigit+1)^0,c
  3162  001702  0012               	return		;funcret
  3163  001704                     __end_of_isdigit:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function ___wmul *****************
  3167 ;; Defined at:
  3168 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  multiplier      2    0[COMRAM] unsigned int 
  3171 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  product         2    4[COMRAM] unsigned int 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  2    0[COMRAM] unsigned int 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0, prodl, prodh
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3183 ;;      Params:         4       0       0       0       0       0       0
  3184 ;;      Locals:         2       0       0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0
  3186 ;;      Totals:         6       0       0       0       0       0       0
  3187 ;;Total ram usage:        6 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_atoi
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text15
  3198  001792                     __ptext15:
  3199                           	callstack 0
  3200  001792                     ___wmul:
  3201                           	callstack 25
  3202  001792  5001               	movf	___wmul@multiplier^0,w,c
  3203  001794  0203               	mulwf	___wmul@multiplicand^0,c
  3204  001796  CFF3 F005          	movff	prodl,___wmul@product
  3205  00179A  CFF4 F006          	movff	prodh,___wmul@product+1
  3206  00179E  5001               	movf	___wmul@multiplier^0,w,c
  3207  0017A0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3208  0017A2  50F3               	movf	243,w,c
  3209  0017A4  2606               	addwf	(___wmul@product+1)^0,f,c
  3210  0017A6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3211  0017A8  0203               	mulwf	___wmul@multiplicand^0,c
  3212  0017AA  50F3               	movf	243,w,c
  3213  0017AC  2606               	addwf	(___wmul@product+1)^0,f,c
  3214  0017AE  C005  F001         	movff	___wmul@product,?___wmul
  3215  0017B2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3216  0017B6  0012               	return		;funcret
  3217  0017B8                     __end_of___wmul:
  3218                           	callstack 0
  3219                           
  3220 ;; *************** function _StartSignal *****************
  3221 ;; Defined at:
  3222 ;;		line 21 in file "main_DHT22_LCD.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3236 ;;      Params:         0       0       0       0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0       0       0
  3238 ;;      Temps:          1       0       0       0       0       0       0
  3239 ;;      Totals:         1       0       0       0       0       0       0
  3240 ;;Total ram usage:        1 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 1
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text16
  3251  0017FA                     __ptext16:
  3252                           	callstack 0
  3253  0017FA                     _StartSignal:
  3254                           	callstack 29
  3255  0017FA                     
  3256                           ;main_DHT22_LCD.c: 23:     TRISAbits.RA0 = 0;
  3257  0017FA  9092               	bcf	146,0,c	;volatile
  3258                           
  3259                           ;main_DHT22_LCD.c: 24:     PORTAbits.RA0 = 0;
  3260  0017FC  9080               	bcf	128,0,c	;volatile
  3261  0017FE                     
  3262                           ;main_DHT22_LCD.c: 25:     _delay((unsigned long)((18)*(8000000/4000.0)));
  3263  0017FE  0E2F               	movlw	47
  3264  001800  6E01               	movwf	??_StartSignal^0,c
  3265  001802  0EC0               	movlw	192
  3266  001804                     u1447:
  3267  001804  2EE8               	decfsz	wreg,f,c
  3268  001806  D7FE               	bra	u1447
  3269  001808  2E01               	decfsz	??_StartSignal^0,f,c
  3270  00180A  D7FC               	bra	u1447
  3271  00180C                     
  3272                           ;main_DHT22_LCD.c: 26:     TRISAbits.RA0 = 1;
  3273  00180C  8092               	bsf	146,0,c	;volatile
  3274                           
  3275                           ;main_DHT22_LCD.c: 27:     _delay((unsigned long)((80)*(8000000/4000000.0)));
  3276  00180E  0E35               	movlw	53
  3277  001810                     u1457:
  3278  001810  2EE8               	decfsz	wreg,f,c
  3279  001812  D7FE               	bra	u1457
  3280  001814  F000               	nop	
  3281  001816  0012               	return		;funcret
  3282  001818                     __end_of_StartSignal:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _ReadByte *****************
  3286 ;; Defined at:
  3287 ;;		line 56 in file "main_DHT22_LCD.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  i               2    7[COMRAM] int 
  3292 ;;  num             2    5[COMRAM] unsigned short 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  2    0[COMRAM] unsigned short 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3302 ;;      Params:         2       0       0       0       0       0       0
  3303 ;;      Locals:         4       0       0       0       0       0       0
  3304 ;;      Temps:          3       0       0       0       0       0       0
  3305 ;;      Totals:         9       0       0       0       0       0       0
  3306 ;;Total ram usage:        9 bytes
  3307 ;; Hardware stack levels used: 1
  3308 ;; Hardware stack levels required when called: 1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_main
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text17
  3317  0012C4                     __ptext17:
  3318                           	callstack 0
  3319  0012C4                     _ReadByte:
  3320                           	callstack 29
  3321  0012C4                     
  3322                           ;main_DHT22_LCD.c: 58:     unsigned short num = 0;
  3323  0012C4  0E00               	movlw	0
  3324  0012C6  6E07               	movwf	(ReadByte@num+1)^0,c
  3325  0012C8  0E00               	movlw	0
  3326  0012CA  6E06               	movwf	ReadByte@num^0,c
  3327  0012CC                     
  3328                           ;main_DHT22_LCD.c: 59:     TRISAbits.RA0 = 1;
  3329  0012CC  8092               	bsf	146,0,c	;volatile
  3330                           
  3331                           ;main_DHT22_LCD.c: 60:     for(int i=0;i<8;i++)
  3332  0012CE  0E00               	movlw	0
  3333  0012D0  6E09               	movwf	(ReadByte@i+1)^0,c
  3334  0012D2  0E00               	movlw	0
  3335  0012D4  6E08               	movwf	ReadByte@i^0,c
  3336  0012D6                     l99:
  3337  0012D6  A080               	btfss	128,0,c	;volatile
  3338  0012D8  EF70  F009         	goto	u1311
  3339  0012DC  EF72  F009         	goto	u1310
  3340  0012E0                     u1311:
  3341  0012E0  EF6B  F009         	goto	l99
  3342  0012E4                     u1310:
  3343  0012E4                     
  3344                           ;main_DHT22_LCD.c: 63:         TMR2 = 0;
  3345  0012E4  0E00               	movlw	0
  3346  0012E6  6ECC               	movwf	204,c	;volatile
  3347  0012E8                     
  3348                           ;main_DHT22_LCD.c: 64:         TMR2ON = 1;
  3349  0012E8  84CA               	bsf	4042,2,c	;volatile
  3350  0012EA                     l102:
  3351  0012EA  B080               	btfsc	128,0,c	;volatile
  3352  0012EC  EF7A  F009         	goto	u1321
  3353  0012F0  EF7C  F009         	goto	u1320
  3354  0012F4                     u1321:
  3355  0012F4  EF75  F009         	goto	l102
  3356  0012F8                     u1320:
  3357  0012F8                     
  3358                           ;main_DHT22_LCD.c: 66:         TMR2ON = 0;
  3359  0012F8  94CA               	bcf	4042,2,c	;volatile
  3360  0012FA                     
  3361                           ;main_DHT22_LCD.c: 67:         if(TMR2>40)
  3362  0012FA  0E28               	movlw	40
  3363  0012FC  64CC               	cpfsgt	204,c	;volatile
  3364  0012FE  EF83  F009         	goto	u1331
  3365  001302  EF85  F009         	goto	u1330
  3366  001306                     u1331:
  3367  001306  EF99  F009         	goto	l1899
  3368  00130A                     u1330:
  3369  00130A                     
  3370                           ;main_DHT22_LCD.c: 68:         {;main_DHT22_LCD.c: 69:             num |= 1<<(7-i);
  3371  00130A  5008               	movf	ReadByte@i^0,w,c
  3372  00130C  0807               	sublw	7
  3373  00130E  6E03               	movwf	??_ReadByte^0,c
  3374  001310  0E01               	movlw	1
  3375  001312  6E04               	movwf	(??_ReadByte+1)^0,c
  3376  001314  0E00               	movlw	0
  3377  001316  6E05               	movwf	(??_ReadByte+2)^0,c
  3378  001318  2A03               	incf	??_ReadByte^0,f,c
  3379  00131A  EF92  F009         	goto	u1344
  3380  00131E                     u1345:
  3381  00131E  90D8               	bcf	status,0,c
  3382  001320  3604               	rlcf	(??_ReadByte+1)^0,f,c
  3383  001322  3605               	rlcf	(??_ReadByte+2)^0,f,c
  3384  001324                     u1344:
  3385  001324  2E03               	decfsz	??_ReadByte^0,f,c
  3386  001326  EF8F  F009         	goto	u1345
  3387  00132A  5004               	movf	(??_ReadByte+1)^0,w,c
  3388  00132C  1206               	iorwf	ReadByte@num^0,f,c
  3389  00132E  5005               	movf	(??_ReadByte+2)^0,w,c
  3390  001330  1207               	iorwf	(ReadByte@num+1)^0,f,c
  3391  001332                     l1899:
  3392                           
  3393                           ;main_DHT22_LCD.c: 71:     }
  3394  001332  4A08               	infsnz	ReadByte@i^0,f,c
  3395  001334  2A09               	incf	(ReadByte@i+1)^0,f,c
  3396  001336  BE09               	btfsc	(ReadByte@i+1)^0,7,c
  3397  001338  EFA7  F009         	goto	u1351
  3398  00133C  5009               	movf	(ReadByte@i+1)^0,w,c
  3399  00133E  E109               	bnz	u1350
  3400  001340  0E08               	movlw	8
  3401  001342  5C08               	subwf	ReadByte@i^0,w,c
  3402  001344  A0D8               	btfss	status,0,c
  3403  001346  EFA7  F009         	goto	u1351
  3404  00134A  EFA9  F009         	goto	u1350
  3405  00134E                     u1351:
  3406  00134E  EF6B  F009         	goto	l99
  3407  001352                     u1350:
  3408  001352                     
  3409                           ;main_DHT22_LCD.c: 72:     return num;
  3410  001352  C006  F001         	movff	ReadByte@num,?_ReadByte
  3411  001356  C007  F002         	movff	ReadByte@num+1,?_ReadByte+1
  3412  00135A  0012               	return		;funcret
  3413  00135C                     __end_of_ReadByte:
  3414                           	callstack 0
  3415                           
  3416 ;; *************** function _LCD_initialize *****************
  3417 ;; Defined at:
  3418 ;;		line 132 in file "./config.h"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3432 ;;      Params:         0       0       0       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0
  3434 ;;      Temps:          1       0       0       0       0       0       0
  3435 ;;      Totals:         1       0       0       0       0       0       0
  3436 ;;Total ram usage:        1 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 3
  3439 ;; This function calls:
  3440 ;;		_LCDPutCmd
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text18
  3447  001658                     __ptext18:
  3448                           	callstack 0
  3449  001658                     _LCD_initialize:
  3450                           	callstack 27
  3451  001658                     
  3452                           ;./config.h: 134:     PORTD = 0;
  3453  001658  0E00               	movlw	0
  3454  00165A  6E83               	movwf	131,c	;volatile
  3455                           
  3456                           ;./config.h: 135:     TRISD = 0X00;
  3457  00165C  0E00               	movlw	0
  3458  00165E  6E95               	movwf	149,c	;volatile
  3459  001660                     
  3460                           ;./config.h: 136:     PORTDbits.RD7 = 1;
  3461  001660  8E83               	bsf	131,7,c	;volatile
  3462  001662                     
  3463                           ;./config.h: 137:     _delay((unsigned long)((15)*(8000000/4000.0)));
  3464  001662  0E27               	movlw	39
  3465  001664  6E05               	movwf	??_LCD_initialize^0,c
  3466  001666  0EF5               	movlw	245
  3467  001668                     u1467:
  3468  001668  2EE8               	decfsz	wreg,f,c
  3469  00166A  D7FE               	bra	u1467
  3470  00166C  2E05               	decfsz	??_LCD_initialize^0,f,c
  3471  00166E  D7FC               	bra	u1467
  3472  001670  F000               	nop	
  3473  001672                     
  3474                           ;./config.h: 138:     LCDPutCmd(0x32);
  3475  001672  0E32               	movlw	50
  3476  001674  EC49  F00B         	call	_LCDPutCmd
  3477  001678                     
  3478                           ;./config.h: 139:     LCDPutCmd(0x28);
  3479  001678  0E28               	movlw	40
  3480  00167A  EC49  F00B         	call	_LCDPutCmd
  3481  00167E                     
  3482                           ;./config.h: 140:     LCDPutCmd(0x0C);
  3483  00167E  0E0C               	movlw	12
  3484  001680  EC49  F00B         	call	_LCDPutCmd
  3485  001684                     
  3486                           ;./config.h: 141:     LCDPutCmd(0x01);
  3487  001684  0E01               	movlw	1
  3488  001686  EC49  F00B         	call	_LCDPutCmd
  3489  00168A                     
  3490                           ;./config.h: 142:     LCDPutCmd(0x06);
  3491  00168A  0E06               	movlw	6
  3492  00168C  EC49  F00B         	call	_LCDPutCmd
  3493  001690  0012               	return		;funcret
  3494  001692                     __end_of_LCD_initialize:
  3495                           	callstack 0
  3496                           
  3497 ;; *************** function _LCDPutStr *****************
  3498 ;; Defined at:
  3499 ;;		line 159 in file "./config.h"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  str             2    4[COMRAM] PTR const unsigned char 
  3502 ;;		 -> STR_6(17), STR_5(17), message1(14), message2(18), 
  3503 ;;		 -> STR_2(16), STR_1(12), 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  i               1    8[COMRAM] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3515 ;;      Params:         2       0       0       0       0       0       0
  3516 ;;      Locals:         1       0       0       0       0       0       0
  3517 ;;      Temps:          2       0       0       0       0       0       0
  3518 ;;      Totals:         5       0       0       0       0       0       0
  3519 ;;Total ram usage:        5 bytes
  3520 ;; Hardware stack levels used: 1
  3521 ;; Hardware stack levels required when called: 3
  3522 ;; This function calls:
  3523 ;;		_LCDPutChar
  3524 ;; This function is called by:
  3525 ;;		_main
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text19
  3530  0013F0                     __ptext19:
  3531                           	callstack 0
  3532  0013F0                     _LCDPutStr:
  3533                           	callstack 27
  3534  0013F0                     
  3535                           ;./config.h: 159: void LCDPutStr(const char *str);./config.h: 160: {;./config.h: 161:   
      +                            char i=0;
  3536  0013F0  0E00               	movlw	0
  3537  0013F2  6E09               	movwf	LCDPutStr@i^0,c
  3538                           
  3539                           ;./config.h: 164:     while (str[i])
  3540  0013F4  EF15  F00A         	goto	l1831
  3541  0013F8                     l1827:
  3542                           
  3543                           ;./config.h: 165:     {;./config.h: 167:     LCDPutChar(str[i++]);
  3544  0013F8  5009               	movf	LCDPutStr@i^0,w,c
  3545  0013FA  2405               	addwf	LCDPutStr@str^0,w,c
  3546  0013FC  6E07               	movwf	??_LCDPutStr^0,c
  3547  0013FE  0E00               	movlw	0
  3548  001400  2006               	addwfc	(LCDPutStr@str+1)^0,w,c
  3549  001402  6E08               	movwf	(??_LCDPutStr+1)^0,c
  3550  001404  C007  FFF6         	movff	??_LCDPutStr,tblptrl
  3551  001408  C008  FFF7         	movff	??_LCDPutStr+1,tblptrh
  3552  00140C  6AF8               	clrf	tblptru,c
  3553  00140E  0E05               	movlw	(high __ramtop+-1)
  3554  001410  64F7               	cpfsgt	tblptrh,c
  3555  001412  D003               	bra	u1197
  3556  001414  0008               	tblrd		*
  3557  001416  50F5               	movf	tablat,w,c
  3558  001418  D005               	bra	u1190
  3559  00141A                     u1197:
  3560  00141A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3561  00141E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3562  001422  50E7               	movf	indf1,w,c
  3563  001424                     u1190:
  3564  001424  EC9D  F00B         	call	_LCDPutChar
  3565  001428  2A09               	incf	LCDPutStr@i^0,f,c
  3566  00142A                     l1831:
  3567                           
  3568                           ;./config.h: 164:     while (str[i])
  3569  00142A  5009               	movf	LCDPutStr@i^0,w,c
  3570  00142C  2405               	addwf	LCDPutStr@str^0,w,c
  3571  00142E  6E07               	movwf	??_LCDPutStr^0,c
  3572  001430  0E00               	movlw	0
  3573  001432  2006               	addwfc	(LCDPutStr@str+1)^0,w,c
  3574  001434  6E08               	movwf	(??_LCDPutStr+1)^0,c
  3575  001436  C007  FFF6         	movff	??_LCDPutStr,tblptrl
  3576  00143A  C008  FFF7         	movff	??_LCDPutStr+1,tblptrh
  3577  00143E  6AF8               	clrf	tblptru,c
  3578  001440  0E05               	movlw	(high __ramtop+-1)
  3579  001442  64F7               	cpfsgt	tblptrh,c
  3580  001444  D003               	bra	u1207
  3581  001446  0008               	tblrd		*
  3582  001448  50F5               	movf	tablat,w,c
  3583  00144A  D005               	bra	u1200
  3584  00144C                     u1207:
  3585  00144C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3586  001450  CFF7 FFE2          	movff	tblptrh,fsr1h
  3587  001454  50E7               	movf	indf1,w,c
  3588  001456                     u1200:
  3589  001456  0900               	iorlw	0
  3590  001458  A4D8               	btfss	status,2,c
  3591  00145A  EF31  F00A         	goto	u1211
  3592  00145E  EF33  F00A         	goto	u1210
  3593  001462                     u1211:
  3594  001462  EFFC  F009         	goto	l1827
  3595  001466                     u1210:
  3596  001466  0012               	return		;funcret
  3597  001468                     __end_of_LCDPutStr:
  3598                           	callstack 0
  3599                           
  3600 ;; *************** function _LCDPutChar *****************
  3601 ;; Defined at:
  3602 ;;		line 145 in file "./config.h"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  ch              1    wreg     unsigned char 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  ch              1    3[COMRAM] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      void 
  3609 ;; Registers used:
  3610 ;;		wreg, status,2, status,0, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3616 ;;      Params:         0       0       0       0       0       0       0
  3617 ;;      Locals:         1       0       0       0       0       0       0
  3618 ;;      Temps:          1       0       0       0       0       0       0
  3619 ;;      Totals:         2       0       0       0       0       0       0
  3620 ;;Total ram usage:        2 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; Hardware stack levels required when called: 2
  3623 ;; This function calls:
  3624 ;;		_LCDWriteNibble
  3625 ;; This function is called by:
  3626 ;;		_LCDPutStr
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text20
  3631  00173A                     __ptext20:
  3632                           	callstack 0
  3633  00173A                     _LCDPutChar:
  3634                           	callstack 27
  3635                           
  3636                           ;incstack = 0
  3637                           ;LCDPutChar@ch stored from wreg
  3638  00173A  6E04               	movwf	LCDPutChar@ch^0,c
  3639  00173C                     
  3640                           ;./config.h: 145: void LCDPutChar(char ch);./config.h: 146: {;./config.h: 147:     _dela
      +                          y((unsigned long)((5)*(8000000/4000.0)));
  3641  00173C  0E0D               	movlw	13
  3642  00173E  6E03               	movwf	??_LCDPutChar^0,c
  3643  001740  0EFC               	movlw	252
  3644  001742                     u1477:
  3645  001742  2EE8               	decfsz	wreg,f,c
  3646  001744  D7FE               	bra	u1477
  3647  001746  2E03               	decfsz	??_LCDPutChar^0,f,c
  3648  001748  D7FC               	bra	u1477
  3649  00174A                     
  3650                           ;./config.h: 150:     LCDWriteNibble(ch,1);
  3651  00174A  0E01               	movlw	1
  3652  00174C  6E01               	movwf	LCDWriteNibble@rs^0,c
  3653  00174E  5004               	movf	LCDPutChar@ch^0,w,c
  3654  001750  ECB3  F00B         	call	_LCDWriteNibble
  3655  001754                     
  3656                           ;./config.h: 153:     ch = (ch << 4);
  3657  001754  3804               	swapf	LCDPutChar@ch^0,w,c
  3658  001756  0BF0               	andlw	240
  3659  001758  6E04               	movwf	LCDPutChar@ch^0,c
  3660  00175A                     
  3661                           ;./config.h: 156:     LCDWriteNibble(ch,1);
  3662  00175A  0E01               	movlw	1
  3663  00175C  6E01               	movwf	LCDWriteNibble@rs^0,c
  3664  00175E  5004               	movf	LCDPutChar@ch^0,w,c
  3665  001760  ECB3  F00B         	call	_LCDWriteNibble
  3666  001764  0012               	return		;funcret
  3667  001766                     __end_of_LCDPutChar:
  3668                           	callstack 0
  3669                           
  3670 ;; *************** function _LCDGoto *****************
  3671 ;; Defined at:
  3672 ;;		line 171 in file "./config.h"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  pos             1    wreg     unsigned char 
  3675 ;;  ln              1    4[COMRAM] unsigned char 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  pos             1    9[COMRAM] unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3687 ;;      Params:         1       0       0       0       0       0       0
  3688 ;;      Locals:         3       0       0       0       0       0       0
  3689 ;;      Temps:          2       0       0       0       0       0       0
  3690 ;;      Totals:         6       0       0       0       0       0       0
  3691 ;;Total ram usage:        6 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 3
  3694 ;; This function calls:
  3695 ;;		_LCDPutCmd
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text21
  3702  001468                     __ptext21:
  3703                           	callstack 0
  3704  001468                     _LCDGoto:
  3705                           	callstack 27
  3706                           
  3707                           ;incstack = 0
  3708                           ;LCDGoto@pos stored from wreg
  3709  001468  6E0A               	movwf	LCDGoto@pos^0,c
  3710  00146A                     
  3711                           ;./config.h: 171: void LCDGoto(char pos,char ln);./config.h: 172: {;./config.h: 174:    
      +                           if ((ln > (2 -1)) || (pos > (16 -1)))
  3712  00146A  0E02               	movlw	2
  3713  00146C  6005               	cpfslt	LCDGoto@ln^0,c
  3714  00146E  EF3B  F00A         	goto	u1221
  3715  001472  EF3D  F00A         	goto	u1220
  3716  001476                     u1221:
  3717  001476  EF6B  F00A         	goto	l52
  3718  00147A                     u1220:
  3719  00147A  0E0F               	movlw	15
  3720  00147C  640A               	cpfsgt	LCDGoto@pos^0,c
  3721  00147E  EF43  F00A         	goto	u1231
  3722  001482  EF45  F00A         	goto	u1230
  3723  001486                     u1231:
  3724  001486  EF47  F00A         	goto	l1837
  3725  00148A                     u1230:
  3726  00148A  EF6B  F00A         	goto	l52
  3727  00148E                     l1837:
  3728                           
  3729                           ;./config.h: 181:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  3730  00148E  0405               	decf	LCDGoto@ln^0,w,c
  3731  001490  B4D8               	btfsc	status,2,c
  3732  001492  EF4D  F00A         	goto	u1241
  3733  001496  EF4F  F00A         	goto	u1240
  3734  00149A                     u1241:
  3735  00149A  EF59  F00A         	goto	l1841
  3736  00149E                     u1240:
  3737  00149E  0E80               	movlw	128
  3738  0014A0  C00A  F006         	movff	LCDGoto@pos,??_LCDGoto
  3739  0014A4  6A07               	clrf	(??_LCDGoto+1)^0,c
  3740  0014A6  1006               	iorwf	??_LCDGoto^0,w,c
  3741  0014A8  6E08               	movwf	_LCDGoto$275^0,c
  3742  0014AA  5007               	movf	(??_LCDGoto+1)^0,w,c
  3743  0014AC  6E09               	movwf	(_LCDGoto$275+1)^0,c
  3744  0014AE  EF61  F00A         	goto	l1843
  3745  0014B2                     l1841:
  3746  0014B2  0EC0               	movlw	192
  3747  0014B4  C00A  F006         	movff	LCDGoto@pos,??_LCDGoto
  3748  0014B8  6A07               	clrf	(??_LCDGoto+1)^0,c
  3749  0014BA  1006               	iorwf	??_LCDGoto^0,w,c
  3750  0014BC  6E08               	movwf	_LCDGoto$275^0,c
  3751  0014BE  5007               	movf	(??_LCDGoto+1)^0,w,c
  3752  0014C0  6E09               	movwf	(_LCDGoto$275+1)^0,c
  3753  0014C2                     l1843:
  3754  0014C2  5008               	movf	_LCDGoto$275^0,w,c
  3755  0014C4  EC49  F00B         	call	_LCDPutCmd
  3756  0014C8                     
  3757                           ;./config.h: 184:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3758  0014C8  0E0D               	movlw	13
  3759  0014CA  6E06               	movwf	??_LCDGoto^0,c
  3760  0014CC  0EFC               	movlw	252
  3761  0014CE                     u1487:
  3762  0014CE  2EE8               	decfsz	wreg,f,c
  3763  0014D0  D7FE               	bra	u1487
  3764  0014D2  2E06               	decfsz	??_LCDGoto^0,f,c
  3765  0014D4  D7FC               	bra	u1487
  3766  0014D6                     l52:
  3767  0014D6  0012               	return		;funcret
  3768  0014D8                     __end_of_LCDGoto:
  3769                           	callstack 0
  3770                           
  3771 ;; *************** function _LCDPutCmd *****************
  3772 ;; Defined at:
  3773 ;;		line 123 in file "./config.h"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  ch              1    wreg     unsigned char 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  ch              1    3[COMRAM] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0, cstack
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3787 ;;      Params:         0       0       0       0       0       0       0
  3788 ;;      Locals:         1       0       0       0       0       0       0
  3789 ;;      Temps:          1       0       0       0       0       0       0
  3790 ;;      Totals:         2       0       0       0       0       0       0
  3791 ;;Total ram usage:        2 bytes
  3792 ;; Hardware stack levels used: 1
  3793 ;; Hardware stack levels required when called: 2
  3794 ;; This function calls:
  3795 ;;		_LCDWriteNibble
  3796 ;; This function is called by:
  3797 ;;		_LCD_initialize
  3798 ;;		_LCDGoto
  3799 ;;		_main
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text22
  3804  001692                     __ptext22:
  3805                           	callstack 0
  3806  001692                     _LCDPutCmd:
  3807                           	callstack 27
  3808                           
  3809                           ;incstack = 0
  3810                           ;LCDPutCmd@ch stored from wreg
  3811  001692  6E04               	movwf	LCDPutCmd@ch^0,c
  3812  001694                     
  3813                           ;./config.h: 123: void LCDPutCmd(char ch);./config.h: 124: {;./config.h: 125:     _delay
      +                          ((unsigned long)((5)*(8000000/4000.0)));
  3814  001694  0E0D               	movlw	13
  3815  001696  6E03               	movwf	??_LCDPutCmd^0,c
  3816  001698  0EFC               	movlw	252
  3817  00169A                     u1497:
  3818  00169A  2EE8               	decfsz	wreg,f,c
  3819  00169C  D7FE               	bra	u1497
  3820  00169E  2E03               	decfsz	??_LCDPutCmd^0,f,c
  3821  0016A0  D7FC               	bra	u1497
  3822  0016A2                     
  3823                           ;./config.h: 126:     LCDWriteNibble(ch, 0);
  3824  0016A2  0E00               	movlw	0
  3825  0016A4  6E01               	movwf	LCDWriteNibble@rs^0,c
  3826  0016A6  5004               	movf	LCDPutCmd@ch^0,w,c
  3827  0016A8  ECB3  F00B         	call	_LCDWriteNibble
  3828  0016AC                     
  3829                           ;./config.h: 127:     ch = (ch<<4);
  3830  0016AC  3804               	swapf	LCDPutCmd@ch^0,w,c
  3831  0016AE  0BF0               	andlw	240
  3832  0016B0  6E04               	movwf	LCDPutCmd@ch^0,c
  3833  0016B2                     
  3834                           ;./config.h: 128:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3835  0016B2  0E03               	movlw	3
  3836  0016B4  6E03               	movwf	??_LCDPutCmd^0,c
  3837  0016B6  0E98               	movlw	152
  3838  0016B8                     u1507:
  3839  0016B8  2EE8               	decfsz	wreg,f,c
  3840  0016BA  D7FE               	bra	u1507
  3841  0016BC  2E03               	decfsz	??_LCDPutCmd^0,f,c
  3842  0016BE  D7FC               	bra	u1507
  3843  0016C0                     
  3844                           ;./config.h: 129:     LCDWriteNibble(ch, 0);
  3845  0016C0  0E00               	movlw	0
  3846  0016C2  6E01               	movwf	LCDWriteNibble@rs^0,c
  3847  0016C4  5004               	movf	LCDPutCmd@ch^0,w,c
  3848  0016C6  ECB3  F00B         	call	_LCDWriteNibble
  3849  0016CA  0012               	return		;funcret
  3850  0016CC                     __end_of_LCDPutCmd:
  3851                           	callstack 0
  3852                           
  3853 ;; *************** function _LCDWriteNibble *****************
  3854 ;; Defined at:
  3855 ;;		line 112 in file "./config.h"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  ch              1    wreg     unsigned char 
  3858 ;;  rs              1    0[COMRAM] unsigned char 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  ch              1    1[COMRAM] unsigned char 
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      void 
  3863 ;; Registers used:
  3864 ;;		wreg, status,2, status,0
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3870 ;;      Params:         1       0       0       0       0       0       0
  3871 ;;      Locals:         1       0       0       0       0       0       0
  3872 ;;      Temps:          0       0       0       0       0       0       0
  3873 ;;      Totals:         2       0       0       0       0       0       0
  3874 ;;Total ram usage:        2 bytes
  3875 ;; Hardware stack levels used: 1
  3876 ;; Hardware stack levels required when called: 1
  3877 ;; This function calls:
  3878 ;;		Nothing
  3879 ;; This function is called by:
  3880 ;;		_LCDPutCmd
  3881 ;;		_LCDPutChar
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text23
  3886  001766                     __ptext23:
  3887                           	callstack 0
  3888  001766                     _LCDWriteNibble:
  3889                           	callstack 27
  3890                           
  3891                           ;incstack = 0
  3892                           ;LCDWriteNibble@ch stored from wreg
  3893  001766  6E02               	movwf	LCDWriteNibble@ch^0,c
  3894  001768                     
  3895                           ;./config.h: 112: void LCDWriteNibble(char ch , char rs);./config.h: 113: {;./config.h: 
      +                          114:     ch = (ch>>4);
  3896  001768  3802               	swapf	LCDWriteNibble@ch^0,w,c
  3897  00176A  0B0F               	andlw	15
  3898  00176C  6E02               	movwf	LCDWriteNibble@ch^0,c
  3899                           
  3900                           ;./config.h: 115:     ch = (ch& 0x0F);
  3901  00176E  5002               	movf	LCDWriteNibble@ch^0,w,c
  3902  001770  0B0F               	andlw	15
  3903  001772  6E02               	movwf	LCDWriteNibble@ch^0,c
  3904                           
  3905                           ;./config.h: 116:     PORTD = (PORTD & 0XF0);
  3906  001774  5083               	movf	131,w,c	;volatile
  3907  001776  0BF0               	andlw	240
  3908  001778  6E83               	movwf	131,c	;volatile
  3909                           
  3910                           ;./config.h: 117:     PORTD = (PORTD | ch);
  3911  00177A  5083               	movf	131,w,c	;volatile
  3912  00177C  1002               	iorwf	LCDWriteNibble@ch^0,w,c
  3913  00177E  6E83               	movwf	131,c	;volatile
  3914  001780                     
  3915                           ;./config.h: 118:     PORTDbits.RD4 = rs;
  3916  001780  B001               	btfsc	LCDWriteNibble@rs^0,0,c
  3917  001782  D002               	bra	u1075
  3918  001784  9883               	bcf	131,4,c	;volatile
  3919  001786  D001               	bra	u1076
  3920  001788                     u1075:
  3921  001788  8883               	bsf	131,4,c	;volatile
  3922  00178A                     u1076:
  3923  00178A                     
  3924                           ;./config.h: 119:     PORTDbits.RD5 = 0;
  3925  00178A  9A83               	bcf	131,5,c	;volatile
  3926  00178C                     
  3927                           ;./config.h: 120:     PORTDbits.RD6 = 1;
  3928  00178C  8C83               	bsf	131,6,c	;volatile
  3929  00178E                     
  3930                           ;./config.h: 121:     PORTDbits.RD6 = 0;
  3931  00178E  9C83               	bcf	131,6,c	;volatile
  3932  001790  0012               	return		;funcret
  3933  001792                     __end_of_LCDWriteNibble:
  3934                           	callstack 0
  3935                           
  3936 ;; *************** function _CheckResponse *****************
  3937 ;; Defined at:
  3938 ;;		line 30 in file "main_DHT22_LCD.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;		None
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;		None
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  2    0[COMRAM] unsigned short 
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3952 ;;      Params:         2       0       0       0       0       0       0
  3953 ;;      Locals:         0       0       0       0       0       0       0
  3954 ;;      Temps:          0       0       0       0       0       0       0
  3955 ;;      Totals:         2       0       0       0       0       0       0
  3956 ;;Total ram usage:        2 bytes
  3957 ;; Hardware stack levels used: 1
  3958 ;; Hardware stack levels required when called: 1
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_main
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text24
  3967  00135C                     __ptext24:
  3968                           	callstack 0
  3969  00135C                     _CheckResponse:
  3970                           	callstack 29
  3971  00135C                     
  3972                           ;main_DHT22_LCD.c: 32:     TOUT = 0;
  3973  00135C  0E00               	movlw	0
  3974  00135E  0100               	movlb	0	; () banked
  3975  001360  6F95               	movwf	(_TOUT+1)& (0+255),b
  3976  001362  0E00               	movlw	0
  3977  001364  6F94               	movwf	_TOUT& (0+255),b
  3978                           
  3979                           ;main_DHT22_LCD.c: 33:     TMR2 = 0;
  3980  001366  0E00               	movlw	0
  3981  001368  6ECC               	movwf	204,c	;volatile
  3982  00136A                     
  3983                           ; BSR set to: 0
  3984                           ;main_DHT22_LCD.c: 34:     TMR2ON = 1;
  3985  00136A  84CA               	bsf	4042,2,c	;volatile
  3986  00136C                     l80:
  3987                           
  3988                           ; BSR set to: 0
  3989  00136C  B080               	btfsc	128,0,c	;volatile
  3990  00136E  EFBB  F009         	goto	u1251
  3991  001372  EFBD  F009         	goto	u1250
  3992  001376                     u1251:
  3993  001376  EFC6  F009         	goto	l1859
  3994  00137A                     u1250:
  3995  00137A                     
  3996                           ; BSR set to: 0
  3997  00137A  5194               	movf	_TOUT& (0+255),w,b
  3998  00137C  1195               	iorwf	(_TOUT+1)& (0+255),w,b
  3999  00137E  B4D8               	btfsc	status,2,c
  4000  001380  EFC4  F009         	goto	u1261
  4001  001384  EFC6  F009         	goto	u1260
  4002  001388                     u1261:
  4003  001388  EFB6  F009         	goto	l80
  4004  00138C                     u1260:
  4005  00138C                     l1859:
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;main_DHT22_LCD.c: 36:     if(TOUT)
  4009  00138C  5194               	movf	_TOUT& (0+255),w,b
  4010  00138E  1195               	iorwf	(_TOUT+1)& (0+255),w,b
  4011  001390  B4D8               	btfsc	status,2,c
  4012  001392  EFCD  F009         	goto	u1271
  4013  001396  EFCF  F009         	goto	u1270
  4014  00139A                     u1271:
  4015  00139A  EFD5  F009         	goto	l1867
  4016  00139E                     u1270:
  4017  00139E                     l1861:
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;main_DHT22_LCD.c: 37:     {;main_DHT22_LCD.c: 38:         return 0;
  4021  00139E  0E00               	movlw	0
  4022  0013A0  6E02               	movwf	(?_CheckResponse+1)^0,c
  4023  0013A2  0E00               	movlw	0
  4024  0013A4  6E01               	movwf	?_CheckResponse^0,c
  4025  0013A6  EFF7  F009         	goto	l86
  4026  0013AA                     l1867:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;main_DHT22_LCD.c: 41:     {;main_DHT22_LCD.c: 42:         TMR2 = 0;
  4030  0013AA  0E00               	movlw	0
  4031  0013AC  6ECC               	movwf	204,c	;volatile
  4032  0013AE                     l88:
  4033                           
  4034                           ; BSR set to: 0
  4035  0013AE  A080               	btfss	128,0,c	;volatile
  4036  0013B0  EFDC  F009         	goto	u1281
  4037  0013B4  EFDE  F009         	goto	u1280
  4038  0013B8                     u1281:
  4039  0013B8  EFE7  F009         	goto	l1871
  4040  0013BC                     u1280:
  4041  0013BC                     
  4042                           ; BSR set to: 0
  4043  0013BC  5194               	movf	_TOUT& (0+255),w,b
  4044  0013BE  1195               	iorwf	(_TOUT+1)& (0+255),w,b
  4045  0013C0  B4D8               	btfsc	status,2,c
  4046  0013C2  EFE5  F009         	goto	u1291
  4047  0013C6  EFE7  F009         	goto	u1290
  4048  0013CA                     u1291:
  4049  0013CA  EFD7  F009         	goto	l88
  4050  0013CE                     u1290:
  4051  0013CE                     l1871:
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;main_DHT22_LCD.c: 44:         if(TOUT)
  4055  0013CE  5194               	movf	_TOUT& (0+255),w,b
  4056  0013D0  1195               	iorwf	(_TOUT+1)& (0+255),w,b
  4057  0013D2  B4D8               	btfsc	status,2,c
  4058  0013D4  EFEE  F009         	goto	u1301
  4059  0013D8  EFF0  F009         	goto	u1300
  4060  0013DC                     u1301:
  4061  0013DC  EFF2  F009         	goto	l93
  4062  0013E0                     u1300:
  4063  0013E0  EFCF  F009         	goto	l1861
  4064  0013E4                     l93:
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;main_DHT22_LCD.c: 49:         {;main_DHT22_LCD.c: 50:             TMR2ON = 0;
  4068  0013E4  94CA               	bcf	4042,2,c	;volatile
  4069  0013E6                     
  4070                           ; BSR set to: 0
  4071                           ;main_DHT22_LCD.c: 51:             return 1;
  4072  0013E6  0E00               	movlw	0
  4073  0013E8  6E02               	movwf	(?_CheckResponse+1)^0,c
  4074  0013EA  0E01               	movlw	1
  4075  0013EC  6E01               	movwf	?_CheckResponse^0,c
  4076  0013EE                     l86:
  4077                           
  4078                           ; BSR set to: 0
  4079  0013EE  0012               	return		;funcret
  4080  0013F0                     __end_of_CheckResponse:
  4081                           	callstack 0
  4082                           
  4083 ;; *************** function _tc_init *****************
  4084 ;; Defined at:
  4085 ;;		line 74 in file "main_DHT22_LCD.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4099 ;;      Params:         0       0       0       0       0       0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0
  4102 ;;      Totals:         0       0       0       0       0       0       0
  4103 ;;Total ram usage:        0 bytes
  4104 ;; Hardware stack levels used: 1
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		Interrupt level 2
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	intcode
  4113  000008                     __pintcode:
  4114                           	callstack 0
  4115  000008                     _tc_init:
  4116                           	callstack 22
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;incstack = 0
  4120  000008  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4121  00000A  EDDC  F00B         	call	int_func,f	;refresh shadow registers
  4122                           
  4123                           	psect	intcode_body
  4124  0017B8                     __pintcode_body:
  4125                           	callstack 22
  4126  0017B8                     int_func:
  4127                           	callstack 22
  4128  0017B8  0006               	pop		; remove dummy address from shadow register refresh
  4129  0017BA                     
  4130                           ;main_DHT22_LCD.c: 76:     if(TMR2IF)
  4131  0017BA  A29E               	btfss	3998,1,c	;volatile
  4132  0017BC  EFE2  F00B         	goto	i2u136_41
  4133  0017C0  EFE4  F00B         	goto	i2u136_40
  4134  0017C4                     i2u136_41:
  4135  0017C4  EFEB  F00B         	goto	i2l112
  4136  0017C8                     i2u136_40:
  4137  0017C8                     
  4138                           ;main_DHT22_LCD.c: 77:     {;main_DHT22_LCD.c: 78:         TOUT = 1;
  4139  0017C8  0E00               	movlw	0
  4140  0017CA  0100               	movlb	0	; () banked
  4141  0017CC  6F95               	movwf	(_TOUT+1)& (0+255),b
  4142  0017CE  0E01               	movlw	1
  4143  0017D0  6F94               	movwf	_TOUT& (0+255),b
  4144  0017D2                     
  4145                           ; BSR set to: 0
  4146                           ;main_DHT22_LCD.c: 79:         TMR2ON = 0;
  4147  0017D2  94CA               	bcf	4042,2,c	;volatile
  4148  0017D4                     
  4149                           ; BSR set to: 0
  4150                           ;main_DHT22_LCD.c: 80:         TMR2IF = 0;
  4151  0017D4  929E               	bcf	3998,1,c	;volatile
  4152  0017D6                     i2l112:
  4153  0017D6  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4154  0017D8  0011               	retfie		f
  4155  0017DA                     __end_of_tc_init:
  4156                           	callstack 0
  4157                           
  4158                           	psect	rparam
  4159  0000                     
  4160                           	psect	temp
  4161  00007E                     btemp:
  4162                           	callstack 0
  4163  00007E                     	ds	1
  4164  0000                     int$flags	set	btemp
  4165  0000                     wtemp8	set	btemp+1
  4166  0000                     ttemp5	set	btemp+1
  4167  0000                     ttemp6	set	btemp+4
  4168  0000                     ttemp7	set	btemp+8
  4169                           
  4170                           	psect	idloc
  4171                           
  4172                           ;Config register IDLOC0 @ 0x200000
  4173                           ;	unspecified, using default values
  4174  200000                     	org	2097152
  4175  200000  FF                 	db	255
  4176                           
  4177                           ;Config register IDLOC1 @ 0x200001
  4178                           ;	unspecified, using default values
  4179  200001                     	org	2097153
  4180  200001  FF                 	db	255
  4181                           
  4182                           ;Config register IDLOC2 @ 0x200002
  4183                           ;	unspecified, using default values
  4184  200002                     	org	2097154
  4185  200002  FF                 	db	255
  4186                           
  4187                           ;Config register IDLOC3 @ 0x200003
  4188                           ;	unspecified, using default values
  4189  200003                     	org	2097155
  4190  200003  FF                 	db	255
  4191                           
  4192                           ;Config register IDLOC4 @ 0x200004
  4193                           ;	unspecified, using default values
  4194  200004                     	org	2097156
  4195  200004  FF                 	db	255
  4196                           
  4197                           ;Config register IDLOC5 @ 0x200005
  4198                           ;	unspecified, using default values
  4199  200005                     	org	2097157
  4200  200005  FF                 	db	255
  4201                           
  4202                           ;Config register IDLOC6 @ 0x200006
  4203                           ;	unspecified, using default values
  4204  200006                     	org	2097158
  4205  200006  FF                 	db	255
  4206                           
  4207                           ;Config register IDLOC7 @ 0x200007
  4208                           ;	unspecified, using default values
  4209  200007                     	org	2097159
  4210  200007  FF                 	db	255
  4211                           
  4212                           	psect	config
  4213                           
  4214                           ; Padding undefined space
  4215  300000                     	org	3145728
  4216  300000  FF                 	db	255
  4217                           
  4218                           ;Config register CONFIG1H @ 0x300001
  4219                           ;	Oscillator Selection bits
  4220                           ;	OSC = HS, HS oscillator
  4221                           ;	Fail-Safe Clock Monitor Enable bit
  4222                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4223                           ;	Internal/External Oscillator Switchover bit
  4224                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4225  300001                     	org	3145729
  4226  300001  02                 	db	2
  4227                           
  4228                           ;Config register CONFIG2L @ 0x300002
  4229                           ;	Power-up Timer Enable bit
  4230                           ;	PWRT = OFF, PWRT disabled
  4231                           ;	Brown-out Reset Enable bits
  4232                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4233                           ;	Brown Out Reset Voltage bits
  4234                           ;	BORV = 3, Minimum setting
  4235  300002                     	org	3145730
  4236  300002  1F                 	db	31
  4237                           
  4238                           ;Config register CONFIG2H @ 0x300003
  4239                           ;	Watchdog Timer Enable bit
  4240                           ;	WDT = ON, WDT enabled
  4241                           ;	Watchdog Timer Postscale Select bits
  4242                           ;	WDTPS = 32768, 1:32768
  4243  300003                     	org	3145731
  4244  300003  1F                 	db	31
  4245                           
  4246                           ; Padding undefined space
  4247  300004                     	org	3145732
  4248  300004  FF                 	db	255
  4249                           
  4250                           ;Config register CONFIG3H @ 0x300005
  4251                           ;	CCP2 MUX bit
  4252                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4253                           ;	PORTB A/D Enable bit
  4254                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4255                           ;	Low-Power Timer1 Oscillator Enable bit
  4256                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4257                           ;	MCLR Pin Enable bit
  4258                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4259  300005                     	org	3145733
  4260  300005  83                 	db	131
  4261                           
  4262                           ;Config register CONFIG4L @ 0x300006
  4263                           ;	Stack Full/Underflow Reset Enable bit
  4264                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4265                           ;	Single-Supply ICSP Enable bit
  4266                           ;	LVP = ON, Single-Supply ICSP enabled
  4267                           ;	Extended Instruction Set Enable bit
  4268                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4269                           ;	Background Debugger Enable bit
  4270                           ;	DEBUG = 0x1, unprogrammed default
  4271  300006                     	org	3145734
  4272  300006  85                 	db	133
  4273                           
  4274                           ; Padding undefined space
  4275  300007                     	org	3145735
  4276  300007  FF                 	db	255
  4277                           
  4278                           ;Config register CONFIG5L @ 0x300008
  4279                           ;	Code Protection bit
  4280                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4281                           ;	Code Protection bit
  4282                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4283                           ;	Code Protection bit
  4284                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4285                           ;	Code Protection bit
  4286                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4287  300008                     	org	3145736
  4288  300008  0F                 	db	15
  4289                           
  4290                           ;Config register CONFIG5H @ 0x300009
  4291                           ;	Boot Block Code Protection bit
  4292                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4293                           ;	Data EEPROM Code Protection bit
  4294                           ;	CPD = OFF, Data EEPROM not code-protected
  4295  300009                     	org	3145737
  4296  300009  C0                 	db	192
  4297                           
  4298                           ;Config register CONFIG6L @ 0x30000A
  4299                           ;	Write Protection bit
  4300                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4301                           ;	Write Protection bit
  4302                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4303                           ;	Write Protection bit
  4304                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4305                           ;	Write Protection bit
  4306                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4307  30000A                     	org	3145738
  4308  30000A  0F                 	db	15
  4309                           
  4310                           ;Config register CONFIG6H @ 0x30000B
  4311                           ;	Configuration Register Write Protection bit
  4312                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4313                           ;	Boot Block Write Protection bit
  4314                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4315                           ;	Data EEPROM Write Protection bit
  4316                           ;	WRTD = OFF, Data EEPROM not write-protected
  4317  30000B                     	org	3145739
  4318  30000B  E0                 	db	224
  4319                           
  4320                           ;Config register CONFIG7L @ 0x30000C
  4321                           ;	Table Read Protection bit
  4322                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4323                           ;	Table Read Protection bit
  4324                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4325                           ;	Table Read Protection bit
  4326                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4327                           ;	Table Read Protection bit
  4328                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4329  30000C                     	org	3145740
  4330  30000C  0F                 	db	15
  4331                           
  4332                           ;Config register CONFIG7H @ 0x30000D
  4333                           ;	Boot Block Table Read Protection bit
  4334                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4335  30000D                     	org	3145741
  4336  30000D  40                 	db	64
  4337                           tosu	equ	0xFFF
  4338                           tosh	equ	0xFFE
  4339                           tosl	equ	0xFFD
  4340                           stkptr	equ	0xFFC
  4341                           pclatu	equ	0xFFB
  4342                           pclath	equ	0xFFA
  4343                           pcl	equ	0xFF9
  4344                           tblptru	equ	0xFF8
  4345                           tblptrh	equ	0xFF7
  4346                           tblptrl	equ	0xFF6
  4347                           tablat	equ	0xFF5
  4348                           prodh	equ	0xFF4
  4349                           prodl	equ	0xFF3
  4350                           indf0	equ	0xFEF
  4351                           postinc0	equ	0xFEE
  4352                           postdec0	equ	0xFED
  4353                           preinc0	equ	0xFEC
  4354                           plusw0	equ	0xFEB
  4355                           fsr0h	equ	0xFEA
  4356                           fsr0l	equ	0xFE9
  4357                           wreg	equ	0xFE8
  4358                           indf1	equ	0xFE7
  4359                           postinc1	equ	0xFE6
  4360                           postdec1	equ	0xFE5
  4361                           preinc1	equ	0xFE4
  4362                           plusw1	equ	0xFE3
  4363                           fsr1h	equ	0xFE2
  4364                           fsr1l	equ	0xFE1
  4365                           bsr	equ	0xFE0
  4366                           indf2	equ	0xFDF
  4367                           postinc2	equ	0xFDE
  4368                           postdec2	equ	0xFDD
  4369                           preinc2	equ	0xFDC
  4370                           plusw2	equ	0xFDB
  4371                           fsr2h	equ	0xFDA
  4372                           fsr2l	equ	0xFD9
  4373                           status	equ	0xFD8

Data Sizes:
    Strings     67
    Constant    0
    Data        32
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     125
    BANK0           128      0      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@temp_buf(COMRAM[5]), main@h_buf(COMRAM[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), STR_3(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> main@temp_buf(COMRAM[5]), main@h_buf(COMRAM[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S771_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@temp_buf(COMRAM[5]), main@h_buf(COMRAM[5]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@temp_buf(COMRAM[5]), main@h_buf(COMRAM[5]), 

    LCDPutStr@str	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[17]), STR_5(CODE[17]), message1(BANK0[14]), message2(BANK0[18]), 
		 -> STR_2(CODE[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _LCD_initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _tc_init in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _tc_init in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_init in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_init in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_init in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_init in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_init in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   11152
                                            103 COMRAM    22    22      0
                      _CheckResponse
                            _LCDGoto
                          _LCDPutCmd
                          _LCDPutStr
                     _LCD_initialize
                           _ReadByte
                        _StartSignal
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7776
                                             89 COMRAM    14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7271
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    6899
                                             59 COMRAM    22    16      6
                               _atoi
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3759
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1198
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _StartSignal                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadByte                                             9     7      2      92
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _LCD_initialize                                       1     1      0     461
                                              4 COMRAM     1     1      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            5     3      2    1007
                                              4 COMRAM     5     3      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           2     2      0     461
                                              2 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1    1051
                                              4 COMRAM     6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            2     2      0     461
                                              2 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     394
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _CheckResponse                                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _tc_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckResponse
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutCmd
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_initialize
     _LCDPutCmd
   _ReadByte
   _StartSignal
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _fputc
           _putch
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
             _strlen

 _tc_init (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      56       5       67.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7D       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3      15        0.0%
DATA                 0      0      D3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jan 22 21:27:02 2022

                      _i 0090                       l31 1790                       l40 1764  
                     l34 16CA              ?_LCDPutChar 0001                       l52 14D6  
                     l37 1690                       l46 1466                       l80 136C  
                     l93 13E4                       l77 1816                       l86 13EE  
                     l88 13AE                       l98 1352                       l99 12D6  
    ___wmul@multiplicand 0003                      l102 12EA                      l104 12F8  
                    l106 135A                      l130 17B6                      l575 1062  
                    l568 1042                      l840 1286                      l808 15D8  
                    l585 1132                      l922 0F72                      l578 1112  
                    l842 12C2                      l925 1702                      l933 158A  
                    l837 1244                      l919 0F6A                      l847 0C1A  
                    l871 0742                      l857 0DE2                      l849 0C22  
                    l890 1530                      l891 1538                      l948 11FC  
                    l956 161C                      l884 0998                      l965 1738  
                    l959 1818                      _GIE 007F97                      u800 0FC8  
                    u720 1146                      u801 0FC4                      u721 1142  
                    u810 1008                      u730 1158                      u811 1004  
                    u731 1154                      u900 16FE                      u820 1082  
                    u740 1180                      u821 107E                      u741 117C  
                    u910 1552                      u830 10AC                      u750 11B6  
                    u911 154E                      u831 10A8                      u751 11B2  
                    u920 1580                      u840 10DA                      u760 161C  
                    u921 157C                      u841 10D6                      u761 1618  
                    u770 172C                      u850 120E                      u930 0BF2  
                    u771 1728                      u851 120A                      u931 0BEE  
                    u860 1230                      u940 0C0E                      u781 0F7A  
                    u861 122C                      u941 0C0A                      u790 0F9E  
                    u870 1286                      u950 0D58                      u791 0F9A  
                    u871 1282                      u951 0D54                      u880 1296  
                    u960 0D76                      u881 1292                      u961 0D72  
                    u890 16FC                      u970 0D90                      u891 16F6  
                    u971 0D8C                      u980 0DAA                      u981 0DA6  
                    u990 0DBA                      u991 0DB6                      _pad 11FE  
                    wreg 000FE8          __end_of_LCDGoto 14D8                     l1501 15E6  
                   l1503 15F8                     l1511 1714                     l2047 0702  
                   l2049 0EA0                     l1505 15FC                     l1513 172C  
                   l1601 0BF2                     l1531 0FBA                     l1523 0F74  
                   l1507 1704                     l1611 0C5A                     l1603 0BF4  
                   l1517 1792                     l1541 102A                     l1533 0FC8  
                   l1525 0F80                     l1509 1710                     l1613 0C60  
                   l1621 0D46                     l1605 0C0E                     l1701 06B0  
                   l1519 17AE                     l1543 103C                     l1535 0FDA  
                   l1527 0F9E                     l1551 109E                     l1623 0D58  
                   l1631 0DBA                     l1615 0CD6                     l1607 0C4A  
                   l1641 0E00                     l1537 1008                     l1529 0FA6  
                   l1553 10AC                     l1545 1064                     l1561 11FE  
                   l1625 0D76                     l1617 0CDC                     l1609 0C52  
                   l1721 06DC                     l1713 06C8                     l1705 06B8  
                   l1801 14D8                     l1811 1660                     l1651 0E5C  
                   l1643 0E1C                     l1635 0DE4                     l1539 1028  
                   l1555 10DA                     l1547 1082                     l1491 1162  
                   l1571 1250                     l1563 120E                     l1627 0D90  
                   l1619 0CE2                     l1731 07AE                     l1723 0730  
                   l1803 14E0                     l1821 1684                     l1813 1662  
                   l1901 1336                     l1653 0E72                     l1645 0E52  
                   l1637 0DF8                     l1557 10FA                     l1549 108A  
                   l1493 1180                     l1485 1134                     l1573 1264  
                   l1565 1222                     l1629 0DAA                     l1733 07BC  
                   l1725 0752                     l1717 06D0                     l1709 06C0  
                   l1805 14EE                     l1831 142A                     l1823 168A  
                   l1815 1672                     l1583 16CC                     l1591 1552  
                   l1671 0F4E                     l1663 0EEC                     l1655 0E7A  
                   l1647 0E56                     l1639 0DFC                     l1559 110C  
                   l1495 11B6                     l1487 1146                     l1575 1268  
                   l1567 1230                     l1743 083E                     l1735 07CA  
                   l1727 0754                     l1807 1514                     l1911 15C8  
                   l1903 158C                     l1681 178A                     l1841 14B2  
                   l1833 146A                     l1825 13F0                     l1817 1678  
                   l1809 1658                     l1593 1580                     l1657 0E82  
                   l1489 1158                     l1577 1296                     l1569 123C  
                   l1753 08F6                     l1737 07EA                     l1745 0850  
                   l1729 0778                     l1905 159C                     l1683 178C  
                   l1843 14C2                     l1835 147A                     l1827 13F8  
                   l1819 167E                     l1851 180C                     l1595 1584  
                   l1587 153A                     l1667 0F2A                     l1659 0EB6  
                   l1499 15DA                     l1579 12AA                     l1771 0986  
                   l1755 091A                     l1763 0948                     l1747 0874  
                   l1739 07F8                     l1691 0678                     l1907 15A4  
                   l1931 09AE                     l1923 099A                     l1861 139E  
                   l1853 135C                     l1685 178E                     l1677 1768  
                   l1845 14C8                     l1837 148E                     l1829 1428  
                   l1589 153E                     l1669 0F3C                     l1765 0956  
                   l1757 0928                     l1749 08BE                     l1693 068A  
                   l1909 15AC                     l1941 09EC                     l1933 09B4  
                   l1925 09A0                     l1871 13CE                     l1855 136A  
                   l1679 1780                     l1791 16C0                     l1783 1694  
                   l1839 149E                     l1847 17FA                     l1599 0BE2  
                   l1759 093C                     l1695 068E                     l1687 0646  
                   l1951 0A72                     l1943 09FC                     l1935 09CA  
                   l1927 09A4                     l1857 137A                     l1785 16A2  
                   l1793 173C                     l1849 17FE                     l1697 069A  
                   l1689 066A                     l1769 0962                     l1961 0AB0  
                   l1953 0A84                     l1945 0A08                     l1937 09CE  
                   l1929 09AA                     l1867 13AA                     l1859 138C  
                   l1787 16AC                     l1795 174A                     l1891 12E4  
                   l1883 12C4                     l1699 069E                     l1971 0B56  
                   l1963 0ACC                     l1955 0A8C                     l1947 0A22  
                   l1939 09DA                     l1869 13BC                     l1789 16B2  
                   l1797 1754                     l1893 12E8                     l1885 12CC  
                   l1981 0B72                     l1973 0B5E                     l1965 0AE8  
                   l1957 0AA0                     l1949 0A5E                     ?_pad 0011  
                   l1879 13E6                     l1799 175A                     l1895 12FA  
                   l1983 0B78                     l1975 0B62                     l1967 0B38  
                   l1991 0BA8                     l1959 0AA8                     l1897 130A  
                   l1993 0BB8                     l1985 0B82                     l1977 0B66  
                   l1969 0B44                     l1899 1332                     l1995 0BC4  
                   l1987 0B8E                     l1979 0B6A                     l1989 0B98  
                   STR_1 0633                     STR_2 0623                     STR_3 063F  
                   STR_4 063F                     STR_5 0601                     STR_6 0612  
                   u1000 0E1C                     u1001 0E18                     u1010 0E52  
                   u1011 0E4E                     u1020 0E6E                     u1100 0752  
                   u1021 0E6A                     u1101 074E                     u1030 0F24  
                   u1110 0778                     u1031 0F1E                     u1111 0774  
                   u1200 1456                     u1040 0F26                     u1120 07BC  
                   u1121 07B8                     u1210 1466                     u1050 0F3C  
                   u1130 0838                     u1211 1462                     u1051 0F38  
                   u1131 0832                     u1300 13E0                     u1220 147A  
                   u1060 0F4E                     u1140 083A                     u1301 13DC  
                   u1221 1476                     u1061 0F4A                     u1230 148A  
                   u1310 12E4                     u1150 0850                     u1231 1486  
                   u1207 144C                     u1311 12E0                     u1151 084C  
                   u1240 149E                     u1320 12F8                     u1160 0874  
                   u1080 066A                     u1400 0B22                     u1241 149A  
                   u1321 12F4                     u1161 0870                     u1081 0666  
                   u1250 137A                     u1330 130A                     u1170 091A  
                   u1090 0742                     u1410 0B38                     u1251 1376  
                   u1075 1788                     u1331 1306                     u1171 0916  
                   u1091 073E                     u1411 0B34                     u1260 138C  
                   u1076 178A                     u1180 1530                     u1420 0B56  
                   u1261 1388                     u1181 152C                     u1421 0B52  
                   u1270 139E                     u1190 1424                     u1350 1352  
                   u1271 139A                     u1351 134E                     u1280 13BC  
                   u1344 1324                     u1281 13B8                     u1345 131E  
                   u1290 13CE                     u1370 09EC                     u1291 13CA  
                   u1507 16B8                     u1371 09E8                     u1380 0AA0  
                   u1197 141A                     u1381 0A9C                     u1437 09BE  
                   u1390 0B20                     u1447 1804                     u1391 0B1A  
                   u1457 1810                     u1467 1668                     u1477 1742  
                   u1487 14CE                     u1497 169A                     _PEIE 007F96  
                   _TMR2 000FCC                     _TOUT 0094                     _dbuf 0096  
                   _atoi 0DE4                     _main 099A                     _prec 0084  
                   _nout 0080                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9                     btemp 007E                     _utoa 0BE2  
     __size_of_LCDPutCmd 003A                     prodh 000FF4                     prodl 000FF3  
                   start 000E       __size_of_LCDPutStr 0078             ___param_bank 000000  
                  ??_pad 0017              LCDPutCmd@ch 0004  __size_of_LCD_initialize 003A  
                  ?_atoi 0008                    ?_main 0001                    ?_utoa 001C  
        __end_of___lodiv 1064                    _T2CON 000FCA          __end_of___lomod 1134  
                  i2l112 17D6             vfpfcnvrt@fmt 003E             vfpfcnvrt@llu 0046  
                  _PORTD 000F83                    _TRISD 000F95                    _flags 0086  
                  _fputc 1134                    _fputs 15DA          __end_of_isdigit 1704  
            ReadByte@num 0006                    atoi@n 0015                    pad@fp 0011  
                  atoi@s 0008                    _width 0082             main@temp_buf 0071  
        __end_of_tc_init 17DA                    _putch 1818          __end_of_isspace 158C  
                  tablat 000FF5      __size_of_LCDPutChar 002C                    ttemp5 007F  
                  ttemp6 0082                    ttemp7 0086                    utoa@d 001E  
                  utoa@i 003A                    utoa@n 0032                    utoa@p 002E  
                  utoa@w 0030                    status 000FD8                    wtemp8 007F  
        __end_of_sprintf 15DA         ___lodiv@dividend 0001          __initialization 161E  
           __end_of_atoi 0F74             __end_of_main 0BE2             __end_of_utoa 0DE4  
       __end_of_ReadByte 135C                   ??_atoi 000A                   ??_main 0068  
                 ??_utoa 0026            __activetblptr 000002                ??_LCDGoto 0006  
      __end_of_LCDPutCmd 16CC             LCDPutChar@ch 0004        __end_of_LCDPutStr 1468  
       ___lodiv@quotient 0011                   ?_fputc 0001                   ?_fputs 000A  
                 ?_putch 0001                   i2l1921 17D4                   i2l1915 17BA  
                 i2l1917 17C8                   i2l1919 17D2            vfpfcnvrt@done 004E  
                 _TMR2IE 007CE9                   _TMR2IF 007CF1                   _TMR2ON 007E52  
           LCDPutStr@str 0005           _LCDWriteNibble 1766             vfprintf@cfmt 0058  
                 ___wmul 1792                ??___lodiv 0011                ??___lomod 0011  
                 clear_0 1644                   isa$std 000001                   pad@buf 0013  
                 main@rh 0078                   _strlen 1704   __size_of_CheckResponse 0094  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003                ??_tc_init 0001  
           __mediumconst 0000                ??_isspace 0003                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 153A                   utoa@fp 001C                ??_sprintf 0060  
 __end_of_LCDWriteNibble 1792               __accesstop 0080  __end_of__initialization 164A  
          ___rparam_used 000001                LCDGoto@ln 0005           __pcstackCOMRAM 0001  
           __pidataBANK0 17DA            ??_StartSignal 0001            __end_of_fputc 11FE  
           ??_LCDPutChar 0003            __end_of_fputs 161E           _LCD_initialize 1658  
          __end_of_putch 181A                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 0080          ?_LCDWriteNibble 0001  
              ?_ReadByte 0001       __end_of_LCDPutChar 1766            _CheckResponse 135C  
 __end_of_LCD_initialize 1692                  ?___wmul 0001                  ?_strlen 0001  
                _LCDGoto 1468      __end_of_StartSignal 1818       __size_of_vfpfcnvrt 0354  
                _H_Byte1 008A                  _H_Byte2 0088         ___lomod@dividend 0001  
             ??_ReadByte 0003           ?_CheckResponse 0001                  _T_Byte1 008E  
                _T_Byte2 008C                  __Hparam 0000                  __Lparam 0000  
        ?_LCD_initialize 0001          __size_of___wmul 0026                  ___lodiv 0F74  
                ___lomod 1064                ?_vfprintf 0052             __psmallconst 0600  
                __pcinit 161E                  __ramtop 0600                  __ptext0 099A  
                __ptext1 158C                  __ptext2 14D8                  __ptext3 0646  
                __ptext4 0BE2                  __ptext5 11FE                  __ptext6 1704  
                __ptext7 15DA                  __ptext8 1134                  __ptext9 1818  
        __size_of_strlen 0036             __size_of_pad 00C6                  _isdigit 16CC  
                _tc_init 0008                  _isspace 153A                  atoi@neg 000E  
              _LCDPutCmd 1692                  _sprintf 158C                _LCDPutStr 13F0  
         __pintcode_body 17B8     end_of_initialization 164A                  fputc@fp 0003  
          __Lmediumconst 0000                  int_func 17B8                  fputs@fp 000C  
      __end_of_vfpfcnvrt 099A                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
            _StartSignal 17FA               ??_vfprintf 0058                  strlen@a 0003  
                strlen@s 0001                _PORTAbits 000F80                _PORTDbits 000F83  
              _TRISAbits 000F92               ?_LCDPutCmd 0001               ?_LCDPutStr 0005  
        ??_CheckResponse 0003               LCDGoto@pos 000A                ReadByte@i 0008  
            vfpfcnvrt@ap 0040              vfpfcnvrt@fp 003C               LCDPutStr@i 0009  
         __end_of___wmul 17B8           __end_of_strlen 173A      start_initialization 161E  
        ___lodiv@divisor 0009          ___lodiv@counter 0019         ??_LCDWriteNibble 0002  
            __end_of_pad 12C4        __size_of_ReadByte 0098              vfprintf@fmt 0054  
               ??___wmul 0005              __pdataBANK0 00B6                 ??_strlen 0003  
               ?_LCDGoto 0005              ??_LCDPutCmd 0003              ??_LCDPutStr 0007  
       ??_LCD_initialize 0005                __pintcode 0008                 ?___lodiv 0001  
               ?___lomod 0001         LCDWriteNibble@ch 0002         LCDWriteNibble@rs 0001  
      __size_of_vfprintf 0062          ___lomod@divisor 0009              __smallconst 0600  
        ___lomod@counter 0011                 ?_isdigit 0001                 ?_tc_init 0001  
               ?_isspace 0001                 ?_sprintf 005A           __size_of_fputc 00CA  
         __size_of_fputs 0044           __size_of_putch 0002           ___wmul@product 0005  
            _LCDGoto$275 0008                 i2u136_40 17C8                 i2u136_41 17C4  
           ?_StartSignal 0001                _vfpfcnvrt 0646        ___wmul@multiplier 0001  
              main@check 0076                main@h_buf 006C                 _CheckSum 0092  
       __size_of_LCDGoto 0070                copy_data0 1632                 _ReadByte 12C4  
               __Hrparam 0000               vfprintf@ap 0056                 __Lrparam 0000  
             vfprintf@fp 0052         __size_of___lodiv 00F0         __size_of___lomod 00D0  
             ?_vfpfcnvrt 003C               sprintf@fmt 005C                 _atoi$880 0010  
               _atoi$881 0014                 _atoi$882 0012         __size_of_isdigit 0038  
       __size_of_tc_init 17D2         __size_of_isspace 0052                 __ptext10 1064  
               __ptext11 0F74                 __ptext20 173A                 __ptext12 0DE4  
               __ptext21 1468                 __ptext13 153A                 __ptext22 1692  
               __ptext14 16CC                 __ptext23 1766                 __ptext15 1792  
               __ptext24 135C                 __ptext16 17FA                 __ptext17 12C4  
               __ptext18 1658                 __ptext19 13F0         __size_of_sprintf 004E  
  __end_of_CheckResponse 13F0            __size_of_atoi 0190            __size_of_main 0248  
          __size_of_utoa 0202                 _message1 00C8                 _message2 00B6  
               isa$xinst 000000                 int$flags 007E                 _vfprintf 14D8  
             _LCDPutChar 173A                 main@sign 007A                 main@temp 007C  
            _isspace$898 0007                 isdigit@c 0001                 intlevel2 0000  
              sprintf@ap 0060                 isspace@c 0001              ??_vfpfcnvrt 0042  
          _vfpfcnvrt$862 0050     __size_of_StartSignal 001E                 sprintf@f 0062  
               sprintf@s 005A  __size_of_LCDWriteNibble 002C  
