

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 27 13:25:35 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4520 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  007E96                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _address
    62  007E96  0103               	dw	259
    63  007E98  0B31               	dw	2865
    64  007E9A  1032               	dw	4146
    65  007E9C  0C23               	dw	3107
    66  007E9E  6004               	dw	24580
    67  007EA0  C0BF               	dw	49343
    68  007EA2  10C6               	dw	4294
    69  007EA4  0317               	dw	791
    70  007EA6  0AF8               	dw	2808
    71  007EA8  0A19               	dw	2585
    72  007EAA  102A               	dw	4138
    73  007EAC  0CCB               	dw	3275
    74  007EAE  1388               	dw	5000
    75  007EB0  612D               	dw	24877
    76  007EB2  501E               	dw	20510
    77  007EB4  42AF               	dw	17071
    78                           
    79                           ;initializer for _data
    80  007EB6  C0                 	db	192
    81  007EB7  F9                 	db	249
    82  007EB8  A4                 	db	164
    83  007EB9  B0                 	db	176
    84  007EBA  99                 	db	153
    85  007EBB  92                 	db	146
    86  007EBC  82                 	db	130
    87  007EBD  F8                 	db	248
    88  007EBE  80                 	db	128
    89  007EBF  90                 	db	144
    90  007EC0  88                 	db	136
    91  007EC1  83                 	db	131
    92  007EC2  C6                 	db	198
    93  007EC3  A1                 	db	161
    94  007EC4  86                 	db	134
    95  007EC5  8E                 	db	142
    96  0000                     _PORTAbits	set	3968
    97  0000                     _PORTD	set	3971
    98  0000                     _TRISD	set	3989
    99  0000                     _SSPSTATbits	set	4039
   100  0000                     _SSPBUF	set	4041
   101  0000                     _SSPCON1	set	4038
   102  0000                     _SSPSTAT	set	4039
   103  0000                     _TRISCbits	set	3988
   104  0000                     _TRISAbits	set	3986
   105                           
   106                           ; #config settings
   107                           
   108                           	psect	cinit
   109  007E70                     __pcinit:
   110                           	callstack 0
   111  007E70                     start_initialization:
   112                           	callstack 0
   113  007E70                     __initialization:
   114                           	callstack 0
   115                           
   116                           ; Initialize objects allocated to COMRAM (48 bytes)
   117                           ; load TBLPTR registers with __pidataCOMRAM
   118  007E70  0E96               	movlw	low __pidataCOMRAM
   119  007E72  6EF6               	movwf	tblptrl,c
   120  007E74  0E7E               	movlw	high __pidataCOMRAM
   121  007E76  6EF7               	movwf	tblptrh,c
   122  007E78  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   123  007E7A  6EF8               	movwf	tblptru,c
   124  007E7C  EE00  F001         	lfsr	0,__pdataCOMRAM
   125  007E80  EE10 F030          	lfsr	1,48
   126  007E84                     copy_data0:
   127  007E84  0009               	tblrd		*+
   128  007E86  CFF5 FFEE          	movff	tablat,postinc0
   129  007E8A  50E5               	movf	postdec1,w,c
   130  007E8C  50E1               	movf	fsr1l,w,c
   131  007E8E  E1FA               	bnz	copy_data0
   132  007E90                     end_of_initialization:
   133                           	callstack 0
   134  007E90                     __end_of__initialization:
   135                           	callstack 0
   136  007E90  0100               	movlb	0
   137  007E92  EF9C  F03F         	goto	_main	;jump to C main() function
   138                           
   139                           	psect	dataCOMRAM
   140  000001                     __pdataCOMRAM:
   141                           	callstack 0
   142  000001                     _address:
   143                           	callstack 0
   144  000001                     	ds	32
   145  000021                     _data:
   146                           	callstack 0
   147  000021                     	ds	16
   148                           
   149                           	psect	cstackCOMRAM
   150  000031                     __pcstackCOMRAM:
   151                           	callstack 0
   152  000031                     SPI_Write@data:
   153                           	callstack 0
   154  000031                     SPI_Read@dummy:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0x0
   158  000031                     	ds	1
   159  000032                     EEPROM_Status@status:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x1
   163  000032                     	ds	1
   164  000033                     EEPROM_Busy@busy:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x2
   168  000033                     	ds	1
   169  000034                     EEPROM_Write@address:
   170                           	callstack 0
   171  000034                     EEPROM_Read@address:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0x3
   175  000034                     	ds	2
   176  000036                     EEPROM_Write@data:
   177                           	callstack 0
   178  000036                     EEPROM_Read@data:
   179                           	callstack 0
   180                           
   181                           ; 1 bytes @ 0x5
   182  000036                     	ds	1
   183  000037                     ??_main:
   184                           
   185                           ; 1 bytes @ 0x6
   186  000037                     	ds	2
   187  000039                     main@i_403:
   188                           	callstack 0
   189                           
   190                           ; 2 bytes @ 0x8
   191  000039                     	ds	2
   192  00003B                     main@i:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0xA
   196  00003B                     	ds	2
   197                           
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 58 in file "main.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;		None
   206 ;; Auto vars:     Size  Location     Type
   207 ;;  i               2    8[COMRAM] int 
   208 ;;  i               2   10[COMRAM] int 
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   218 ;;      Params:         0       0       0       0       0       0       0
   219 ;;      Locals:         4       0       0       0       0       0       0
   220 ;;      Temps:          2       0       0       0       0       0       0
   221 ;;      Totals:         6       0       0       0       0       0       0
   222 ;;Total ram usage:        6 bytes
   223 ;; Hardware stack levels required when called: 4
   224 ;; This function calls:
   225 ;;		_EEPROM_Read
   226 ;;		_EEPROM_Write
   227 ;;		_SPI_Init
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           	psect	text0
   234  007F38                     __ptext0:
   235                           	callstack 0
   236  007F38                     _main:
   237                           	callstack 27
   238  007F38                     
   239                           ;main.c: 60:     SPI_Init();
   240  007F38  EC0C  F03F         	call	_SPI_Init	;wreg free
   241  007F3C                     
   242                           ;main.c: 61:     TRISD = 0;
   243  007F3C  0E00               	movlw	0
   244  007F3E  6E95               	movwf	149,c	;volatile
   245  007F40                     
   246                           ;main.c: 62:     PORTD = data[0];
   247  007F40  C021  FF83         	movff	_data,3971	;volatile
   248  007F44                     
   249                           ;main.c: 63:     for(int i=0;i<16;i++)
   250  007F44  0E00               	movlw	0
   251  007F46  6E3C               	movwf	(main@i+1)^0,c
   252  007F48  0E00               	movlw	0
   253  007F4A  6E3B               	movwf	main@i^0,c
   254  007F4C                     l900:
   255                           
   256                           ;main.c: 64:     {;main.c: 65:         EEPROM_Write(address[i],data[i]);
   257  007F4C  90D8               	bcf	status,0,c
   258  007F4E  343B               	rlcf	main@i^0,w,c
   259  007F50  6ED9               	movwf	fsr2l,c
   260  007F52  343C               	rlcf	(main@i+1)^0,w,c
   261  007F54  6EDA               	movwf	fsr2h,c
   262  007F56  0E01               	movlw	low _address
   263  007F58  26D9               	addwf	fsr2l,f,c
   264  007F5A  0E00               	movlw	high _address
   265  007F5C  22DA               	addwfc	fsr2h,f,c
   266  007F5E  CFDE F034          	movff	postinc2,EEPROM_Write@address
   267  007F62  CFDD F035          	movff	postdec2,EEPROM_Write@address+1
   268  007F66  0E21               	movlw	low _data
   269  007F68  243B               	addwf	main@i^0,w,c
   270  007F6A  6ED9               	movwf	fsr2l,c
   271  007F6C  0E00               	movlw	high _data
   272  007F6E  203C               	addwfc	(main@i+1)^0,w,c
   273  007F70  6EDA               	movwf	fsr2h,c
   274  007F72  50DF               	movf	indf2,w,c
   275  007F74  6E36               	movwf	EEPROM_Write@data^0,c
   276  007F76  EC7E  F03F         	call	_EEPROM_Write	;wreg free
   277  007F7A                     
   278                           ;main.c: 66:     }
   279  007F7A  4A3B               	infsnz	main@i^0,f,c
   280  007F7C  2A3C               	incf	(main@i+1)^0,f,c
   281  007F7E  BE3C               	btfsc	(main@i+1)^0,7,c
   282  007F80  EFCB  F03F         	goto	u91
   283  007F84  503C               	movf	(main@i+1)^0,w,c
   284  007F86  E109               	bnz	u90
   285  007F88  0E10               	movlw	16
   286  007F8A  5C3B               	subwf	main@i^0,w,c
   287  007F8C  A0D8               	btfss	status,0,c
   288  007F8E  EFCB  F03F         	goto	u91
   289  007F92  EFCD  F03F         	goto	u90
   290  007F96                     u91:
   291  007F96  EFA6  F03F         	goto	l900
   292  007F9A                     u90:
   293  007F9A                     l906:
   294                           
   295                           ;main.c: 68:     {;main.c: 69:         for(int i = 0;i<16;i++)
   296  007F9A  0E00               	movlw	0
   297  007F9C  6E3A               	movwf	(main@i_403+1)^0,c
   298  007F9E  0E00               	movlw	0
   299  007FA0  6E39               	movwf	main@i_403^0,c
   300  007FA2                     l912:
   301                           
   302                           ;main.c: 70:         {;main.c: 71:             PORTD = EEPROM_Read(address[i]);
   303  007FA2  90D8               	bcf	status,0,c
   304  007FA4  3439               	rlcf	main@i_403^0,w,c
   305  007FA6  6ED9               	movwf	fsr2l,c
   306  007FA8  343A               	rlcf	(main@i_403+1)^0,w,c
   307  007FAA  6EDA               	movwf	fsr2h,c
   308  007FAC  0E01               	movlw	low _address
   309  007FAE  26D9               	addwf	fsr2l,f,c
   310  007FB0  0E00               	movlw	high _address
   311  007FB2  22DA               	addwfc	fsr2h,f,c
   312  007FB4  CFDE F034          	movff	postinc2,EEPROM_Read@address
   313  007FB8  CFDD F035          	movff	postdec2,EEPROM_Read@address+1
   314  007FBC  EC63  F03F         	call	_EEPROM_Read	;wreg free
   315  007FC0  6E83               	movwf	131,c	;volatile
   316  007FC2                     
   317                           ;main.c: 72:             _delay((unsigned long)((500)*(8000000/4000.0)));
   318  007FC2  0E06               	movlw	6
   319  007FC4  6E38               	movwf	(??_main+1)^0,c
   320  007FC6  0E13               	movlw	19
   321  007FC8  6E37               	movwf	??_main^0,c
   322  007FCA  0EAE               	movlw	174
   323  007FCC                     u117:
   324  007FCC  2EE8               	decfsz	wreg,f,c
   325  007FCE  D7FE               	bra	u117
   326  007FD0  2E37               	decfsz	??_main^0,f,c
   327  007FD2  D7FC               	bra	u117
   328  007FD4  2E38               	decfsz	(??_main+1)^0,f,c
   329  007FD6  D7FA               	bra	u117
   330  007FD8                     
   331                           ;main.c: 73:         }
   332  007FD8  4A39               	infsnz	main@i_403^0,f,c
   333  007FDA  2A3A               	incf	(main@i_403+1)^0,f,c
   334  007FDC  BE3A               	btfsc	(main@i_403+1)^0,7,c
   335  007FDE  EFFA  F03F         	goto	u101
   336  007FE2  503A               	movf	(main@i_403+1)^0,w,c
   337  007FE4  E109               	bnz	u100
   338  007FE6  0E10               	movlw	16
   339  007FE8  5C39               	subwf	main@i_403^0,w,c
   340  007FEA  A0D8               	btfss	status,0,c
   341  007FEC  EFFA  F03F         	goto	u101
   342  007FF0  EFFC  F03F         	goto	u100
   343  007FF4                     u101:
   344  007FF4  EFD1  F03F         	goto	l912
   345  007FF8                     u100:
   346  007FF8  EFCD  F03F         	goto	l906
   347  007FFC  EF00  F000         	goto	start
   348  008000                     __end_of_main:
   349                           	callstack 0
   350                           
   351 ;; *************** function _SPI_Init *****************
   352 ;; Defined at:
   353 ;;		line 36 in file "main.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, status,2
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   367 ;;      Params:         0       0       0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0       0       0
   369 ;;      Temps:          0       0       0       0       0       0       0
   370 ;;      Totals:         0       0       0       0       0       0       0
   371 ;;Total ram usage:        0 bytes
   372 ;; Hardware stack levels used: 1
   373 ;; This function calls:
   374 ;;		Nothing
   375 ;; This function is called by:
   376 ;;		_main
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text1
   381  007E18                     __ptext1:
   382                           	callstack 0
   383  007E18                     _SPI_Init:
   384                           	callstack 30
   385  007E18                     
   386                           ;main.c: 38:     TRISAbits.RA5 = 1;
   387  007E18  8A92               	bsf	146,5,c	;volatile
   388                           
   389                           ;main.c: 39:     TRISCbits.RC3 = 0;
   390  007E1A  9694               	bcf	148,3,c	;volatile
   391                           
   392                           ;main.c: 40:     TRISCbits.RC4 = 1 ;
   393  007E1C  8894               	bsf	148,4,c	;volatile
   394                           
   395                           ;main.c: 41:     TRISCbits.RC5 = 0;
   396  007E1E  9A94               	bcf	148,5,c	;volatile
   397                           
   398                           ;main.c: 42:     TRISAbits.RA5 = 0;
   399  007E20  9A92               	bcf	146,5,c	;volatile
   400  007E22                     
   401                           ;main.c: 43:     SSPSTAT = 0x80;
   402  007E22  0E80               	movlw	128
   403  007E24  6EC7               	movwf	199,c	;volatile
   404                           
   405                           ;main.c: 44:     SSPCON1 = 0x30;
   406  007E26  0E30               	movlw	48
   407  007E28  6EC6               	movwf	198,c	;volatile
   408  007E2A  0012               	return		;funcret
   409  007E2C                     __end_of_SPI_Init:
   410                           	callstack 0
   411                           
   412 ;; *************** function _EEPROM_Write *****************
   413 ;; Defined at:
   414 ;;		line 77 in file "main.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;  address         2    3[COMRAM] int 
   417 ;;  data            1    5[COMRAM] unsigned char 
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   429 ;;      Params:         3       0       0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0       0       0
   432 ;;      Totals:         3       0       0       0       0       0       0
   433 ;;Total ram usage:        3 bytes
   434 ;; Hardware stack levels used: 1
   435 ;; Hardware stack levels required when called: 3
   436 ;; This function calls:
   437 ;;		_EEPROM_Busy
   438 ;;		_SPI_Write
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text2
   445  007EFC                     __ptext2:
   446                           	callstack 0
   447  007EFC                     _EEPROM_Write:
   448                           	callstack 27
   449  007EFC                     l854:
   450  007EFC  EC06  F03F         	call	_EEPROM_Busy	;wreg free
   451  007F00  06E8               	decf	wreg,f,c
   452  007F02  B4D8               	btfsc	status,2,c
   453  007F04  EF86  F03F         	goto	u71
   454  007F08  EF88  F03F         	goto	u70
   455  007F0C                     u71:
   456  007F0C  EF7E  F03F         	goto	l854
   457  007F10                     u70:
   458  007F10                     
   459                           ;main.c: 80:     PORTAbits.RA5 = 0;
   460  007F10  9A80               	bcf	128,5,c	;volatile
   461  007F12                     
   462                           ;main.c: 81:     SPI_Write(0x06);
   463  007F12  0E06               	movlw	6
   464  007F14  EC16  F03F         	call	_SPI_Write
   465  007F18                     
   466                           ;main.c: 82:     PORTAbits.RA5 = 1;
   467  007F18  8A80               	bsf	128,5,c	;volatile
   468  007F1A                     
   469                           ;main.c: 83:     PORTAbits.RA5 = 0;
   470  007F1A  9A80               	bcf	128,5,c	;volatile
   471                           
   472                           ;main.c: 84:     SPI_Write(0x02);
   473  007F1C  0E02               	movlw	2
   474  007F1E  EC16  F03F         	call	_SPI_Write
   475  007F22                     
   476                           ;main.c: 85:     SPI_Write(address>>8);
   477  007F22  5035               	movf	(EEPROM_Write@address+1)^0,w,c
   478  007F24  EC16  F03F         	call	_SPI_Write
   479  007F28                     
   480                           ;main.c: 86:     SPI_Write(address);
   481  007F28  5034               	movf	EEPROM_Write@address^0,w,c
   482  007F2A  EC16  F03F         	call	_SPI_Write
   483  007F2E                     
   484                           ;main.c: 87:     SPI_Write(data);
   485  007F2E  5036               	movf	EEPROM_Write@data^0,w,c
   486  007F30  EC16  F03F         	call	_SPI_Write
   487  007F34                     
   488                           ;main.c: 88:     PORTAbits.RA5 = 1;
   489  007F34  8A80               	bsf	128,5,c	;volatile
   490  007F36  0012               	return		;funcret
   491  007F38                     __end_of_EEPROM_Write:
   492                           	callstack 0
   493                           
   494 ;; *************** function _EEPROM_Read *****************
   495 ;; Defined at:
   496 ;;		line 90 in file "main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;  address         2    3[COMRAM] int 
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  data            1    5[COMRAM] unsigned char 
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      unsigned char 
   503 ;; Registers used:
   504 ;;		wreg, status,2, status,0, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   510 ;;      Params:         2       0       0       0       0       0       0
   511 ;;      Locals:         1       0       0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0       0       0
   513 ;;      Totals:         3       0       0       0       0       0       0
   514 ;;Total ram usage:        3 bytes
   515 ;; Hardware stack levels used: 1
   516 ;; Hardware stack levels required when called: 3
   517 ;; This function calls:
   518 ;;		_EEPROM_Busy
   519 ;;		_SPI_Read
   520 ;;		_SPI_Write
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text3
   527  007EC6                     __ptext3:
   528                           	callstack 0
   529  007EC6                     _EEPROM_Read:
   530                           	callstack 27
   531  007EC6                     l872:
   532  007EC6  EC06  F03F         	call	_EEPROM_Busy	;wreg free
   533  007ECA  06E8               	decf	wreg,f,c
   534  007ECC  B4D8               	btfsc	status,2,c
   535  007ECE  EF6B  F03F         	goto	u81
   536  007ED2  EF6D  F03F         	goto	u80
   537  007ED6                     u81:
   538  007ED6  EF63  F03F         	goto	l872
   539  007EDA                     u80:
   540  007EDA                     
   541                           ;main.c: 93:     PORTAbits.RA5 = 0;
   542  007EDA  9A80               	bcf	128,5,c	;volatile
   543  007EDC                     
   544                           ;main.c: 94:     SPI_Write(0x03);
   545  007EDC  0E03               	movlw	3
   546  007EDE  EC16  F03F         	call	_SPI_Write
   547  007EE2                     
   548                           ;main.c: 95:     SPI_Write(address>>8);
   549  007EE2  5035               	movf	(EEPROM_Read@address+1)^0,w,c
   550  007EE4  EC16  F03F         	call	_SPI_Write
   551  007EE8                     
   552                           ;main.c: 96:     SPI_Write(address);
   553  007EE8  5034               	movf	EEPROM_Read@address^0,w,c
   554  007EEA  EC16  F03F         	call	_SPI_Write
   555  007EEE                     
   556                           ;main.c: 97:     char data = SPI_Read(0);
   557  007EEE  0E00               	movlw	0
   558  007EF0  EC2C  F03F         	call	_SPI_Read
   559  007EF4  6E36               	movwf	EEPROM_Read@data^0,c
   560  007EF6                     
   561                           ;main.c: 98:     PORTAbits.RA5 = 1;
   562  007EF6  8A80               	bsf	128,5,c	;volatile
   563  007EF8                     
   564                           ;main.c: 99:     return data;
   565  007EF8  5036               	movf	EEPROM_Read@data^0,w,c
   566  007EFA  0012               	return		;funcret
   567  007EFC                     __end_of_EEPROM_Read:
   568                           	callstack 0
   569                           
   570 ;; *************** function _EEPROM_Busy *****************
   571 ;; Defined at:
   572 ;;		line 109 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  busy            1    2[COMRAM] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      unsigned char 
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   586 ;;      Params:         0       0       0       0       0       0       0
   587 ;;      Locals:         1       0       0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0
   589 ;;      Totals:         1       0       0       0       0       0       0
   590 ;;Total ram usage:        1 bytes
   591 ;; Hardware stack levels used: 1
   592 ;; Hardware stack levels required when called: 2
   593 ;; This function calls:
   594 ;;		_EEPROM_Status
   595 ;; This function is called by:
   596 ;;		_EEPROM_Write
   597 ;;		_EEPROM_Read
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text4
   602  007E0C                     __ptext4:
   603                           	callstack 0
   604  007E0C                     _EEPROM_Busy:
   605                           	callstack 27
   606  007E0C                     
   607                           ;main.c: 111:     char busy = EEPROM_Status();
   608  007E0C  EC21  F03F         	call	_EEPROM_Status	;wreg free
   609  007E10  6E33               	movwf	EEPROM_Busy@busy^0,c
   610  007E12                     
   611                           ;main.c: 112:     return (busy&0x01);
   612  007E12  5033               	movf	EEPROM_Busy@busy^0,w,c
   613  007E14  0B01               	andlw	1
   614  007E16  0012               	return		;funcret
   615  007E18                     __end_of_EEPROM_Busy:
   616                           	callstack 0
   617                           
   618 ;; *************** function _EEPROM_Status *****************
   619 ;; Defined at:
   620 ;;		line 101 in file "main.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  status          1    1[COMRAM] unsigned char 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      unsigned char 
   627 ;; Registers used:
   628 ;;		wreg, status,2, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   634 ;;      Params:         0       0       0       0       0       0       0
   635 ;;      Locals:         1       0       0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0       0       0
   637 ;;      Totals:         1       0       0       0       0       0       0
   638 ;;Total ram usage:        1 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; Hardware stack levels required when called: 1
   641 ;; This function calls:
   642 ;;		_SPI_Read
   643 ;;		_SPI_Write
   644 ;; This function is called by:
   645 ;;		_EEPROM_Busy
   646 ;;		_EEPROM_wrEnable
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text5
   651  007E42                     __ptext5:
   652                           	callstack 0
   653  007E42                     _EEPROM_Status:
   654                           	callstack 27
   655  007E42                     
   656                           ;main.c: 103:     PORTAbits.RA5 = 0;
   657  007E42  9A80               	bcf	128,5,c	;volatile
   658  007E44                     
   659                           ;main.c: 104:     SPI_Write(0x05);
   660  007E44  0E05               	movlw	5
   661  007E46  EC16  F03F         	call	_SPI_Write
   662  007E4A                     
   663                           ;main.c: 105:     char status = SPI_Read(0);
   664  007E4A  0E00               	movlw	0
   665  007E4C  EC2C  F03F         	call	_SPI_Read
   666  007E50  6E32               	movwf	EEPROM_Status@status^0,c
   667  007E52                     
   668                           ;main.c: 106:     PORTAbits.RA5 = 1;
   669  007E52  8A80               	bsf	128,5,c	;volatile
   670  007E54                     
   671                           ;main.c: 107:     return status;
   672  007E54  5032               	movf	EEPROM_Status@status^0,w,c
   673  007E56  0012               	return		;funcret
   674  007E58                     __end_of_EEPROM_Status:
   675                           	callstack 0
   676                           
   677 ;; *************** function _SPI_Write *****************
   678 ;; Defined at:
   679 ;;		line 46 in file "main.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  data            1    wreg     unsigned char 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  data            1    0[COMRAM] unsigned char 
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   693 ;;      Params:         0       0       0       0       0       0       0
   694 ;;      Locals:         1       0       0       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0
   696 ;;      Totals:         1       0       0       0       0       0       0
   697 ;;Total ram usage:        1 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_EEPROM_Write
   703 ;;		_EEPROM_Read
   704 ;;		_EEPROM_Status
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text6
   709  007E2C                     __ptext6:
   710                           	callstack 0
   711  007E2C                     _SPI_Write:
   712                           	callstack 29
   713                           
   714                           ;incstack = 0
   715                           ;SPI_Write@data stored from wreg
   716  007E2C  6E31               	movwf	SPI_Write@data^0,c
   717  007E2E                     
   718                           ;main.c: 46: void SPI_Write(char data);main.c: 47: {;main.c: 48:     SSPBUF = data;
   719  007E2E  C031  FFC9         	movff	SPI_Write@data,4041	;volatile
   720  007E32                     l36:
   721  007E32  A0C7               	btfss	199,0,c	;volatile
   722  007E34  EF1E  F03F         	goto	u11
   723  007E38  EF20  F03F         	goto	u10
   724  007E3C                     u11:
   725  007E3C  EF19  F03F         	goto	l36
   726  007E40                     u10:
   727  007E40  0012               	return		;funcret
   728  007E42                     __end_of_SPI_Write:
   729                           	callstack 0
   730                           
   731 ;; *************** function _SPI_Read *****************
   732 ;; Defined at:
   733 ;;		line 51 in file "main.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  dummy           1    wreg     unsigned char 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  dummy           1    0[COMRAM] unsigned char 
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      unsigned char 
   740 ;; Registers used:
   741 ;;		wreg, status,2
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   747 ;;      Params:         0       0       0       0       0       0       0
   748 ;;      Locals:         1       0       0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0
   750 ;;      Totals:         1       0       0       0       0       0       0
   751 ;;Total ram usage:        1 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_EEPROM_Read
   757 ;;		_EEPROM_Status
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text7
   762  007E58                     __ptext7:
   763                           	callstack 0
   764  007E58                     _SPI_Read:
   765                           	callstack 27
   766                           
   767                           ;incstack = 0
   768                           ;SPI_Read@dummy stored from wreg
   769  007E58  6E31               	movwf	SPI_Read@dummy^0,c
   770  007E5A                     
   771                           ;main.c: 51: char SPI_Read(char dummy);main.c: 52: {;main.c: 53:     SSPBUF = dummy;
   772  007E5A  C031  FFC9         	movff	SPI_Read@dummy,4041	;volatile
   773  007E5E                     l42:
   774  007E5E  A0C7               	btfss	199,0,c	;volatile
   775  007E60  EF34  F03F         	goto	u21
   776  007E64  EF36  F03F         	goto	u20
   777  007E68                     u21:
   778  007E68  EF2F  F03F         	goto	l42
   779  007E6C                     u20:
   780  007E6C                     
   781                           ;main.c: 55:     return SSPBUF;
   782  007E6C  50C9               	movf	201,w,c	;volatile
   783  007E6E  0012               	return		;funcret
   784  007E70                     __end_of_SPI_Read:
   785                           	callstack 0
   786  0000                     
   787                           	psect	rparam
   788  0000                     
   789                           	psect	idloc
   790                           
   791                           ;Config register IDLOC0 @ 0x200000
   792                           ;	unspecified, using default values
   793  200000                     	org	2097152
   794  200000  FF                 	db	255
   795                           
   796                           ;Config register IDLOC1 @ 0x200001
   797                           ;	unspecified, using default values
   798  200001                     	org	2097153
   799  200001  FF                 	db	255
   800                           
   801                           ;Config register IDLOC2 @ 0x200002
   802                           ;	unspecified, using default values
   803  200002                     	org	2097154
   804  200002  FF                 	db	255
   805                           
   806                           ;Config register IDLOC3 @ 0x200003
   807                           ;	unspecified, using default values
   808  200003                     	org	2097155
   809  200003  FF                 	db	255
   810                           
   811                           ;Config register IDLOC4 @ 0x200004
   812                           ;	unspecified, using default values
   813  200004                     	org	2097156
   814  200004  FF                 	db	255
   815                           
   816                           ;Config register IDLOC5 @ 0x200005
   817                           ;	unspecified, using default values
   818  200005                     	org	2097157
   819  200005  FF                 	db	255
   820                           
   821                           ;Config register IDLOC6 @ 0x200006
   822                           ;	unspecified, using default values
   823  200006                     	org	2097158
   824  200006  FF                 	db	255
   825                           
   826                           ;Config register IDLOC7 @ 0x200007
   827                           ;	unspecified, using default values
   828  200007                     	org	2097159
   829  200007  FF                 	db	255
   830                           
   831                           	psect	config
   832                           
   833                           ; Padding undefined space
   834  300000                     	org	3145728
   835  300000  FF                 	db	255
   836                           
   837                           ;Config register CONFIG1H @ 0x300001
   838                           ;	Oscillator Selection bits
   839                           ;	OSC = HS, HS oscillator
   840                           ;	Fail-Safe Clock Monitor Enable bit
   841                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   842                           ;	Internal/External Oscillator Switchover bit
   843                           ;	IESO = OFF, Oscillator Switchover mode disabled
   844  300001                     	org	3145729
   845  300001  02                 	db	2
   846                           
   847                           ;Config register CONFIG2L @ 0x300002
   848                           ;	Power-up Timer Enable bit
   849                           ;	PWRT = OFF, PWRT disabled
   850                           ;	Brown-out Reset Enable bits
   851                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   852                           ;	Brown Out Reset Voltage bits
   853                           ;	BORV = 3, Minimum setting
   854  300002                     	org	3145730
   855  300002  1F                 	db	31
   856                           
   857                           ;Config register CONFIG2H @ 0x300003
   858                           ;	Watchdog Timer Enable bit
   859                           ;	WDT = ON, WDT enabled
   860                           ;	Watchdog Timer Postscale Select bits
   861                           ;	WDTPS = 32768, 1:32768
   862  300003                     	org	3145731
   863  300003  1F                 	db	31
   864                           
   865                           ; Padding undefined space
   866  300004                     	org	3145732
   867  300004  FF                 	db	255
   868                           
   869                           ;Config register CONFIG3H @ 0x300005
   870                           ;	CCP2 MUX bit
   871                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   872                           ;	PORTB A/D Enable bit
   873                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   874                           ;	Low-Power Timer1 Oscillator Enable bit
   875                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   876                           ;	MCLR Pin Enable bit
   877                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   878  300005                     	org	3145733
   879  300005  83                 	db	131
   880                           
   881                           ;Config register CONFIG4L @ 0x300006
   882                           ;	Stack Full/Underflow Reset Enable bit
   883                           ;	STVREN = ON, Stack full/underflow will cause Reset
   884                           ;	Single-Supply ICSP Enable bit
   885                           ;	LVP = ON, Single-Supply ICSP enabled
   886                           ;	Extended Instruction Set Enable bit
   887                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   888                           ;	Background Debugger Enable bit
   889                           ;	DEBUG = 0x1, unprogrammed default
   890  300006                     	org	3145734
   891  300006  85                 	db	133
   892                           
   893                           ; Padding undefined space
   894  300007                     	org	3145735
   895  300007  FF                 	db	255
   896                           
   897                           ;Config register CONFIG5L @ 0x300008
   898                           ;	Code Protection bit
   899                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   900                           ;	Code Protection bit
   901                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   902                           ;	Code Protection bit
   903                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   904                           ;	Code Protection bit
   905                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   906  300008                     	org	3145736
   907  300008  0F                 	db	15
   908                           
   909                           ;Config register CONFIG5H @ 0x300009
   910                           ;	Boot Block Code Protection bit
   911                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   912                           ;	Data EEPROM Code Protection bit
   913                           ;	CPD = OFF, Data EEPROM not code-protected
   914  300009                     	org	3145737
   915  300009  C0                 	db	192
   916                           
   917                           ;Config register CONFIG6L @ 0x30000A
   918                           ;	Write Protection bit
   919                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   920                           ;	Write Protection bit
   921                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   922                           ;	Write Protection bit
   923                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   924                           ;	Write Protection bit
   925                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   926  30000A                     	org	3145738
   927  30000A  0F                 	db	15
   928                           
   929                           ;Config register CONFIG6H @ 0x30000B
   930                           ;	Configuration Register Write Protection bit
   931                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   932                           ;	Boot Block Write Protection bit
   933                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   934                           ;	Data EEPROM Write Protection bit
   935                           ;	WRTD = OFF, Data EEPROM not write-protected
   936  30000B                     	org	3145739
   937  30000B  E0                 	db	224
   938                           
   939                           ;Config register CONFIG7L @ 0x30000C
   940                           ;	Table Read Protection bit
   941                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   942                           ;	Table Read Protection bit
   943                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   944                           ;	Table Read Protection bit
   945                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   946                           ;	Table Read Protection bit
   947                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   948  30000C                     	org	3145740
   949  30000C  0F                 	db	15
   950                           
   951                           ;Config register CONFIG7H @ 0x30000D
   952                           ;	Boot Block Table Read Protection bit
   953                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   954  30000D                     	org	3145741
   955  30000D  40                 	db	64
   956                           tosu	equ	0xFFF
   957                           tosh	equ	0xFFE
   958                           tosl	equ	0xFFD
   959                           stkptr	equ	0xFFC
   960                           pclatu	equ	0xFFB
   961                           pclath	equ	0xFFA
   962                           pcl	equ	0xFF9
   963                           tblptru	equ	0xFF8
   964                           tblptrh	equ	0xFF7
   965                           tblptrl	equ	0xFF6
   966                           tablat	equ	0xFF5
   967                           prodh	equ	0xFF4
   968                           prodl	equ	0xFF3
   969                           indf0	equ	0xFEF
   970                           postinc0	equ	0xFEE
   971                           postdec0	equ	0xFED
   972                           preinc0	equ	0xFEC
   973                           plusw0	equ	0xFEB
   974                           fsr0h	equ	0xFEA
   975                           fsr0l	equ	0xFE9
   976                           wreg	equ	0xFE8
   977                           indf1	equ	0xFE7
   978                           postinc1	equ	0xFE6
   979                           postdec1	equ	0xFE5
   980                           preinc1	equ	0xFE4
   981                           plusw1	equ	0xFE3
   982                           fsr1h	equ	0xFE2
   983                           fsr1l	equ	0xFE1
   984                           bsr	equ	0xFE0
   985                           indf2	equ	0xFDF
   986                           postinc2	equ	0xFDE
   987                           postdec2	equ	0xFDD
   988                           preinc2	equ	0xFDC
   989                           plusw2	equ	0xFDB
   990                           fsr2h	equ	0xFDA
   991                           fsr2l	equ	0xFD9
   992                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     12      60
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_EEPROM_Read
    _main->_EEPROM_Write
    _EEPROM_Write->_EEPROM_Busy
    _EEPROM_Read->_EEPROM_Busy
    _EEPROM_Busy->_EEPROM_Status
    _EEPROM_Status->_SPI_Read
    _EEPROM_Status->_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     684
                                              6 COMRAM     6     6      0
                        _EEPROM_Read
                       _EEPROM_Write
                           _SPI_Init
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         3     0      3     293
                                              3 COMRAM     3     0      3
                        _EEPROM_Busy
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          3     1      2     233
                                              3 COMRAM     3     1      2
                        _EEPROM_Busy
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Busy                                          1     1      0      60
                                              2 COMRAM     1     1      0
                      _EEPROM_Status
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Status                                        1     1      0      45
                                              1 COMRAM     1     1      0
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _SPI_Write                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _SPI_Read                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
     _EEPROM_Busy
       _EEPROM_Status
         _SPI_Read
         _SPI_Write
     _SPI_Read
     _SPI_Write
   _EEPROM_Write
     _EEPROM_Busy
     _SPI_Write
   _SPI_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      C      3C       1       47.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C      15        0.0%
DATA                 0      0      3C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 27 13:25:35 2021

            _SSPSTATbits 000FC7                       l33 7E2A                       l42 7E5E  
                     l44 7E6C                       l36 7E32                       l45 7E6E  
                     l62 7F10                       l39 7E40                       l63 7F36  
                     l72 7E56                       l75 7E16                       l68 7EDA  
                     l69 7EFA                       u10 7E40                       u11 7E3C  
                     u20 7E6C                       u21 7E68                       u70 7F10  
                     u71 7F0C                       u80 7EDA                       u81 7ED6  
                     u90 7F9A                       u91 7F96                      l900 7F4C  
                    l902 7F7A                      l760 7E44                      l912 7FA2  
                    l904 7F7E                      l754 7E2E                      l762 7E4A  
                    l770 7E0C                      l914 7FC2                      l906 7F9A  
                    l756 7E5A                      l764 7E52                      l772 7E12  
                    l860 7F1A                      l852 7EFC                      l916 7FD8  
                    l766 7E54                      l758 7E42                      l870 7EC6  
                    l862 7F22                      l854 7EFC                      l918 7FDC  
                    l880 7EEE                      l872 7EC6                      l864 7F28  
                    l856 7F12                      l776 7E18                      l882 7EF6  
                    l874 7EDC                      l866 7F2E                      l858 7F18  
                    l778 7E22                      l890 7F3C                      l884 7EF8  
                    l876 7EE2                      l868 7F34                      l892 7F40  
                    l878 7EE8                      l894 7F44                      l888 7F38  
                    u100 7FF8                      u101 7FF4                      u117 7FCC  
                    wreg 000FE8                     _data 0021                     _main 7F38  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000             ___param_bank 000000  
   __end_of_EEPROM_Write 7F38                    ?_main 0031                    _PORTD 000F83  
                  _TRISD 000F95                    main@i 003B         __end_of_SPI_Init 7E2C  
       __end_of_SPI_Read 7E70                    tablat 000FF5                    status 000FD8  
     __size_of_SPI_Write 0016         EEPROM_Write@data 0036     __size_of_EEPROM_Busy 000C  
   __size_of_EEPROM_Read 0036          __initialization 7E70             __end_of_main 8000  
  __end_of_EEPROM_Status 7E58                   ??_main 0037            __activetblptr 000000  
                 _SSPBUF 000FC9                   isa$std 000001        __end_of_SPI_Write 7E42  
           __pdataCOMRAM 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization 7E90  
          ___rparam_used 000001            SPI_Read@dummy 0031    __size_of_EEPROM_Write 003C  
         __pcstackCOMRAM 0031                ?_SPI_Init 0031                ?_SPI_Read 0031  
           _EEPROM_Write 7EFC               ??_SPI_Init 0031               ??_SPI_Read 0031  
                _SSPCON1 000FC6                  _SSPSTAT 000FC7                  __Hparam 0000  
          SPI_Write@data 0031                  __Lparam 0000                  _address 0001  
                __pcinit 7E70                  __ramtop 0600                  __ptext0 7F38  
                __ptext1 7E18                  __ptext2 7EFC                  __ptext3 7EC6  
                __ptext4 7E0C                  __ptext5 7E42                  __ptext6 7E2C  
                __ptext7 7E58     end_of_initialization 7E90            ??_EEPROM_Busy 0033  
          ??_EEPROM_Read 0036                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc2 000FDE                _PORTAbits 000F80  
              _TRISAbits 000F92                _TRISCbits 000F94                _SPI_Write 7E2C  
 __size_of_EEPROM_Status 0016      __end_of_EEPROM_Busy 7E18      __end_of_EEPROM_Read 7EFC  
          __pidataCOMRAM 7E96        __size_of_SPI_Init 0014        __size_of_SPI_Read 0018  
    start_initialization 7E70               ?_SPI_Write 0031            _EEPROM_Status 7E42  
            _EEPROM_Busy 7E0C              _EEPROM_Read 7EC6           ?_EEPROM_Status 0031  
            ??_SPI_Write 0031                 _SPI_Init 7E18                 _SPI_Read 7E58  
              main@i_403 0039                copy_data0 7E84                 __Hrparam 0000  
               __Lrparam 0000      EEPROM_Status@status 0032          ??_EEPROM_Status 0032  
          ?_EEPROM_Write 0034            __size_of_main 00C8                 isa$xinst 000000  
         ??_EEPROM_Write 0037             ?_EEPROM_Busy 0031             ?_EEPROM_Read 0034  
     EEPROM_Read@address 0034          EEPROM_Busy@busy 0033          EEPROM_Read@data 0036  
    EEPROM_Write@address 0034  
