

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 15 09:22:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     _ADCON0bits	set	4034
    76  0000                     _ADCON0	set	4034
    77  0000                     _ADRESL	set	4035
    78  0000                     _ADRESH	set	4036
    79  0000                     _ADCON2	set	4032
    80  0000                     _ADCON1	set	4033
    81  0000                     _TRISA	set	3986
    82  0000                     _TRISD	set	3989
    83  0000                     _TRISB	set	3987
    84  0000                     _PORTDbits	set	3971
    85  0000                     _PORTB	set	3969
    86                           
    87                           	psect	smallconst
    88  000600                     __psmallconst:
    89                           	callstack 0
    90  000600  00                 	db	0
    91  000601                     STR_2:
    92  000601  44                 	db	68	;'D'
    93  000602  69                 	db	105	;'i'
    94  000603  67                 	db	103	;'g'
    95  000604  69                 	db	105	;'i'
    96  000605  74                 	db	116	;'t'
    97  000606  61                 	db	97	;'a'
    98  000607  6C                 	db	108	;'l'
    99  000608  20                 	db	32
   100  000609  3A                 	db	58	;':'
   101  00060A  20                 	db	32
   102  00060B  00                 	db	0
   103  00060C                     STR_1:
   104  00060C  54                 	db	84	;'T'
   105  00060D  65                 	db	101	;'e'
   106  00060E  6D                 	db	109	;'m'
   107  00060F  70                 	db	112	;'p'
   108  000610  20                 	db	32
   109  000611  3A                 	db	58	;':'
   110  000612  20                 	db	32
   111  000613  00                 	db	0
   112  000614                     STR_5:
   113  000614  20                 	db	32
   114  000615  43                 	db	67	;'C'
   115  000616  00                 	db	0
   116  000617                     STR_3:
   117  000617  25                 	db	37
   118  000618  64                 	db	100	;'d'
   119  000619  00                 	db	0
   120  00061A  00                 	db	0	; dummy byte at the end
   121  0000                     
   122                           ; #config settings
   123                           
   124                           	psect	cinit
   125  001A74                     __pcinit:
   126                           	callstack 0
   127  001A74                     start_initialization:
   128                           	callstack 0
   129  001A74                     __initialization:
   130                           	callstack 0
   131                           
   132                           ; Clear objects allocated to BANK0 (32 bytes)
   133  001A74  EE00  F080         	lfsr	0,__pbssBANK0
   134  001A78  0E20               	movlw	32
   135  001A7A                     clear_0:
   136  001A7A  6AEE               	clrf	postinc0,c
   137  001A7C  06E8               	decf	wreg,f,c
   138  001A7E  E1FD               	bnz	clear_0
   139                           
   140                           ; Clear objects allocated to COMRAM (8 bytes)
   141  001A80  EE00  F067         	lfsr	0,__pbssCOMRAM
   142  001A84  0E08               	movlw	8
   143  001A86                     clear_1:
   144  001A86  6AEE               	clrf	postinc0,c
   145  001A88  06E8               	decf	wreg,f,c
   146  001A8A  E1FD               	bnz	clear_1
   147  001A8C                     end_of_initialization:
   148                           	callstack 0
   149  001A8C                     __end_of__initialization:
   150                           	callstack 0
   151  001A8C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   152  001A8E  6EF8               	movwf	tblptru,c
   153  001A90  0100               	movlb	0
   154  001A92  EFBB  F009         	goto	_main	;jump to C main() function
   155                           
   156                           	psect	bssCOMRAM
   157  000067                     __pbssCOMRAM:
   158                           	callstack 0
   159  000067                     _nout:
   160                           	callstack 0
   161  000067                     	ds	2
   162  000069                     _width:
   163                           	callstack 0
   164  000069                     	ds	2
   165  00006B                     _prec:
   166                           	callstack 0
   167  00006B                     	ds	2
   168  00006D                     _flags:
   169                           	callstack 0
   170  00006D                     	ds	2
   171                           
   172                           	psect	bssBANK0
   173  000080                     __pbssBANK0:
   174                           	callstack 0
   175  000080                     _dbuf:
   176                           	callstack 0
   177  000080                     	ds	32
   178                           
   179                           	psect	cstackBANK0
   180  0000A0                     __pcstackBANK0:
   181                           	callstack 0
   182  0000A0                     main@digit:
   183                           	callstack 0
   184                           
   185                           ; 10 bytes @ 0x0
   186  0000A0                     	ds	10
   187  0000AA                     main@data:
   188                           	callstack 0
   189                           
   190                           ; 10 bytes @ 0xA
   191  0000AA                     	ds	10
   192  0000B4                     main@voltage:
   193                           	callstack 0
   194                           
   195                           ; 4 bytes @ 0x14
   196  0000B4                     	ds	4
   197  0000B8                     main@temperature:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x18
   201  0000B8                     	ds	2
   202  0000BA                     main@digital:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x1A
   206  0000BA                     	ds	2
   207                           
   208                           	psect	cstackCOMRAM
   209  000001                     __pcstackCOMRAM:
   210                           	callstack 0
   211  000001                     ??_LCD_Command:
   212  000001                     ??_LCD_Char:
   213  000001                     ?_strlen:
   214                           	callstack 0
   215  000001                     ?_ADC_Read:
   216                           	callstack 0
   217  000001                     ?___xxtofl:
   218                           	callstack 0
   219  000001                     ?___aodiv:
   220                           	callstack 0
   221  000001                     ?___aomod:
   222                           	callstack 0
   223  000001                     fputc@c:
   224                           	callstack 0
   225  000001                     strlen@s:
   226                           	callstack 0
   227  000001                     ___xxtofl@val:
   228                           	callstack 0
   229  000001                     ___aodiv@dividend:
   230                           	callstack 0
   231  000001                     ___aomod@dividend:
   232                           	callstack 0
   233                           
   234                           ; 8 bytes @ 0x0
   235  000001                     	ds	1
   236  000002                     LCD_Command@cmd:
   237                           	callstack 0
   238  000002                     LCD_Char@dat:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x1
   242  000002                     	ds	1
   243  000003                     ??_LCD_Init:
   244  000003                     ??_ADC_Read:
   245  000003                     LCD_String@msg:
   246                           	callstack 0
   247  000003                     fputc@fp:
   248                           	callstack 0
   249  000003                     strlen@a:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x2
   253  000003                     	ds	2
   254  000005                     ??_fputc:
   255  000005                     ??___xxtofl:
   256  000005                     LCD_String_xy@pos:
   257                           	callstack 0
   258  000005                     ADC_Read@digital:
   259                           	callstack 0
   260  000005                     strcpy@dest:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x4
   264  000005                     	ds	1
   265  000006                     LCD_String_xy@msg:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x5
   269  000006                     	ds	1
   270  000007                     strcpy@src:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x6
   274  000007                     	ds	1
   275  000008                     LCD_String_xy@row:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x7
   279  000008                     	ds	1
   280  000009                     LCD_String_xy@location:
   281                           	callstack 0
   282  000009                     ___xxtofl@sign:
   283                           	callstack 0
   284  000009                     strcpy@s:
   285                           	callstack 0
   286  000009                     ___aodiv@divisor:
   287                           	callstack 0
   288  000009                     ___aomod@divisor:
   289                           	callstack 0
   290                           
   291                           ; 8 bytes @ 0x8
   292  000009                     	ds	1
   293  00000A                     ___xxtofl@exp:
   294                           	callstack 0
   295  00000A                     fputs@s:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x9
   299  00000A                     	ds	1
   300  00000B                     strcpy@d:
   301                           	callstack 0
   302  00000B                     ___xxtofl@arg:
   303                           	callstack 0
   304                           
   305                           ; 4 bytes @ 0xA
   306  00000B                     	ds	1
   307  00000C                     fputs@fp:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0xB
   311  00000C                     	ds	1
   312  00000D                     strcat@dest:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0xC
   316  00000D                     	ds	1
   317  00000E                     fputs@c:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0xD
   321  00000E                     	ds	1
   322  00000F                     ?___flmul:
   323                           	callstack 0
   324  00000F                     fputs@i:
   325                           	callstack 0
   326  00000F                     strcat@src:
   327                           	callstack 0
   328  00000F                     ___flmul@b:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0xE
   332  00000F                     	ds	2
   333  000011                     ?_pad:
   334                           	callstack 0
   335  000011                     ___aodiv@counter:
   336                           	callstack 0
   337  000011                     ___aomod@counter:
   338                           	callstack 0
   339  000011                     pad@fp:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x10
   343  000011                     	ds	1
   344  000012                     ___aodiv@sign:
   345                           	callstack 0
   346  000012                     ___aomod@sign:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x11
   350  000012                     	ds	1
   351  000013                     ?_abs:
   352                           	callstack 0
   353  000013                     pad@buf:
   354                           	callstack 0
   355  000013                     abs@a:
   356                           	callstack 0
   357  000013                     ___flmul@a:
   358                           	callstack 0
   359  000013                     ___aodiv@quotient:
   360                           	callstack 0
   361                           
   362                           ; 8 bytes @ 0x12
   363  000013                     	ds	2
   364  000015                     ??_abs:
   365  000015                     pad@p:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x14
   369  000015                     	ds	2
   370  000017                     ??___flmul:
   371  000017                     ??_pad:
   372                           
   373                           ; 1 bytes @ 0x16
   374  000017                     	ds	1
   375  000018                     pad@i:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x17
   379  000018                     	ds	2
   380  00001A                     pad@w:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x19
   384  00001A                     	ds	1
   385  00001B                     ___flmul@sign:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x1A
   389  00001B                     	ds	1
   390  00001C                     ?_dtoa:
   391                           	callstack 0
   392  00001C                     dtoa@fp:
   393                           	callstack 0
   394  00001C                     ___flmul@grs:
   395                           	callstack 0
   396                           
   397                           ; 4 bytes @ 0x1B
   398  00001C                     	ds	2
   399  00001E                     dtoa@d:
   400                           	callstack 0
   401                           
   402                           ; 8 bytes @ 0x1D
   403  00001E                     	ds	2
   404  000020                     ___flmul@aexp:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x1F
   408  000020                     	ds	1
   409  000021                     ___flmul@bexp:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x20
   413  000021                     	ds	1
   414  000022                     ___flmul@prod:
   415                           	callstack 0
   416                           
   417                           ; 4 bytes @ 0x21
   418  000022                     	ds	4
   419  000026                     ??_dtoa:
   420  000026                     ___flmul@temp:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x25
   424  000026                     	ds	2
   425  000028                     ?___fltol:
   426                           	callstack 0
   427  000028                     ___fltol@f1:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x27
   431  000028                     	ds	4
   432  00002C                     ??___fltol:
   433                           
   434                           ; 1 bytes @ 0x2B
   435  00002C                     	ds	2
   436  00002E                     _dtoa$734:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2D
   440  00002E                     	ds	2
   441  000030                     ___fltol@sign1:
   442                           	callstack 0
   443  000030                     dtoa@p:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x2F
   447  000030                     	ds	1
   448  000031                     ___fltol@exp1:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x30
   452  000031                     	ds	1
   453  000032                     dtoa@w:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x31
   457  000032                     	ds	2
   458  000034                     dtoa@s:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x33
   462  000034                     	ds	2
   463  000036                     dtoa@n:
   464                           	callstack 0
   465                           
   466                           ; 8 bytes @ 0x35
   467  000036                     	ds	8
   468  00003E                     dtoa@i:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x3D
   472  00003E                     	ds	2
   473  000040                     ?_vfpfcnvrt:
   474                           	callstack 0
   475  000040                     vfpfcnvrt@fp:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x3F
   479  000040                     	ds	2
   480  000042                     vfpfcnvrt@fmt:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x41
   484  000042                     	ds	2
   485  000044                     vfpfcnvrt@ap:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x43
   489  000044                     	ds	2
   490  000046                     ??_vfpfcnvrt:
   491                           
   492                           ; 1 bytes @ 0x45
   493  000046                     	ds	2
   494  000048                     vfpfcnvrt@ll:
   495                           	callstack 0
   496                           
   497                           ; 8 bytes @ 0x47
   498  000048                     	ds	8
   499  000050                     ?_vfprintf:
   500                           	callstack 0
   501  000050                     vfprintf@fp:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x4F
   505  000050                     	ds	2
   506  000052                     vfprintf@fmt:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x51
   510  000052                     	ds	2
   511  000054                     vfprintf@ap:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x53
   515  000054                     	ds	2
   516  000056                     vfprintf@cfmt:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x55
   520  000056                     	ds	2
   521  000058                     ?_sprintf:
   522                           	callstack 0
   523  000058                     sprintf@s:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x57
   527  000058                     	ds	2
   528  00005A                     sprintf@fmt:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x59
   532  00005A                     	ds	4
   533  00005E                     sprintf@ap:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x5D
   537  00005E                     	ds	2
   538  000060                     sprintf@f:
   539                           	callstack 0
   540                           
   541                           ; 6 bytes @ 0x5F
   542  000060                     	ds	6
   543  000066                     ??_main:
   544                           
   545                           ; 1 bytes @ 0x65
   546  000066                     	ds	1
   547                           
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 95 in file "main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  data           10   10[BANK0 ] unsigned char [10]
   558 ;;  digit          10    0[BANK0 ] unsigned char [10]
   559 ;;  voltage         4   20[BANK0 ] float 
   560 ;;  digital         2   26[BANK0 ] int 
   561 ;;  temperature     2   24[BANK0 ] int 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   571 ;;      Params:         0       0       0       0       0       0       0
   572 ;;      Locals:         0      28       0       0       0       0       0
   573 ;;      Temps:          1       0       0       0       0       0       0
   574 ;;      Totals:         1      28       0       0       0       0       0
   575 ;;Total ram usage:       29 bytes
   576 ;; Hardware stack levels required when called: 8
   577 ;; This function calls:
   578 ;;		_ADC_Init
   579 ;;		_ADC_Read
   580 ;;		_LCD_Init
   581 ;;		_LCD_String_xy
   582 ;;		___flmul
   583 ;;		___fltol
   584 ;;		___xxtofl
   585 ;;		_sprintf
   586 ;;		_strcat
   587 ;; This function is called by:
   588 ;;		Startup code after reset
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text0
   593  001376                     __ptext0:
   594                           	callstack 0
   595  001376                     _main:
   596                           	callstack 23
   597  001376                     
   598                           ;main.c: 97:     char data[10];;main.c: 98:     char digit[10];;main.c: 99:     int digi
      +                          tal;;main.c: 100:     float voltage;;main.c: 101:     int temperature;;main.c: 102:     
      +                          LCD_Init();
   599  001376  ECE5  F00C         	call	_LCD_Init	;wreg free
   600                           
   601                           ;main.c: 103:     ADC_Init();
   602  00137A  EC4B  F00D         	call	_ADC_Init	;wreg free
   603  00137E                     
   604                           ;main.c: 104:     LCD_String_xy(1,0,"Temp : ");
   605  00137E  0E00               	movlw	0
   606  001380  6E05               	movwf	LCD_String_xy@pos^0,c
   607  001382  0E0C               	movlw	low STR_1
   608  001384  6E06               	movwf	LCD_String_xy@msg^0,c
   609  001386  0E06               	movlw	high STR_1
   610  001388  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   611  00138A  0E01               	movlw	1
   612  00138C  EC90  F00C         	call	_LCD_String_xy
   613  001390                     
   614                           ;main.c: 105:     LCD_String_xy(2,0,"Digital : ");
   615  001390  0E00               	movlw	0
   616  001392  6E05               	movwf	LCD_String_xy@pos^0,c
   617  001394  0E01               	movlw	low STR_2
   618  001396  6E06               	movwf	LCD_String_xy@msg^0,c
   619  001398  0E06               	movlw	high STR_2
   620  00139A  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   621  00139C  0E02               	movlw	2
   622  00139E  EC90  F00C         	call	_LCD_String_xy
   623  0013A2                     l2019:
   624                           
   625                           ;main.c: 107:     {;main.c: 108:     digital = ADC_Read();
   626  0013A2  ECCB  F00C         	call	_ADC_Read	;wreg free
   627  0013A6  C001  F0BA         	movff	?_ADC_Read,main@digital
   628  0013AA  C002  F0BB         	movff	?_ADC_Read+1,main@digital+1
   629  0013AE                     
   630                           ;main.c: 109:     voltage = digital * ((float)5.00/(float)1023);
   631  0013AE  C0BA  F001         	movff	main@digital,___xxtofl@val
   632  0013B2  C0BB  F002         	movff	main@digital+1,___xxtofl@val+1
   633  0013B6  0E00               	movlw	0
   634  0013B8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   635  0013BA  0EFF               	movlw	-1
   636  0013BC  6E03               	movwf	(___xxtofl@val+2)^0,c
   637  0013BE  6E04               	movwf	(___xxtofl@val+3)^0,c
   638  0013C0  0E01               	movlw	1
   639  0013C2  EC92  F006         	call	___xxtofl
   640  0013C6  C001  F00F         	movff	?___xxtofl,___flmul@b
   641  0013CA  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   642  0013CE  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   643  0013D2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   644  0013D6  0E0A               	movlw	10
   645  0013D8  6E13               	movwf	___flmul@a^0,c
   646  0013DA  0E28               	movlw	40
   647  0013DC  6E14               	movwf	(___flmul@a+1)^0,c
   648  0013DE  0EA0               	movlw	160
   649  0013E0  6E15               	movwf	(___flmul@a+2)^0,c
   650  0013E2  0E3B               	movlw	59
   651  0013E4  6E16               	movwf	(___flmul@a+3)^0,c
   652  0013E6  EC0E  F003         	call	___flmul	;wreg free
   653  0013EA  C00F  F0B4         	movff	?___flmul,main@voltage
   654  0013EE  C010  F0B5         	movff	?___flmul+1,main@voltage+1
   655  0013F2  C011  F0B6         	movff	?___flmul+2,main@voltage+2
   656  0013F6  C012  F0B7         	movff	?___flmul+3,main@voltage+3
   657  0013FA                     
   658                           ;main.c: 110:     temperature = (int)(voltage *100);
   659  0013FA  0E00               	movlw	0
   660  0013FC  6E13               	movwf	___flmul@a^0,c
   661  0013FE  0E00               	movlw	0
   662  001400  6E14               	movwf	(___flmul@a+1)^0,c
   663  001402  0EC8               	movlw	200
   664  001404  6E15               	movwf	(___flmul@a+2)^0,c
   665  001406  0E42               	movlw	66
   666  001408  6E16               	movwf	(___flmul@a+3)^0,c
   667  00140A  C0B4  F00F         	movff	main@voltage,___flmul@b
   668  00140E  C0B5  F010         	movff	main@voltage+1,___flmul@b+1
   669  001412  C0B6  F011         	movff	main@voltage+2,___flmul@b+2
   670  001416  C0B7  F012         	movff	main@voltage+3,___flmul@b+3
   671  00141A  EC0E  F003         	call	___flmul	;wreg free
   672  00141E  C00F  F028         	movff	?___flmul,___fltol@f1
   673  001422  C010  F029         	movff	?___flmul+1,___fltol@f1+1
   674  001426  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
   675  00142A  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
   676  00142E  EC60  F00A         	call	___fltol	;wreg free
   677  001432  C028  F0B8         	movff	?___fltol,main@temperature
   678  001436  C029  F0B9         	movff	?___fltol+1,main@temperature+1
   679  00143A                     
   680                           ;main.c: 111:     sprintf(data,"%d",temperature);
   681  00143A  0EAA               	movlw	low main@data
   682  00143C  6E58               	movwf	sprintf@s^0,c
   683  00143E  0E00               	movlw	high main@data
   684  001440  6E59               	movwf	(sprintf@s+1)^0,c
   685  001442  0E17               	movlw	low STR_3
   686  001444  6E5A               	movwf	sprintf@fmt^0,c
   687  001446  0E06               	movlw	high STR_3
   688  001448  6E5B               	movwf	(sprintf@fmt+1)^0,c
   689  00144A  C0B8  F05C         	movff	main@temperature,?_sprintf+4
   690  00144E  C0B9  F05D         	movff	main@temperature+1,?_sprintf+5
   691  001452  EC07  F00C         	call	_sprintf	;wreg free
   692  001456                     
   693                           ;main.c: 112:     sprintf(digit,"%d",digital);
   694  001456  0EA0               	movlw	low main@digit
   695  001458  6E58               	movwf	sprintf@s^0,c
   696  00145A  0E00               	movlw	high main@digit
   697  00145C  6E59               	movwf	(sprintf@s+1)^0,c
   698  00145E  0E17               	movlw	low STR_3
   699  001460  6E5A               	movwf	sprintf@fmt^0,c
   700  001462  0E06               	movlw	high STR_3
   701  001464  6E5B               	movwf	(sprintf@fmt+1)^0,c
   702  001466  C0BA  F05C         	movff	main@digital,?_sprintf+4
   703  00146A  C0BB  F05D         	movff	main@digital+1,?_sprintf+5
   704  00146E  EC07  F00C         	call	_sprintf	;wreg free
   705  001472                     
   706                           ;main.c: 113:     strcat(data," C");
   707  001472  0EAA               	movlw	low main@data
   708  001474  6E0D               	movwf	strcat@dest^0,c
   709  001476  0E00               	movlw	high main@data
   710  001478  6E0E               	movwf	(strcat@dest+1)^0,c
   711  00147A  0E14               	movlw	low STR_5
   712  00147C  6E0F               	movwf	strcat@src^0,c
   713  00147E  0E06               	movlw	high STR_5
   714  001480  6E10               	movwf	(strcat@src+1)^0,c
   715  001482  EC27  F00D         	call	_strcat	;wreg free
   716  001486                     
   717                           ;main.c: 114:     LCD_String_xy(1,5,data);
   718  001486  0E05               	movlw	5
   719  001488  6E05               	movwf	LCD_String_xy@pos^0,c
   720  00148A  0EAA               	movlw	low main@data
   721  00148C  6E06               	movwf	LCD_String_xy@msg^0,c
   722  00148E  0E00               	movlw	high main@data
   723  001490  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   724  001492  0E01               	movlw	1
   725  001494  EC90  F00C         	call	_LCD_String_xy
   726  001498                     
   727                           ;main.c: 115:     LCD_String_xy(2,9,digit);
   728  001498  0E09               	movlw	9
   729  00149A  6E05               	movwf	LCD_String_xy@pos^0,c
   730  00149C  0EA0               	movlw	low main@digit
   731  00149E  6E06               	movwf	LCD_String_xy@msg^0,c
   732  0014A0  0E00               	movlw	high main@digit
   733  0014A2  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   734  0014A4  0E02               	movlw	2
   735  0014A6  EC90  F00C         	call	_LCD_String_xy
   736  0014AA                     
   737                           ;main.c: 116:     _delay((unsigned long)((50)*(8000000/4000.0)));
   738  0014AA  0E82               	movlw	130
   739  0014AC  6E66               	movwf	??_main^0,c
   740  0014AE  0EDE               	movlw	222
   741  0014B0                     u1737:
   742  0014B0  2EE8               	decfsz	wreg,f,c
   743  0014B2  D7FE               	bra	u1737
   744  0014B4  2E66               	decfsz	??_main^0,f,c
   745  0014B6  D7FC               	bra	u1737
   746  0014B8  EFD1  F009         	goto	l2019
   747  0014BC  EF00  F000         	goto	start
   748  0014C0                     __end_of_main:
   749                           	callstack 0
   750                           
   751 ;; *************** function _strcat *****************
   752 ;; Defined at:
   753 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcat.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  dest            2   12[COMRAM] PTR unsigned char 
   756 ;;		 -> main@data(10), 
   757 ;;  src             2   14[COMRAM] PTR const unsigned char 
   758 ;;		 -> STR_5(3), 
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  2   12[COMRAM] PTR unsigned char 
   763 ;; Registers used:
   764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   770 ;;      Params:         4       0       0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0       0       0
   773 ;;      Totals:         4       0       0       0       0       0       0
   774 ;;Total ram usage:        4 bytes
   775 ;; Hardware stack levels used: 1
   776 ;; Hardware stack levels required when called: 1
   777 ;; This function calls:
   778 ;;		_strcpy
   779 ;;		_strlen
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text1
   786  001A4E                     __ptext1:
   787                           	callstack 0
   788  001A4E                     _strcat:
   789                           	callstack 29
   790  001A4E  C00D  F001         	movff	strcat@dest,strlen@s
   791  001A52  C00E  F002         	movff	strcat@dest+1,strlen@s+1
   792  001A56  ECB0  F00C         	call	_strlen	;wreg free
   793  001A5A  5001               	movf	?_strlen^0,w,c
   794  001A5C  240D               	addwf	strcat@dest^0,w,c
   795  001A5E  6E05               	movwf	strcpy@dest^0,c
   796  001A60  5002               	movf	(?_strlen+1)^0,w,c
   797  001A62  200E               	addwfc	(strcat@dest+1)^0,w,c
   798  001A64  6E06               	movwf	(strcpy@dest+1)^0,c
   799  001A66  C00F  F007         	movff	strcat@src,strcpy@src
   800  001A6A  C010  F008         	movff	strcat@src+1,strcpy@src+1
   801  001A6E  EC50  F00C         	call	_strcpy	;wreg free
   802  001A72  0012               	return		;funcret
   803  001A74                     __end_of_strcat:
   804                           	callstack 0
   805                           
   806 ;; *************** function _strcpy *****************
   807 ;; Defined at:
   808 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  dest            2    4[COMRAM] PTR unsigned char 
   811 ;;		 -> main@data(10), 
   812 ;;  src             2    6[COMRAM] PTR const unsigned char 
   813 ;;		 -> STR_5(3), 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  d               2   10[COMRAM] PTR unsigned char 
   816 ;;		 -> main@data(10), 
   817 ;;  s               2    8[COMRAM] PTR const unsigned char 
   818 ;;		 -> STR_5(3), 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  2    4[COMRAM] PTR unsigned char 
   821 ;; Registers used:
   822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   828 ;;      Params:         4       0       0       0       0       0       0
   829 ;;      Locals:         4       0       0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0
   831 ;;      Totals:         8       0       0       0       0       0       0
   832 ;;Total ram usage:        8 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_strcat
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text2
   842  0018A0                     __ptext2:
   843                           	callstack 0
   844  0018A0                     _strcpy:
   845                           	callstack 29
   846  0018A0  C007  F009         	movff	strcpy@src,strcpy@s
   847  0018A4  C008  F00A         	movff	strcpy@src+1,strcpy@s+1
   848  0018A8  C005  F00B         	movff	strcpy@dest,strcpy@d
   849  0018AC  C006  F00C         	movff	strcpy@dest+1,strcpy@d+1
   850  0018B0                     l1737:
   851  0018B0  C009  FFF6         	movff	strcpy@s,tblptrl
   852  0018B4  C00A  FFF7         	movff	strcpy@s+1,tblptrh
   853  0018B8  4A09               	infsnz	strcpy@s^0,f,c
   854  0018BA  2A0A               	incf	(strcpy@s+1)^0,f,c
   855  0018BC                     	if	0	;tblptru may be non-zero
   856  0018BC                     	endif
   857  0018BC                     	if	0	;tblptru may be non-zero
   858  0018BC                     	endif
   859  0018BC  C00B  FFD9         	movff	strcpy@d,fsr2l
   860  0018C0  C00C  FFDA         	movff	strcpy@d+1,fsr2h
   861  0018C4  4A0B               	infsnz	strcpy@d^0,f,c
   862  0018C6  2A0C               	incf	(strcpy@d+1)^0,f,c
   863  0018C8  0008               	tblrd		*
   864  0018CA  CFF5 FFDF          	movff	tablat,indf2
   865  0018CE  50DF               	movf	indf2,w,c
   866  0018D0  A4D8               	btfss	status,2,c
   867  0018D2  EF6D  F00C         	goto	u1341
   868  0018D6  EF6F  F00C         	goto	u1340
   869  0018DA                     u1341:
   870  0018DA  EF58  F00C         	goto	l1737
   871  0018DE                     u1340:
   872  0018DE  0012               	return		;funcret
   873  0018E0                     __end_of_strcpy:
   874                           	callstack 0
   875                           
   876 ;; *************** function _sprintf *****************
   877 ;; Defined at:
   878 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  s               2   87[COMRAM] PTR unsigned char 
   881 ;;		 -> main@digit(10), main@data(10), 
   882 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   883 ;;		 -> STR_4(3), STR_3(3), 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  f               6   95[COMRAM] struct _IO_FILE
   886 ;;  ap              2   93[COMRAM] PTR void [1]
   887 ;;		 -> ?_sprintf(2), 
   888 ;;  ret             2    0        int 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  2   87[COMRAM] int 
   891 ;; Registers used:
   892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   898 ;;      Params:         6       0       0       0       0       0       0
   899 ;;      Locals:         8       0       0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0
   901 ;;      Totals:        14       0       0       0       0       0       0
   902 ;;Total ram usage:       14 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 7
   905 ;; This function calls:
   906 ;;		_vfprintf
   907 ;; This function is called by:
   908 ;;		_main
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text3
   913  00180E                     __ptext3:
   914                           	callstack 0
   915  00180E                     _sprintf:
   916                           	callstack 23
   917  00180E  0E5C               	movlw	low (?_sprintf+4)
   918  001810  6E5E               	movwf	sprintf@ap^0,c
   919  001812  0E00               	movlw	high (?_sprintf+4)
   920  001814  6E5F               	movwf	(sprintf@ap+1)^0,c
   921  001816  C058  F060         	movff	sprintf@s,sprintf@f
   922  00181A  C059  F061         	movff	sprintf@s+1,sprintf@f+1
   923  00181E  0E00               	movlw	0
   924  001820  6E63               	movwf	(sprintf@f+3)^0,c
   925  001822  0E00               	movlw	0
   926  001824  6E62               	movwf	(sprintf@f+2)^0,c
   927  001826  0E00               	movlw	0
   928  001828  6E65               	movwf	(sprintf@f+5)^0,c
   929  00182A  0E00               	movlw	0
   930  00182C  6E64               	movwf	(sprintf@f+4)^0,c
   931  00182E  0E60               	movlw	low sprintf@f
   932  001830  6E50               	movwf	vfprintf@fp^0,c
   933  001832  0E00               	movlw	high sprintf@f
   934  001834  6E51               	movwf	(vfprintf@fp+1)^0,c
   935  001836  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
   936  00183A  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   937  00183E  0E5E               	movlw	low sprintf@ap
   938  001840  6E54               	movwf	vfprintf@ap^0,c
   939  001842  0E00               	movlw	high sprintf@ap
   940  001844  6E55               	movwf	(vfprintf@ap+1)^0,c
   941  001846  ECA9  F00B         	call	_vfprintf	;wreg free
   942  00184A  5062               	movf	(sprintf@f+2)^0,w,c
   943  00184C  2458               	addwf	sprintf@s^0,w,c
   944  00184E  6ED9               	movwf	fsr2l,c
   945  001850  5063               	movf	(sprintf@f+3)^0,w,c
   946  001852  2059               	addwfc	(sprintf@s+1)^0,w,c
   947  001854  6EDA               	movwf	fsr2h,c
   948  001856  0E00               	movlw	0
   949  001858  6EDF               	movwf	indf2,c
   950  00185A  0012               	return		;funcret
   951  00185C                     __end_of_sprintf:
   952                           	callstack 0
   953                           
   954 ;; *************** function _vfprintf *****************
   955 ;; Defined at:
   956 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   959 ;;		 -> sprintf@f(6), 
   960 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   961 ;;		 -> STR_4(3), STR_3(3), 
   962 ;;  ap              2   83[COMRAM] PTR PTR void 
   963 ;;		 -> sprintf@ap(2), 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   966 ;;		 -> STR_4(3), STR_3(3), 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  2   79[COMRAM] int 
   969 ;; Registers used:
   970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   976 ;;      Params:         6       0       0       0       0       0       0
   977 ;;      Locals:         2       0       0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0
   979 ;;      Totals:         8       0       0       0       0       0       0
   980 ;;Total ram usage:        8 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; Hardware stack levels required when called: 6
   983 ;; This function calls:
   984 ;;		_vfpfcnvrt
   985 ;; This function is called by:
   986 ;;		_sprintf
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text4
   991  001752                     __ptext4:
   992                           	callstack 0
   993  001752                     _vfprintf:
   994                           	callstack 23
   995  001752                     
   996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   997  001752  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   998  001756  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   999  00175A                     
  1000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1001  00175A  0E00               	movlw	0
  1002  00175C  6E68               	movwf	(_nout+1)^0,c
  1003  00175E  0E00               	movlw	0
  1004  001760  6E67               	movwf	_nout^0,c
  1005                           
  1006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1007  001762  EFC5  F00B         	goto	l1733
  1008  001766                     l1731:
  1009                           
  1010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1011  001766  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1012  00176A  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1013  00176E  0E56               	movlw	low vfprintf@cfmt
  1014  001770  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1015  001772  0E00               	movlw	high vfprintf@cfmt
  1016  001774  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1017  001776  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1018  00177A  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1019  00177E  EC6C  F007         	call	_vfpfcnvrt	;wreg free
  1020  001782  5040               	movf	?_vfpfcnvrt^0,w,c
  1021  001784  2667               	addwf	_nout^0,f,c
  1022  001786  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1023  001788  2268               	addwfc	(_nout+1)^0,f,c
  1024  00178A                     l1733:
  1025                           
  1026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1027  00178A  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1028  00178E  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1029  001792                     	if	0	;tblptru may be non-zero
  1030  001792                     	endif
  1031  001792                     	if	0	;tblptru may be non-zero
  1032  001792                     	endif
  1033  001792  0008               	tblrd		*
  1034  001794  50F5               	movf	tablat,w,c
  1035  001796  0900               	iorlw	0
  1036  001798  A4D8               	btfss	status,2,c
  1037  00179A  EFD1  F00B         	goto	u1331
  1038  00179E  EFD3  F00B         	goto	u1330
  1039  0017A2                     u1331:
  1040  0017A2  EFB3  F00B         	goto	l1731
  1041  0017A6                     u1330:
  1042  0017A6                     
  1043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1044  0017A6  C067  F050         	movff	_nout,?_vfprintf
  1045  0017AA  C068  F051         	movff	_nout+1,?_vfprintf+1
  1046  0017AE  0012               	return		;funcret
  1047  0017B0                     __end_of_vfprintf:
  1048                           	callstack 0
  1049                           
  1050 ;; *************** function _vfpfcnvrt *****************
  1051 ;; Defined at:
  1052 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1055 ;;		 -> sprintf@f(6), 
  1056 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1057 ;;		 -> vfprintf@cfmt(2), 
  1058 ;;  ap              2   67[COMRAM] PTR PTR void 
  1059 ;;		 -> sprintf@ap(2), 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  ll              8   71[COMRAM] long long 
  1062 ;;  llu             8    0        unsigned long long 
  1063 ;;  f               4    0        unsigned long long 
  1064 ;;  vp              3    0        PTR void 
  1065 ;;  ct              3    0        unsigned char [3]
  1066 ;;  cp              3    0        PTR unsigned char 
  1067 ;;  i               2    0        int 
  1068 ;;  done            2    0        int 
  1069 ;;  c               1    0        unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  2   63[COMRAM] int 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1079 ;;      Params:         6       0       0       0       0       0       0
  1080 ;;      Locals:         8       0       0       0       0       0       0
  1081 ;;      Temps:          2       0       0       0       0       0       0
  1082 ;;      Totals:        16       0       0       0       0       0       0
  1083 ;;Total ram usage:       16 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 5
  1086 ;; This function calls:
  1087 ;;		_dtoa
  1088 ;;		_fputc
  1089 ;; This function is called by:
  1090 ;;		_vfprintf
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text5
  1095  000ED8                     __ptext5:
  1096                           	callstack 0
  1097  000ED8                     _vfpfcnvrt:
  1098                           	callstack 23
  1099  000ED8                     
  1100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1101  000ED8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1102  000EDC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1103  000EE0  CFDE FFF6          	movff	postinc2,tblptrl
  1104  000EE4  CFDD FFF7          	movff	postdec2,tblptrh
  1105  000EE8                     	if	0	;tblptru may be non-zero
  1106  000EE8                     	endif
  1107  000EE8                     	if	0	;tblptru may be non-zero
  1108  000EE8                     	endif
  1109  000EE8  0008               	tblrd		*
  1110  000EEA  50F5               	movf	tablat,w,c
  1111  000EEC  0A25               	xorlw	37
  1112  000EEE  A4D8               	btfss	status,2,c
  1113  000EF0  EF7C  F007         	goto	u1261
  1114  000EF4  EF7E  F007         	goto	u1260
  1115  000EF8                     u1261:
  1116  000EF8  EF29  F008         	goto	l1699
  1117  000EFC                     u1260:
  1118  000EFC                     
  1119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1120  000EFC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1121  000F00  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1122  000F04  2ADE               	incf	postinc2,f,c
  1123  000F06  0E00               	movlw	0
  1124  000F08  22DD               	addwfc	postdec2,f,c
  1125  000F0A                     
  1126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1127  000F0A  0E00               	movlw	0
  1128  000F0C  6E6A               	movwf	(_width+1)^0,c
  1129  000F0E  0E00               	movlw	0
  1130  000F10  6E69               	movwf	_width^0,c
  1131  000F12  C069  F06D         	movff	_width,_flags
  1132  000F16  C06A  F06E         	movff	_width+1,_flags+1
  1133  000F1A                     
  1134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1135  000F1A  686B               	setf	_prec^0,c
  1136  000F1C  686C               	setf	(_prec+1)^0,c
  1137  000F1E                     
  1138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1139  000F1E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1140  000F22  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1141  000F26  CFDE FFF6          	movff	postinc2,tblptrl
  1142  000F2A  CFDD FFF7          	movff	postdec2,tblptrh
  1143  000F2E                     	if	0	;tblptru may be non-zero
  1144  000F2E                     	endif
  1145  000F2E                     	if	0	;tblptru may be non-zero
  1146  000F2E                     	endif
  1147  000F2E  0008               	tblrd		*
  1148  000F30  50F5               	movf	tablat,w,c
  1149  000F32  0A64               	xorlw	100
  1150  000F34  B4D8               	btfsc	status,2,c
  1151  000F36  EF9F  F007         	goto	u1271
  1152  000F3A  EFA1  F007         	goto	u1270
  1153  000F3E                     u1271:
  1154  000F3E  EFB3  F007         	goto	l1677
  1155  000F42                     u1270:
  1156  000F42  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1157  000F46  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1158  000F4A  CFDE FFF6          	movff	postinc2,tblptrl
  1159  000F4E  CFDD FFF7          	movff	postdec2,tblptrh
  1160  000F52                     	if	0	;tblptru may be non-zero
  1161  000F52                     	endif
  1162  000F52                     	if	0	;tblptru may be non-zero
  1163  000F52                     	endif
  1164  000F52  0008               	tblrd		*
  1165  000F54  50F5               	movf	tablat,w,c
  1166  000F56  0A69               	xorlw	105
  1167  000F58  A4D8               	btfss	status,2,c
  1168  000F5A  EFB1  F007         	goto	u1281
  1169  000F5E  EFB3  F007         	goto	u1280
  1170  000F62                     u1281:
  1171  000F62  EFF3  F007         	goto	l1683
  1172  000F66                     u1280:
  1173  000F66                     l1677:
  1174                           
  1175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1176  000F66  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1177  000F6A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1178  000F6E  2ADE               	incf	postinc2,f,c
  1179  000F70  0E00               	movlw	0
  1180  000F72  22DD               	addwfc	postdec2,f,c
  1181                           
  1182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1183  000F74  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1184  000F78  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1185  000F7C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1186  000F80  0E02               	movlw	2
  1187  000F82  26DE               	addwf	postinc2,f,c
  1188  000F84  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1189  000F88  0E00               	movlw	0
  1190  000F8A  22DD               	addwfc	postdec2,f,c
  1191  000F8C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1192  000F90  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1193  000F94  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1194  000F98  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1195  000F9C  0E00               	movlw	0
  1196  000F9E  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1197  000FA0  0EFF               	movlw	-1
  1198  000FA2  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1199  000FA4  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1200  000FA6  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1201  000FA8  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1202  000FAA  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1203  000FAC  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1204  000FAE                     
  1205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1206  000FAE  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1207  000FB2  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1208  000FB6  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1209  000FBA  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1210  000FBE  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1211  000FC2  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1212  000FC6  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1213  000FCA  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1214  000FCE  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1215  000FD2  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1216  000FD6  EC23  F005         	call	_dtoa	;wreg free
  1217  000FDA  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1218  000FDE  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1219  000FE2  EF44  F008         	goto	l811
  1220  000FE6                     l1683:
  1221                           
  1222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1223  000FE6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1224  000FEA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1225  000FEE  CFDE FFF6          	movff	postinc2,tblptrl
  1226  000FF2  CFDD FFF7          	movff	postdec2,tblptrh
  1227  000FF6                     	if	0	;tblptru may be non-zero
  1228  000FF6                     	endif
  1229  000FF6                     	if	0	;tblptru may be non-zero
  1230  000FF6                     	endif
  1231  000FF6  0008               	tblrd		*
  1232  000FF8  50F5               	movf	tablat,w,c
  1233  000FFA  0A25               	xorlw	37
  1234  000FFC  A4D8               	btfss	status,2,c
  1235  000FFE  EF03  F008         	goto	u1291
  1236  001002  EF05  F008         	goto	u1290
  1237  001006                     u1291:
  1238  001006  EF1C  F008         	goto	l1693
  1239  00100A                     u1290:
  1240  00100A                     
  1241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1242  00100A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1243  00100E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1244  001012  2ADE               	incf	postinc2,f,c
  1245  001014  0E00               	movlw	0
  1246  001016  22DD               	addwfc	postdec2,f,c
  1247  001018                     
  1248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1249  001018  0E00               	movlw	0
  1250  00101A  6E02               	movwf	(fputc@c+1)^0,c
  1251  00101C  0E25               	movlw	37
  1252  00101E  6E01               	movwf	fputc@c^0,c
  1253  001020  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1254  001024  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1255  001028  ECE3  F00A         	call	_fputc	;wreg free
  1256  00102C                     l1689:
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1259  00102C  0E00               	movlw	0
  1260  00102E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1261  001030  0E01               	movlw	1
  1262  001032  6E40               	movwf	?_vfpfcnvrt^0,c
  1263  001034  EF44  F008         	goto	l811
  1264  001038                     l1693:
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1267  001038  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1268  00103C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1269  001040  2ADE               	incf	postinc2,f,c
  1270  001042  0E00               	movlw	0
  1271  001044  22DD               	addwfc	postdec2,f,c
  1272  001046                     
  1273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1274  001046  0E00               	movlw	0
  1275  001048  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1276  00104A  0E00               	movlw	0
  1277  00104C  6E40               	movwf	?_vfpfcnvrt^0,c
  1278  00104E  EF44  F008         	goto	l811
  1279  001052                     l1699:
  1280                           
  1281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1282  001052  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1283  001056  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1284  00105A  CFDE FFF6          	movff	postinc2,tblptrl
  1285  00105E  CFDD FFF7          	movff	postdec2,tblptrh
  1286  001062                     	if	0	;tblptru may be non-zero
  1287  001062                     	endif
  1288  001062                     	if	0	;tblptru may be non-zero
  1289  001062                     	endif
  1290  001062  0008               	tblrd		*
  1291  001064  50F5               	movf	tablat,w,c
  1292  001066  6E01               	movwf	fputc@c^0,c
  1293  001068  6A02               	clrf	(fputc@c+1)^0,c
  1294  00106A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1295  00106E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1296  001072  ECE3  F00A         	call	_fputc	;wreg free
  1297  001076                     
  1298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1299  001076  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1300  00107A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1301  00107E  2ADE               	incf	postinc2,f,c
  1302  001080  0E00               	movlw	0
  1303  001082  22DD               	addwfc	postdec2,f,c
  1304  001084  EF16  F008         	goto	l1689
  1305  001088                     l811:
  1306  001088  0012               	return		;funcret
  1307  00108A                     __end_of_vfpfcnvrt:
  1308                           	callstack 0
  1309                           
  1310 ;; *************** function _dtoa *****************
  1311 ;; Defined at:
  1312 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1315 ;;		 -> sprintf@f(6), 
  1316 ;;  d               8   29[COMRAM] long long 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  n               8   53[COMRAM] long long 
  1319 ;;  i               2   61[COMRAM] int 
  1320 ;;  s               2   51[COMRAM] int 
  1321 ;;  w               2   49[COMRAM] int 
  1322 ;;  p               2   47[COMRAM] int 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  2   27[COMRAM] int 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1332 ;;      Params:        10       0       0       0       0       0       0
  1333 ;;      Locals:        18       0       0       0       0       0       0
  1334 ;;      Temps:          8       0       0       0       0       0       0
  1335 ;;      Totals:        36       0       0       0       0       0       0
  1336 ;;Total ram usage:       36 bytes
  1337 ;; Hardware stack levels used: 1
  1338 ;; Hardware stack levels required when called: 4
  1339 ;; This function calls:
  1340 ;;		___aodiv
  1341 ;;		___aomod
  1342 ;;		_abs
  1343 ;;		_pad
  1344 ;; This function is called by:
  1345 ;;		_vfpfcnvrt
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text6
  1350  000A46                     __ptext6:
  1351                           	callstack 0
  1352  000A46                     _dtoa:
  1353                           	callstack 23
  1354  000A46                     
  1355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1356  000A46  C01E  F036         	movff	dtoa@d,dtoa@n
  1357  000A4A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1358  000A4E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1359  000A52  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1360  000A56  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1361  000A5A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1362  000A5E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1363  000A62  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1364  000A66                     
  1365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1366  000A66  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1367  000A68  EF38  F005         	goto	u1111
  1368  000A6C  EF3B  F005         	goto	u1110
  1369  000A70                     u1111:
  1370  000A70  0E01               	movlw	1
  1371  000A72  EF3C  F005         	goto	u1120
  1372  000A76                     u1110:
  1373  000A76  0E00               	movlw	0
  1374  000A78                     u1120:
  1375  000A78  6E34               	movwf	dtoa@s^0,c
  1376  000A7A  6A35               	clrf	(dtoa@s+1)^0,c
  1377                           
  1378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1379  000A7C  5034               	movf	dtoa@s^0,w,c
  1380  000A7E  1035               	iorwf	(dtoa@s+1)^0,w,c
  1381  000A80  B4D8               	btfsc	status,2,c
  1382  000A82  EF45  F005         	goto	u1131
  1383  000A86  EF47  F005         	goto	u1130
  1384  000A8A                     u1131:
  1385  000A8A  EF57  F005         	goto	l1597
  1386  000A8E                     u1130:
  1387  000A8E                     
  1388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1389  000A8E  1E3D               	comf	(dtoa@n+7)^0,f,c
  1390  000A90  1E3C               	comf	(dtoa@n+6)^0,f,c
  1391  000A92  1E3B               	comf	(dtoa@n+5)^0,f,c
  1392  000A94  1E3A               	comf	(dtoa@n+4)^0,f,c
  1393  000A96  1E39               	comf	(dtoa@n+3)^0,f,c
  1394  000A98  1E38               	comf	(dtoa@n+2)^0,f,c
  1395  000A9A  1E37               	comf	(dtoa@n+1)^0,f,c
  1396  000A9C  6C36               	negf	dtoa@n^0,c
  1397  000A9E  0E00               	movlw	0
  1398  000AA0  2237               	addwfc	(dtoa@n+1)^0,f,c
  1399  000AA2  2238               	addwfc	(dtoa@n+2)^0,f,c
  1400  000AA4  2239               	addwfc	(dtoa@n+3)^0,f,c
  1401  000AA6  223A               	addwfc	(dtoa@n+4)^0,f,c
  1402  000AA8  223B               	addwfc	(dtoa@n+5)^0,f,c
  1403  000AAA  223C               	addwfc	(dtoa@n+6)^0,f,c
  1404  000AAC  223D               	addwfc	(dtoa@n+7)^0,f,c
  1405  000AAE                     l1597:
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1408  000AAE  BE6C               	btfsc	(_prec+1)^0,7,c
  1409  000AB0  EF5C  F005         	goto	u1141
  1410  000AB4  EF5E  F005         	goto	u1140
  1411  000AB8                     u1141:
  1412  000AB8  EF5F  F005         	goto	l1601
  1413  000ABC                     u1140:
  1414  000ABC                     
  1415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1416  000ABC  926D               	bcf	_flags^0,1,c
  1417  000ABE                     l1601:
  1418                           
  1419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1420  000ABE  BE6C               	btfsc	(_prec+1)^0,7,c
  1421  000AC0  EF6C  F005         	goto	u1150
  1422  000AC4  506C               	movf	(_prec+1)^0,w,c
  1423  000AC6  E106               	bnz	u1151
  1424  000AC8  046B               	decf	_prec^0,w,c
  1425  000ACA  B0D8               	btfsc	status,0,c
  1426  000ACC  EF6A  F005         	goto	u1151
  1427  000AD0  EF6C  F005         	goto	u1150
  1428  000AD4                     u1151:
  1429  000AD4  EF72  F005         	goto	l784
  1430  000AD8                     u1150:
  1431  000AD8  0E00               	movlw	0
  1432  000ADA  6E31               	movwf	(dtoa@p+1)^0,c
  1433  000ADC  0E01               	movlw	1
  1434  000ADE  6E30               	movwf	dtoa@p^0,c
  1435  000AE0  EF76  F005         	goto	l786
  1436  000AE4                     l784:
  1437  000AE4  C06B  F030         	movff	_prec,dtoa@p
  1438  000AE8  C06C  F031         	movff	_prec+1,dtoa@p+1
  1439  000AEC                     l786:
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1442  000AEC  C069  F032         	movff	_width,dtoa@w
  1443  000AF0  C06A  F033         	movff	_width+1,dtoa@w+1
  1444  000AF4                     
  1445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1446  000AF4  5034               	movf	dtoa@s^0,w,c
  1447  000AF6  1035               	iorwf	(dtoa@s+1)^0,w,c
  1448  000AF8  A4D8               	btfss	status,2,c
  1449  000AFA  EF81  F005         	goto	u1161
  1450  000AFE  EF83  F005         	goto	u1160
  1451  000B02                     u1161:
  1452  000B02  EF8A  F005         	goto	l1609
  1453  000B06                     u1160:
  1454  000B06  A46D               	btfss	_flags^0,2,c
  1455  000B08  EF88  F005         	goto	u1171
  1456  000B0C  EF8A  F005         	goto	u1170
  1457  000B10                     u1171:
  1458  000B10  EF8D  F005         	goto	l1611
  1459  000B14                     u1170:
  1460  000B14                     l1609:
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1463  000B14  0632               	decf	dtoa@w^0,f,c
  1464  000B16  A0D8               	btfss	status,0,c
  1465  000B18  0633               	decf	(dtoa@w+1)^0,f,c
  1466  000B1A                     l1611:
  1467                           
  1468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1469  000B1A  0E00               	movlw	0
  1470  000B1C  6E3F               	movwf	(dtoa@i+1)^0,c
  1471  000B1E  0E1F               	movlw	31
  1472  000B20  6E3E               	movwf	dtoa@i^0,c
  1473  000B22                     
  1474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1475  000B22  0E00               	movlw	0
  1476  000B24  0100               	movlb	0	; () banked
  1477  000B26  6F9F               	movwf	(_dbuf+31)& (0+255),b
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1480  000B28  EF12  F006         	goto	l1625
  1481  000B2C                     l1615:
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1484  000B2C  063E               	decf	dtoa@i^0,f,c
  1485  000B2E  A0D8               	btfss	status,0,c
  1486  000B30  063F               	decf	(dtoa@i+1)^0,f,c
  1487  000B32                     
  1488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1489  000B32  0E80               	movlw	low _dbuf
  1490  000B34  243E               	addwf	dtoa@i^0,w,c
  1491  000B36  6ED9               	movwf	fsr2l,c
  1492  000B38  0E00               	movlw	high _dbuf
  1493  000B3A  203F               	addwfc	(dtoa@i+1)^0,w,c
  1494  000B3C  6EDA               	movwf	fsr2h,c
  1495  000B3E  C036  F001         	movff	dtoa@n,___aomod@dividend
  1496  000B42  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1497  000B46  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1498  000B4A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1499  000B4E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1500  000B52  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1501  000B56  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1502  000B5A  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1503  000B5E  0E0A               	movlw	10
  1504  000B60  6E09               	movwf	___aomod@divisor^0,c
  1505  000B62  0E00               	movlw	0
  1506  000B64  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1507  000B66  0E00               	movlw	0
  1508  000B68  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1509  000B6A  0E00               	movlw	0
  1510  000B6C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1511  000B6E  0E00               	movlw	0
  1512  000B70  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1513  000B72  0E00               	movlw	0
  1514  000B74  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1515  000B76  0E00               	movlw	0
  1516  000B78  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1517  000B7A  0E00               	movlw	0
  1518  000B7C  6E10               	movwf	(___aomod@divisor+7)^0,c
  1519  000B7E  EC09  F009         	call	___aomod	;wreg free
  1520  000B82  C001  F026         	movff	?___aomod,??_dtoa
  1521  000B86  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1522  000B8A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1523  000B8E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1524  000B92  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1525  000B96  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1526  000B9A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1527  000B9E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1528  000BA2  C026  F013         	movff	??_dtoa,abs@a
  1529  000BA6  C028  F014         	movff	??_dtoa+2,abs@a+1
  1530  000BAA  EC70  F00C         	call	_abs	;wreg free
  1531  000BAE  5013               	movf	?_abs^0,w,c
  1532  000BB0  0F30               	addlw	48
  1533  000BB2  6EDF               	movwf	indf2,c
  1534  000BB4                     
  1535                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1536  000BB4  0630               	decf	dtoa@p^0,f,c
  1537  000BB6  A0D8               	btfss	status,0,c
  1538  000BB8  0631               	decf	(dtoa@p+1)^0,f,c
  1539  000BBA                     
  1540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1541  000BBA  0632               	decf	dtoa@w^0,f,c
  1542  000BBC  A0D8               	btfss	status,0,c
  1543  000BBE  0633               	decf	(dtoa@w+1)^0,f,c
  1544  000BC0                     
  1545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1546  000BC0  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1547  000BC4  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1548  000BC8  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1549  000BCC  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1550  000BD0  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1551  000BD4  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1552  000BD8  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1553  000BDC  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1554  000BE0  0E0A               	movlw	10
  1555  000BE2  6E09               	movwf	___aodiv@divisor^0,c
  1556  000BE4  0E00               	movlw	0
  1557  000BE6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1558  000BE8  0E00               	movlw	0
  1559  000BEA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1560  000BEC  0E00               	movlw	0
  1561  000BEE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1562  000BF0  0E00               	movlw	0
  1563  000BF2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1564  000BF4  0E00               	movlw	0
  1565  000BF6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1566  000BF8  0E00               	movlw	0
  1567  000BFA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1568  000BFC  0E00               	movlw	0
  1569  000BFE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1570  000C00  EC45  F008         	call	___aodiv	;wreg free
  1571  000C04  C001  F036         	movff	?___aodiv,dtoa@n
  1572  000C08  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1573  000C0C  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1574  000C10  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1575  000C14  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1576  000C18  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1577  000C1C  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1578  000C20  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1579  000C24                     l1625:
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1582  000C24  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1583  000C26  EF1D  F006         	goto	u1181
  1584  000C2A  503F               	movf	(dtoa@i+1)^0,w,c
  1585  000C2C  E108               	bnz	u1180
  1586  000C2E  043E               	decf	dtoa@i^0,w,c
  1587  000C30  A0D8               	btfss	status,0,c
  1588  000C32  EF1D  F006         	goto	u1181
  1589  000C36  EF1F  F006         	goto	u1180
  1590  000C3A                     u1181:
  1591  000C3A  EF4F  F006         	goto	l1635
  1592  000C3E                     u1180:
  1593  000C3E  5036               	movf	dtoa@n^0,w,c
  1594  000C40  1037               	iorwf	(dtoa@n+1)^0,w,c
  1595  000C42  1038               	iorwf	(dtoa@n+2)^0,w,c
  1596  000C44  1039               	iorwf	(dtoa@n+3)^0,w,c
  1597  000C46  103A               	iorwf	(dtoa@n+4)^0,w,c
  1598  000C48  103B               	iorwf	(dtoa@n+5)^0,w,c
  1599  000C4A  103C               	iorwf	(dtoa@n+6)^0,w,c
  1600  000C4C  103D               	iorwf	(dtoa@n+7)^0,w,c
  1601  000C4E  A4D8               	btfss	status,2,c
  1602  000C50  EF2C  F006         	goto	u1191
  1603  000C54  EF2E  F006         	goto	u1190
  1604  000C58                     u1191:
  1605  000C58  EF96  F005         	goto	l1615
  1606  000C5C                     u1190:
  1607  000C5C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1608  000C5E  EF3B  F006         	goto	u1200
  1609  000C62  5031               	movf	(dtoa@p+1)^0,w,c
  1610  000C64  E106               	bnz	u1201
  1611  000C66  0430               	decf	dtoa@p^0,w,c
  1612  000C68  B0D8               	btfsc	status,0,c
  1613  000C6A  EF39  F006         	goto	u1201
  1614  000C6E  EF3B  F006         	goto	u1200
  1615  000C72                     u1201:
  1616  000C72  EF96  F005         	goto	l1615
  1617  000C76                     u1200:
  1618  000C76  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1619  000C78  EF46  F006         	goto	u1211
  1620  000C7C  5033               	movf	(dtoa@w+1)^0,w,c
  1621  000C7E  E108               	bnz	u1210
  1622  000C80  0432               	decf	dtoa@w^0,w,c
  1623  000C82  A0D8               	btfss	status,0,c
  1624  000C84  EF46  F006         	goto	u1211
  1625  000C88  EF48  F006         	goto	u1210
  1626  000C8C                     u1211:
  1627  000C8C  EF4F  F006         	goto	l1635
  1628  000C90                     u1210:
  1629  000C90  B26D               	btfsc	_flags^0,1,c
  1630  000C92  EF4D  F006         	goto	u1221
  1631  000C96  EF4F  F006         	goto	u1220
  1632  000C9A                     u1221:
  1633  000C9A  EF96  F005         	goto	l1615
  1634  000C9E                     u1220:
  1635  000C9E                     l1635:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1638  000C9E  5034               	movf	dtoa@s^0,w,c
  1639  000CA0  1035               	iorwf	(dtoa@s+1)^0,w,c
  1640  000CA2  A4D8               	btfss	status,2,c
  1641  000CA4  EF56  F006         	goto	u1231
  1642  000CA8  EF58  F006         	goto	u1230
  1643  000CAC                     u1231:
  1644  000CAC  EF5F  F006         	goto	l1639
  1645  000CB0                     u1230:
  1646  000CB0  A46D               	btfss	_flags^0,2,c
  1647  000CB2  EF5D  F006         	goto	u1241
  1648  000CB6  EF5F  F006         	goto	u1240
  1649  000CBA                     u1241:
  1650  000CBA  EF7D  F006         	goto	l1649
  1651  000CBE                     u1240:
  1652  000CBE                     l1639:
  1653                           
  1654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1655  000CBE  063E               	decf	dtoa@i^0,f,c
  1656  000CC0  A0D8               	btfss	status,0,c
  1657  000CC2  063F               	decf	(dtoa@i+1)^0,f,c
  1658  000CC4                     
  1659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1660  000CC4  5034               	movf	dtoa@s^0,w,c
  1661  000CC6  1035               	iorwf	(dtoa@s+1)^0,w,c
  1662  000CC8  A4D8               	btfss	status,2,c
  1663  000CCA  EF69  F006         	goto	u1251
  1664  000CCE  EF6B  F006         	goto	u1250
  1665  000CD2                     u1251:
  1666  000CD2  EF71  F006         	goto	l1645
  1667  000CD6                     u1250:
  1668  000CD6  0E00               	movlw	0
  1669  000CD8  6E2F               	movwf	(_dtoa$734+1)^0,c
  1670  000CDA  0E2B               	movlw	43
  1671  000CDC  6E2E               	movwf	_dtoa$734^0,c
  1672  000CDE  EF75  F006         	goto	l1647
  1673  000CE2                     l1645:
  1674  000CE2  0E00               	movlw	0
  1675  000CE4  6E2F               	movwf	(_dtoa$734+1)^0,c
  1676  000CE6  0E2D               	movlw	45
  1677  000CE8  6E2E               	movwf	_dtoa$734^0,c
  1678  000CEA                     l1647:
  1679  000CEA  0E80               	movlw	low _dbuf
  1680  000CEC  243E               	addwf	dtoa@i^0,w,c
  1681  000CEE  6ED9               	movwf	fsr2l,c
  1682  000CF0  0E00               	movlw	high _dbuf
  1683  000CF2  203F               	addwfc	(dtoa@i+1)^0,w,c
  1684  000CF4  6EDA               	movwf	fsr2h,c
  1685  000CF6  C02E  FFDF         	movff	_dtoa$734,indf2
  1686  000CFA                     l1649:
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1689  000CFA  C01C  F011         	movff	dtoa@fp,pad@fp
  1690  000CFE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1691  000D02  0E80               	movlw	low _dbuf
  1692  000D04  243E               	addwf	dtoa@i^0,w,c
  1693  000D06  6E13               	movwf	pad@buf^0,c
  1694  000D08  0E00               	movlw	high _dbuf
  1695  000D0A  203F               	addwfc	(dtoa@i+1)^0,w,c
  1696  000D0C  6E14               	movwf	(pad@buf+1)^0,c
  1697  000D0E  C032  F015         	movff	dtoa@w,pad@p
  1698  000D12  C033  F016         	movff	dtoa@w+1,pad@p+1
  1699  000D16  EC48  F00B         	call	_pad	;wreg free
  1700  000D1A  C011  F01C         	movff	?_pad,?_dtoa
  1701  000D1E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1702  000D22  0012               	return		;funcret
  1703  000D24                     __end_of_dtoa:
  1704                           	callstack 0
  1705                           
  1706 ;; *************** function _pad *****************
  1707 ;; Defined at:
  1708 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1711 ;;		 -> sprintf@f(6), 
  1712 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1713 ;;		 -> dbuf(32), 
  1714 ;;  p               2   20[COMRAM] int 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  w               2   25[COMRAM] int 
  1717 ;;  i               2   23[COMRAM] int 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  2   16[COMRAM] int 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1727 ;;      Params:         6       0       0       0       0       0       0
  1728 ;;      Locals:         4       0       0       0       0       0       0
  1729 ;;      Temps:          1       0       0       0       0       0       0
  1730 ;;      Totals:        11       0       0       0       0       0       0
  1731 ;;Total ram usage:       11 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 3
  1734 ;; This function calls:
  1735 ;;		_fputc
  1736 ;;		_fputs
  1737 ;;		_strlen
  1738 ;; This function is called by:
  1739 ;;		_dtoa
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text7
  1744  001690                     __ptext7:
  1745                           	callstack 0
  1746  001690                     _pad:
  1747                           	callstack 23
  1748  001690                     
  1749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1750  001690  A06D               	btfss	_flags^0,0,c
  1751  001692  EF4D  F00B         	goto	u1061
  1752  001696  EF4F  F00B         	goto	u1060
  1753  00169A                     u1061:
  1754  00169A  EF59  F00B         	goto	l1569
  1755  00169E                     u1060:
  1756  00169E                     
  1757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1758  00169E  C013  F00A         	movff	pad@buf,fputs@s
  1759  0016A2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1760  0016A6  C011  F00C         	movff	pad@fp,fputs@fp
  1761  0016AA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1762  0016AE  EC2E  F00C         	call	_fputs	;wreg free
  1763  0016B2                     l1569:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1766  0016B2  BE16               	btfsc	(pad@p+1)^0,7,c
  1767  0016B4  EF5E  F00B         	goto	u1071
  1768  0016B8  EF60  F00B         	goto	u1070
  1769  0016BC                     u1071:
  1770  0016BC  EF66  F00B         	goto	l1573
  1771  0016C0                     u1070:
  1772  0016C0  C015  F01A         	movff	pad@p,pad@w
  1773  0016C4  C016  F01B         	movff	pad@p+1,pad@w+1
  1774  0016C8  EF6A  F00B         	goto	l773
  1775  0016CC                     l1573:
  1776  0016CC  0E00               	movlw	0
  1777  0016CE  6E1B               	movwf	(pad@w+1)^0,c
  1778  0016D0  0E00               	movlw	0
  1779  0016D2  6E1A               	movwf	pad@w^0,c
  1780  0016D4                     l773:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1783  0016D4  0E00               	movlw	0
  1784  0016D6  6E19               	movwf	(pad@i+1)^0,c
  1785  0016D8  0E00               	movlw	0
  1786  0016DA  6E18               	movwf	pad@i^0,c
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1789  0016DC  EF7C  F00B         	goto	l1579
  1790  0016E0                     l1575:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1793  0016E0  0E00               	movlw	0
  1794  0016E2  6E02               	movwf	(fputc@c+1)^0,c
  1795  0016E4  0E20               	movlw	32
  1796  0016E6  6E01               	movwf	fputc@c^0,c
  1797  0016E8  C011  F003         	movff	pad@fp,fputc@fp
  1798  0016EC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1799  0016F0  ECE3  F00A         	call	_fputc	;wreg free
  1800  0016F4                     
  1801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1802  0016F4  4A18               	infsnz	pad@i^0,f,c
  1803  0016F6  2A19               	incf	(pad@i+1)^0,f,c
  1804  0016F8                     l1579:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1807  0016F8  501A               	movf	pad@w^0,w,c
  1808  0016FA  5C18               	subwf	pad@i^0,w,c
  1809  0016FC  5019               	movf	(pad@i+1)^0,w,c
  1810  0016FE  0A80               	xorlw	128
  1811  001700  6E17               	movwf	??_pad^0,c
  1812  001702  501B               	movf	(pad@w+1)^0,w,c
  1813  001704  0A80               	xorlw	128
  1814  001706  5817               	subwfb	??_pad^0,w,c
  1815  001708  A0D8               	btfss	status,0,c
  1816  00170A  EF89  F00B         	goto	u1081
  1817  00170E  EF8B  F00B         	goto	u1080
  1818  001712                     u1081:
  1819  001712  EF70  F00B         	goto	l1575
  1820  001716                     u1080:
  1821  001716                     
  1822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1823  001716  B06D               	btfsc	_flags^0,0,c
  1824  001718  EF90  F00B         	goto	u1091
  1825  00171C  EF92  F00B         	goto	u1090
  1826  001720                     u1091:
  1827  001720  EF9C  F00B         	goto	l1583
  1828  001724                     u1090:
  1829  001724                     
  1830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1831  001724  C013  F00A         	movff	pad@buf,fputs@s
  1832  001728  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1833  00172C  C011  F00C         	movff	pad@fp,fputs@fp
  1834  001730  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1835  001734  EC2E  F00C         	call	_fputs	;wreg free
  1836  001738                     l1583:
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1839  001738  C013  F001         	movff	pad@buf,strlen@s
  1840  00173C  C014  F002         	movff	pad@buf+1,strlen@s+1
  1841  001740  ECB0  F00C         	call	_strlen	;wreg free
  1842  001744  501A               	movf	pad@w^0,w,c
  1843  001746  2401               	addwf	?_strlen^0,w,c
  1844  001748  6E11               	movwf	?_pad^0,c
  1845  00174A  501B               	movf	(pad@w+1)^0,w,c
  1846  00174C  2002               	addwfc	(?_strlen+1)^0,w,c
  1847  00174E  6E12               	movwf	(?_pad+1)^0,c
  1848  001750  0012               	return		;funcret
  1849  001752                     __end_of_pad:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function _strlen *****************
  1853 ;; Defined at:
  1854 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1857 ;;		 -> dbuf(32), main@data(10), 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1860 ;;		 -> dbuf(32), main@data(10), 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  2    0[COMRAM] unsigned int 
  1863 ;; Registers used:
  1864 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1870 ;;      Params:         2       0       0       0       0       0       0
  1871 ;;      Locals:         2       0       0       0       0       0       0
  1872 ;;      Temps:          0       0       0       0       0       0       0
  1873 ;;      Totals:         4       0       0       0       0       0       0
  1874 ;;Total ram usage:        4 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_pad
  1880 ;;		_strcat
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text8
  1885  001960                     __ptext8:
  1886                           	callstack 0
  1887  001960                     _strlen:
  1888                           	callstack 29
  1889  001960  C001  F003         	movff	strlen@s,strlen@a
  1890  001964  C002  F004         	movff	strlen@s+1,strlen@a+1
  1891  001968  EFB8  F00C         	goto	l1479
  1892  00196C                     l1477:
  1893  00196C  4A01               	infsnz	strlen@s^0,f,c
  1894  00196E  2A02               	incf	(strlen@s+1)^0,f,c
  1895  001970                     l1479:
  1896  001970  C001  FFD9         	movff	strlen@s,fsr2l
  1897  001974  C002  FFDA         	movff	strlen@s+1,fsr2h
  1898  001978  50DF               	movf	indf2,w,c
  1899  00197A  A4D8               	btfss	status,2,c
  1900  00197C  EFC2  F00C         	goto	u921
  1901  001980  EFC4  F00C         	goto	u920
  1902  001984                     u921:
  1903  001984  EFB6  F00C         	goto	l1477
  1904  001988                     u920:
  1905  001988  5003               	movf	strlen@a^0,w,c
  1906  00198A  5C01               	subwf	strlen@s^0,w,c
  1907  00198C  6E01               	movwf	?_strlen^0,c
  1908  00198E  5004               	movf	(strlen@a+1)^0,w,c
  1909  001990  5802               	subwfb	(strlen@s+1)^0,w,c
  1910  001992  6E02               	movwf	(?_strlen+1)^0,c
  1911  001994  0012               	return		;funcret
  1912  001996                     __end_of_strlen:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function _fputs *****************
  1916 ;; Defined at:
  1917 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1920 ;;		 -> dbuf(32), 
  1921 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1922 ;;		 -> sprintf@f(6), 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  i               2   14[COMRAM] int 
  1925 ;;  c               1   13[COMRAM] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  2    9[COMRAM] int 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1935 ;;      Params:         4       0       0       0       0       0       0
  1936 ;;      Locals:         3       0       0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0
  1938 ;;      Totals:         7       0       0       0       0       0       0
  1939 ;;Total ram usage:        7 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; Hardware stack levels required when called: 2
  1942 ;; This function calls:
  1943 ;;		_fputc
  1944 ;; This function is called by:
  1945 ;;		_pad
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text9
  1950  00185C                     __ptext9:
  1951                           	callstack 0
  1952  00185C                     _fputs:
  1953                           	callstack 23
  1954  00185C  0E00               	movlw	0
  1955  00185E  6E10               	movwf	(fputs@i+1)^0,c
  1956  001860  0E00               	movlw	0
  1957  001862  6E0F               	movwf	fputs@i^0,c
  1958  001864  EF3F  F00C         	goto	l1473
  1959  001868                     l1469:
  1960  001868  C00E  F001         	movff	fputs@c,fputc@c
  1961  00186C  6A02               	clrf	(fputc@c+1)^0,c
  1962  00186E  C00C  F003         	movff	fputs@fp,fputc@fp
  1963  001872  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1964  001876  ECE3  F00A         	call	_fputc	;wreg free
  1965  00187A  4A0F               	infsnz	fputs@i^0,f,c
  1966  00187C  2A10               	incf	(fputs@i+1)^0,f,c
  1967  00187E                     l1473:
  1968  00187E  500F               	movf	fputs@i^0,w,c
  1969  001880  240A               	addwf	fputs@s^0,w,c
  1970  001882  6ED9               	movwf	fsr2l,c
  1971  001884  5010               	movf	(fputs@i+1)^0,w,c
  1972  001886  200B               	addwfc	(fputs@s+1)^0,w,c
  1973  001888  6EDA               	movwf	fsr2h,c
  1974  00188A  50DF               	movf	indf2,w,c
  1975  00188C  6E0E               	movwf	fputs@c^0,c
  1976  00188E  500E               	movf	fputs@c^0,w,c
  1977  001890  A4D8               	btfss	status,2,c
  1978  001892  EF4D  F00C         	goto	u911
  1979  001896  EF4F  F00C         	goto	u910
  1980  00189A                     u911:
  1981  00189A  EF34  F00C         	goto	l1469
  1982  00189E                     u910:
  1983  00189E  0012               	return		;funcret
  1984  0018A0                     __end_of_fputs:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _fputc *****************
  1988 ;; Defined at:
  1989 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  c               2    0[COMRAM] int 
  1992 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1993 ;;		 -> sprintf@f(6), 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  2    0[COMRAM] int 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2005 ;;      Params:         4       0       0       0       0       0       0
  2006 ;;      Locals:         0       0       0       0       0       0       0
  2007 ;;      Temps:          5       0       0       0       0       0       0
  2008 ;;      Totals:         9       0       0       0       0       0       0
  2009 ;;Total ram usage:        9 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 1
  2012 ;; This function calls:
  2013 ;;		_putch
  2014 ;; This function is called by:
  2015 ;;		_pad
  2016 ;;		_vfpfcnvrt
  2017 ;;		_fputs
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text10
  2022  0015C6                     __ptext10:
  2023                           	callstack 0
  2024  0015C6                     _fputc:
  2025                           	callstack 26
  2026  0015C6  5003               	movf	fputc@fp^0,w,c
  2027  0015C8  1004               	iorwf	(fputc@fp+1)^0,w,c
  2028  0015CA  B4D8               	btfsc	status,2,c
  2029  0015CC  EFEA  F00A         	goto	u871
  2030  0015D0  EFEC  F00A         	goto	u870
  2031  0015D4                     u871:
  2032  0015D4  EFF5  F00A         	goto	l1457
  2033  0015D8                     u870:
  2034  0015D8  5003               	movf	fputc@fp^0,w,c
  2035  0015DA  1004               	iorwf	(fputc@fp+1)^0,w,c
  2036  0015DC  A4D8               	btfss	status,2,c
  2037  0015DE  EFF3  F00A         	goto	u881
  2038  0015E2  EFF5  F00A         	goto	u880
  2039  0015E6                     u881:
  2040  0015E6  EFFA  F00A         	goto	l1459
  2041  0015EA                     u880:
  2042  0015EA                     l1457:
  2043  0015EA  5001               	movf	fputc@c^0,w,c
  2044  0015EC  EC56  F00D         	call	_putch
  2045  0015F0  EF47  F00B         	goto	l837
  2046  0015F4                     l1459:
  2047  0015F4  EE20 F004          	lfsr	2,4
  2048  0015F8  5003               	movf	fputc@fp^0,w,c
  2049  0015FA  26D9               	addwf	fsr2l,f,c
  2050  0015FC  5004               	movf	(fputc@fp+1)^0,w,c
  2051  0015FE  22DA               	addwfc	fsr2h,f,c
  2052  001600  50DE               	movf	postinc2,w,c
  2053  001602  10DE               	iorwf	postinc2,w,c
  2054  001604  B4D8               	btfsc	status,2,c
  2055  001606  EF07  F00B         	goto	u891
  2056  00160A  EF09  F00B         	goto	u890
  2057  00160E                     u891:
  2058  00160E  EF24  F00B         	goto	l1463
  2059  001612                     u890:
  2060  001612  EE20 F004          	lfsr	2,4
  2061  001616  5003               	movf	fputc@fp^0,w,c
  2062  001618  26D9               	addwf	fsr2l,f,c
  2063  00161A  5004               	movf	(fputc@fp+1)^0,w,c
  2064  00161C  22DA               	addwfc	fsr2h,f,c
  2065  00161E  EE10 F002          	lfsr	1,2
  2066  001622  5003               	movf	fputc@fp^0,w,c
  2067  001624  26E1               	addwf	fsr1l,f,c
  2068  001626  5004               	movf	(fputc@fp+1)^0,w,c
  2069  001628  22E2               	addwfc	fsr1h,f,c
  2070  00162A  50DE               	movf	postinc2,w,c
  2071  00162C  5CE6               	subwf	postinc1,w,c
  2072  00162E  50E6               	movf	postinc1,w,c
  2073  001630  0A80               	xorlw	128
  2074  001632  6E09               	movwf	(??_fputc+4)^0,c
  2075  001634  50DE               	movf	postinc2,w,c
  2076  001636  0A80               	xorlw	128
  2077  001638  5809               	subwfb	(??_fputc+4)^0,w,c
  2078  00163A  B0D8               	btfsc	status,0,c
  2079  00163C  EF22  F00B         	goto	u901
  2080  001640  EF24  F00B         	goto	u900
  2081  001644                     u901:
  2082  001644  EF47  F00B         	goto	l837
  2083  001648                     u900:
  2084  001648                     l1463:
  2085  001648  EE20 F002          	lfsr	2,2
  2086  00164C  5003               	movf	fputc@fp^0,w,c
  2087  00164E  26D9               	addwf	fsr2l,f,c
  2088  001650  5004               	movf	(fputc@fp+1)^0,w,c
  2089  001652  22DA               	addwfc	fsr2h,f,c
  2090  001654  CFDE F005          	movff	postinc2,??_fputc
  2091  001658  CFDD F006          	movff	postdec2,??_fputc+1
  2092  00165C  C003  FFD9         	movff	fputc@fp,fsr2l
  2093  001660  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2094  001664  CFDE F007          	movff	postinc2,??_fputc+2
  2095  001668  CFDD F008          	movff	postdec2,??_fputc+3
  2096  00166C  5005               	movf	??_fputc^0,w,c
  2097  00166E  2407               	addwf	(??_fputc+2)^0,w,c
  2098  001670  6ED9               	movwf	fsr2l,c
  2099  001672  5006               	movf	(??_fputc+1)^0,w,c
  2100  001674  2008               	addwfc	(??_fputc+3)^0,w,c
  2101  001676  6EDA               	movwf	fsr2h,c
  2102  001678  C001  FFDF         	movff	fputc@c,indf2
  2103  00167C  EE20 F002          	lfsr	2,2
  2104  001680  5003               	movf	fputc@fp^0,w,c
  2105  001682  26D9               	addwf	fsr2l,f,c
  2106  001684  5004               	movf	(fputc@fp+1)^0,w,c
  2107  001686  22DA               	addwfc	fsr2h,f,c
  2108  001688  2ADE               	incf	postinc2,f,c
  2109  00168A  0E00               	movlw	0
  2110  00168C  22DD               	addwfc	postdec2,f,c
  2111  00168E                     l837:
  2112  00168E  0012               	return		;funcret
  2113  001690                     __end_of_fputc:
  2114                           	callstack 0
  2115                           
  2116 ;; *************** function _putch *****************
  2117 ;; Defined at:
  2118 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  c               1    wreg     unsigned char 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  c               1    0[COMRAM] unsigned char 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2132 ;;      Params:         0       0       0       0       0       0       0
  2133 ;;      Locals:         0       0       0       0       0       0       0
  2134 ;;      Temps:          0       0       0       0       0       0       0
  2135 ;;      Totals:         0       0       0       0       0       0       0
  2136 ;;Total ram usage:        0 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_fputc
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text11
  2146  001AAC                     __ptext11:
  2147                           	callstack 0
  2148  001AAC                     _putch:
  2149                           	callstack 26
  2150  001AAC  0012               	return		;funcret
  2151  001AAE                     __end_of_putch:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function _abs *****************
  2155 ;; Defined at:
  2156 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  a               2   18[COMRAM] int 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  2   18[COMRAM] int 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2170 ;;      Params:         2       0       0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0       0       0
  2172 ;;      Temps:          2       0       0       0       0       0       0
  2173 ;;      Totals:         4       0       0       0       0       0       0
  2174 ;;Total ram usage:        4 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_dtoa
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text12
  2184  0018E0                     __ptext12:
  2185                           	callstack 0
  2186  0018E0                     _abs:
  2187                           	callstack 26
  2188  0018E0  BE14               	btfsc	(abs@a+1)^0,7,c
  2189  0018E2  EF7D  F00C         	goto	u1100
  2190  0018E6  5014               	movf	(abs@a+1)^0,w,c
  2191  0018E8  E106               	bnz	u1101
  2192  0018EA  0413               	decf	abs@a^0,w,c
  2193  0018EC  B0D8               	btfsc	status,0,c
  2194  0018EE  EF7B  F00C         	goto	u1101
  2195  0018F2  EF7D  F00C         	goto	u1100
  2196  0018F6                     u1101:
  2197  0018F6  EF8B  F00C         	goto	l822
  2198  0018FA                     u1100:
  2199  0018FA  C013  F015         	movff	abs@a,??_abs
  2200  0018FE  C014  F016         	movff	abs@a+1,??_abs+1
  2201  001902  1E15               	comf	??_abs^0,f,c
  2202  001904  1E16               	comf	(??_abs+1)^0,f,c
  2203  001906  4A15               	infsnz	??_abs^0,f,c
  2204  001908  2A16               	incf	(??_abs+1)^0,f,c
  2205  00190A  C015  F013         	movff	??_abs,?_abs
  2206  00190E  C016  F014         	movff	??_abs+1,?_abs+1
  2207  001912  EF8F  F00C         	goto	l825
  2208  001916                     l822:
  2209  001916  C013  F013         	movff	abs@a,?_abs
  2210  00191A  C014  F014         	movff	abs@a+1,?_abs+1
  2211  00191E                     l825:
  2212  00191E  0012               	return		;funcret
  2213  001920                     __end_of_abs:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function ___aomod *****************
  2217 ;; Defined at:
  2218 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  dividend        8    0[COMRAM] long long 
  2221 ;;  divisor         8    8[COMRAM] long long 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  sign            1   17[COMRAM] unsigned char 
  2224 ;;  counter         1   16[COMRAM] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  8    0[COMRAM] long long 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2234 ;;      Params:        16       0       0       0       0       0       0
  2235 ;;      Locals:         2       0       0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0
  2237 ;;      Totals:        18       0       0       0       0       0       0
  2238 ;;Total ram usage:       18 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_dtoa
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text13
  2248  001212                     __ptext13:
  2249                           	callstack 0
  2250  001212                     ___aomod:
  2251                           	callstack 26
  2252  001212  0E00               	movlw	0
  2253  001214  6E12               	movwf	___aomod@sign^0,c
  2254  001216  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2255  001218  EF12  F009         	goto	u1000
  2256  00121C  EF10  F009         	goto	u1001
  2257  001220                     u1001:
  2258  001220  EF24  F009         	goto	l1537
  2259  001224                     u1000:
  2260  001224  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2261  001226  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2262  001228  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2263  00122A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2264  00122C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2265  00122E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2266  001230  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2267  001232  6C01               	negf	___aomod@dividend^0,c
  2268  001234  0E00               	movlw	0
  2269  001236  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2270  001238  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2271  00123A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2272  00123C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2273  00123E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2274  001240  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2275  001242  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2276  001244  0E01               	movlw	1
  2277  001246  6E12               	movwf	___aomod@sign^0,c
  2278  001248                     l1537:
  2279  001248  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2280  00124A  EF2B  F009         	goto	u1010
  2281  00124E  EF29  F009         	goto	u1011
  2282  001252                     u1011:
  2283  001252  EF3B  F009         	goto	l1541
  2284  001256                     u1010:
  2285  001256  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2286  001258  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2287  00125A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2288  00125C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2289  00125E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2290  001260  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2291  001262  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2292  001264  6C09               	negf	___aomod@divisor^0,c
  2293  001266  0E00               	movlw	0
  2294  001268  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2295  00126A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2296  00126C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2297  00126E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2298  001270  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2299  001272  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2300  001274  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2301  001276                     l1541:
  2302  001276  5009               	movf	___aomod@divisor^0,w,c
  2303  001278  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2304  00127A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2305  00127C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2306  00127E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2307  001280  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2308  001282  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2309  001284  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2310  001286  B4D8               	btfsc	status,2,c
  2311  001288  EF48  F009         	goto	u1021
  2312  00128C  EF4A  F009         	goto	u1020
  2313  001290                     u1021:
  2314  001290  EF92  F009         	goto	l1557
  2315  001294                     u1020:
  2316  001294  0E01               	movlw	1
  2317  001296  6E11               	movwf	___aomod@counter^0,c
  2318  001298  EF58  F009         	goto	l1547
  2319  00129C                     l1545:
  2320  00129C  90D8               	bcf	status,0,c
  2321  00129E  3609               	rlcf	___aomod@divisor^0,f,c
  2322  0012A0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2323  0012A2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2324  0012A4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2325  0012A6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2326  0012A8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2327  0012AA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2328  0012AC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2329  0012AE  2A11               	incf	___aomod@counter^0,f,c
  2330  0012B0                     l1547:
  2331  0012B0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2332  0012B2  EF5D  F009         	goto	u1031
  2333  0012B6  EF5F  F009         	goto	u1030
  2334  0012BA                     u1031:
  2335  0012BA  EF4E  F009         	goto	l1545
  2336  0012BE                     u1030:
  2337  0012BE                     l1549:
  2338  0012BE  5009               	movf	___aomod@divisor^0,w,c
  2339  0012C0  5C01               	subwf	___aomod@dividend^0,w,c
  2340  0012C2  500A               	movf	(___aomod@divisor+1)^0,w,c
  2341  0012C4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2342  0012C6  500B               	movf	(___aomod@divisor+2)^0,w,c
  2343  0012C8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2344  0012CA  500C               	movf	(___aomod@divisor+3)^0,w,c
  2345  0012CC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2346  0012CE  500D               	movf	(___aomod@divisor+4)^0,w,c
  2347  0012D0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2348  0012D2  500E               	movf	(___aomod@divisor+5)^0,w,c
  2349  0012D4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2350  0012D6  500F               	movf	(___aomod@divisor+6)^0,w,c
  2351  0012D8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2352  0012DA  5010               	movf	(___aomod@divisor+7)^0,w,c
  2353  0012DC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2354  0012DE  A0D8               	btfss	status,0,c
  2355  0012E0  EF74  F009         	goto	u1041
  2356  0012E4  EF76  F009         	goto	u1040
  2357  0012E8                     u1041:
  2358  0012E8  EF86  F009         	goto	l1553
  2359  0012EC                     u1040:
  2360  0012EC  5009               	movf	___aomod@divisor^0,w,c
  2361  0012EE  5E01               	subwf	___aomod@dividend^0,f,c
  2362  0012F0  500A               	movf	(___aomod@divisor+1)^0,w,c
  2363  0012F2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2364  0012F4  500B               	movf	(___aomod@divisor+2)^0,w,c
  2365  0012F6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2366  0012F8  500C               	movf	(___aomod@divisor+3)^0,w,c
  2367  0012FA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2368  0012FC  500D               	movf	(___aomod@divisor+4)^0,w,c
  2369  0012FE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2370  001300  500E               	movf	(___aomod@divisor+5)^0,w,c
  2371  001302  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2372  001304  500F               	movf	(___aomod@divisor+6)^0,w,c
  2373  001306  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2374  001308  5010               	movf	(___aomod@divisor+7)^0,w,c
  2375  00130A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2376  00130C                     l1553:
  2377  00130C  90D8               	bcf	status,0,c
  2378  00130E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2379  001310  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2380  001312  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2381  001314  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2382  001316  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2383  001318  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2384  00131A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2385  00131C  3209               	rrcf	___aomod@divisor^0,f,c
  2386  00131E  2E11               	decfsz	___aomod@counter^0,f,c
  2387  001320  EF5F  F009         	goto	l1549
  2388  001324                     l1557:
  2389  001324  5012               	movf	___aomod@sign^0,w,c
  2390  001326  B4D8               	btfsc	status,2,c
  2391  001328  EF98  F009         	goto	u1051
  2392  00132C  EF9A  F009         	goto	u1050
  2393  001330                     u1051:
  2394  001330  EFAA  F009         	goto	l1561
  2395  001334                     u1050:
  2396  001334  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2397  001336  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2398  001338  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2399  00133A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2400  00133C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2401  00133E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2402  001340  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2403  001342  6C01               	negf	___aomod@dividend^0,c
  2404  001344  0E00               	movlw	0
  2405  001346  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2406  001348  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2407  00134A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2408  00134C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2409  00134E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2410  001350  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2411  001352  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2412  001354                     l1561:
  2413  001354  C001  F001         	movff	___aomod@dividend,?___aomod
  2414  001358  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2415  00135C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2416  001360  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2417  001364  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2418  001368  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2419  00136C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2420  001370  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2421  001374  0012               	return		;funcret
  2422  001376                     __end_of___aomod:
  2423                           	callstack 0
  2424                           
  2425 ;; *************** function ___aodiv *****************
  2426 ;; Defined at:
  2427 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  dividend        8    0[COMRAM] long long 
  2430 ;;  divisor         8    8[COMRAM] long long 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  quotient        8   18[COMRAM] long long 
  2433 ;;  sign            1   17[COMRAM] unsigned char 
  2434 ;;  counter         1   16[COMRAM] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  8    0[COMRAM] long long 
  2437 ;; Registers used:
  2438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2444 ;;      Params:        16       0       0       0       0       0       0
  2445 ;;      Locals:        10       0       0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0
  2447 ;;      Totals:        26       0       0       0       0       0       0
  2448 ;;Total ram usage:       26 bytes
  2449 ;; Hardware stack levels used: 1
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_dtoa
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text14
  2458  00108A                     __ptext14:
  2459                           	callstack 0
  2460  00108A                     ___aodiv:
  2461                           	callstack 26
  2462  00108A  0E00               	movlw	0
  2463  00108C  6E12               	movwf	___aodiv@sign^0,c
  2464  00108E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2465  001090  EF4E  F008         	goto	u930
  2466  001094  EF4C  F008         	goto	u931
  2467  001098                     u931:
  2468  001098  EF60  F008         	goto	l1493
  2469  00109C                     u930:
  2470  00109C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2471  00109E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2472  0010A0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2473  0010A2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2474  0010A4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2475  0010A6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2476  0010A8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2477  0010AA  6C09               	negf	___aodiv@divisor^0,c
  2478  0010AC  0E00               	movlw	0
  2479  0010AE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2480  0010B0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2481  0010B2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2482  0010B4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2483  0010B6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2484  0010B8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2485  0010BA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2486  0010BC  0E01               	movlw	1
  2487  0010BE  6E12               	movwf	___aodiv@sign^0,c
  2488  0010C0                     l1493:
  2489  0010C0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2490  0010C2  EF67  F008         	goto	u940
  2491  0010C6  EF65  F008         	goto	u941
  2492  0010CA                     u941:
  2493  0010CA  EF79  F008         	goto	l1499
  2494  0010CE                     u940:
  2495  0010CE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2496  0010D0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2497  0010D2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2498  0010D4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2499  0010D6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2500  0010D8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2501  0010DA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2502  0010DC  6C01               	negf	___aodiv@dividend^0,c
  2503  0010DE  0E00               	movlw	0
  2504  0010E0  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2505  0010E2  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2506  0010E4  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2507  0010E6  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2508  0010E8  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2509  0010EA  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2510  0010EC  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2511  0010EE  0E01               	movlw	1
  2512  0010F0  1A12               	xorwf	___aodiv@sign^0,f,c
  2513  0010F2                     l1499:
  2514  0010F2  EE20  F013         	lfsr	2,___aodiv@quotient
  2515  0010F6  0E07               	movlw	7
  2516  0010F8                     u951:
  2517  0010F8  6ADE               	clrf	postinc2,c
  2518  0010FA  06E8               	decf	wreg,f,c
  2519  0010FC  E2FD               	bc	u951
  2520  0010FE  5009               	movf	___aodiv@divisor^0,w,c
  2521  001100  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2522  001102  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2523  001104  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2524  001106  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2525  001108  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2526  00110A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2527  00110C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2528  00110E  B4D8               	btfsc	status,2,c
  2529  001110  EF8C  F008         	goto	u961
  2530  001114  EF8E  F008         	goto	u960
  2531  001118                     u961:
  2532  001118  EFE0  F008         	goto	l1521
  2533  00111C                     u960:
  2534  00111C  0E01               	movlw	1
  2535  00111E  6E11               	movwf	___aodiv@counter^0,c
  2536  001120  EF9C  F008         	goto	l1507
  2537  001124                     l1505:
  2538  001124  90D8               	bcf	status,0,c
  2539  001126  3609               	rlcf	___aodiv@divisor^0,f,c
  2540  001128  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2541  00112A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2542  00112C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2543  00112E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2544  001130  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2545  001132  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2546  001134  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2547  001136  2A11               	incf	___aodiv@counter^0,f,c
  2548  001138                     l1507:
  2549  001138  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2550  00113A  EFA1  F008         	goto	u971
  2551  00113E  EFA3  F008         	goto	u970
  2552  001142                     u971:
  2553  001142  EF92  F008         	goto	l1505
  2554  001146                     u970:
  2555  001146                     l1509:
  2556  001146  90D8               	bcf	status,0,c
  2557  001148  3613               	rlcf	___aodiv@quotient^0,f,c
  2558  00114A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2559  00114C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2560  00114E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2561  001150  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2562  001152  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2563  001154  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2564  001156  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2565  001158  5009               	movf	___aodiv@divisor^0,w,c
  2566  00115A  5C01               	subwf	___aodiv@dividend^0,w,c
  2567  00115C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2568  00115E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2569  001160  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2570  001162  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2571  001164  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2572  001166  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2573  001168  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2574  00116A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2575  00116C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2576  00116E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2577  001170  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2578  001172  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2579  001174  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2580  001176  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2581  001178  A0D8               	btfss	status,0,c
  2582  00117A  EFC1  F008         	goto	u981
  2583  00117E  EFC3  F008         	goto	u980
  2584  001182                     u981:
  2585  001182  EFD4  F008         	goto	l1517
  2586  001186                     u980:
  2587  001186  5009               	movf	___aodiv@divisor^0,w,c
  2588  001188  5E01               	subwf	___aodiv@dividend^0,f,c
  2589  00118A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2590  00118C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2591  00118E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2592  001190  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2593  001192  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2594  001194  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2595  001196  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2596  001198  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2597  00119A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2598  00119C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2599  00119E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2600  0011A0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2601  0011A2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2602  0011A4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2603  0011A6  8013               	bsf	___aodiv@quotient^0,0,c
  2604  0011A8                     l1517:
  2605  0011A8  90D8               	bcf	status,0,c
  2606  0011AA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2607  0011AC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2608  0011AE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2609  0011B0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2610  0011B2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2611  0011B4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2612  0011B6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2613  0011B8  3209               	rrcf	___aodiv@divisor^0,f,c
  2614  0011BA  2E11               	decfsz	___aodiv@counter^0,f,c
  2615  0011BC  EFA3  F008         	goto	l1509
  2616  0011C0                     l1521:
  2617  0011C0  5012               	movf	___aodiv@sign^0,w,c
  2618  0011C2  B4D8               	btfsc	status,2,c
  2619  0011C4  EFE6  F008         	goto	u991
  2620  0011C8  EFE8  F008         	goto	u990
  2621  0011CC                     u991:
  2622  0011CC  EFF8  F008         	goto	l1525
  2623  0011D0                     u990:
  2624  0011D0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2625  0011D2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2626  0011D4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2627  0011D6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2628  0011D8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2629  0011DA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2630  0011DC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2631  0011DE  6C13               	negf	___aodiv@quotient^0,c
  2632  0011E0  0E00               	movlw	0
  2633  0011E2  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2634  0011E4  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2635  0011E6  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2636  0011E8  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2637  0011EA  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2638  0011EC  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2639  0011EE  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2640  0011F0                     l1525:
  2641  0011F0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2642  0011F4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2643  0011F8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2644  0011FC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2645  001200  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2646  001204  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2647  001208  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2648  00120C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2649  001210  0012               	return		;funcret
  2650  001212                     __end_of___aodiv:
  2651                           	callstack 0
  2652                           
  2653 ;; *************** function ___xxtofl *****************
  2654 ;; Defined at:
  2655 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  sign            1    wreg     unsigned char 
  2658 ;;  val             4    0[COMRAM] long 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  sign            1    8[COMRAM] unsigned char 
  2661 ;;  arg             4   10[COMRAM] unsigned long 
  2662 ;;  exp             1    9[COMRAM] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  4    0[COMRAM] unsigned char 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2, status,0
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2672 ;;      Params:         4       0       0       0       0       0       0
  2673 ;;      Locals:         6       0       0       0       0       0       0
  2674 ;;      Temps:          4       0       0       0       0       0       0
  2675 ;;      Totals:        14       0       0       0       0       0       0
  2676 ;;Total ram usage:       14 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_main
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text15
  2686  000D24                     __ptext15:
  2687                           	callstack 0
  2688  000D24                     ___xxtofl:
  2689                           	callstack 30
  2690                           
  2691                           ;incstack = 0
  2692                           ;___xxtofl@sign stored from wreg
  2693  000D24  6E09               	movwf	___xxtofl@sign^0,c
  2694  000D26  5009               	movf	___xxtofl@sign^0,w,c
  2695  000D28  B4D8               	btfsc	status,2,c
  2696  000D2A  EF99  F006         	goto	u1631
  2697  000D2E  EF9B  F006         	goto	u1630
  2698  000D32                     u1631:
  2699  000D32  EFBD  F006         	goto	l723
  2700  000D36                     u1630:
  2701  000D36  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2702  000D38  EFA2  F006         	goto	u1640
  2703  000D3C  EFA0  F006         	goto	u1641
  2704  000D40                     u1641:
  2705  000D40  EFBD  F006         	goto	l723
  2706  000D44                     u1640:
  2707  000D44  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2708  000D48  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2709  000D4C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2710  000D50  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2711  000D54  1E05               	comf	??___xxtofl^0,f,c
  2712  000D56  1E06               	comf	(??___xxtofl+1)^0,f,c
  2713  000D58  1E07               	comf	(??___xxtofl+2)^0,f,c
  2714  000D5A  1E08               	comf	(??___xxtofl+3)^0,f,c
  2715  000D5C  2A05               	incf	??___xxtofl^0,f,c
  2716  000D5E  0E00               	movlw	0
  2717  000D60  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2718  000D62  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2719  000D64  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2720  000D66  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2721  000D6A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2722  000D6E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2723  000D72  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2724  000D76  EFC5  F006         	goto	l1973
  2725  000D7A                     l723:
  2726  000D7A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2727  000D7E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2728  000D82  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2729  000D86  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2730  000D8A                     l1973:
  2731  000D8A  5001               	movf	___xxtofl@val^0,w,c
  2732  000D8C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2733  000D8E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2734  000D90  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2735  000D92  A4D8               	btfss	status,2,c
  2736  000D94  EFCE  F006         	goto	u1651
  2737  000D98  EFD0  F006         	goto	u1650
  2738  000D9C                     u1651:
  2739  000D9C  EFDA  F006         	goto	l1979
  2740  000DA0                     u1650:
  2741  000DA0  0E00               	movlw	0
  2742  000DA2  6E01               	movwf	?___xxtofl^0,c
  2743  000DA4  0E00               	movlw	0
  2744  000DA6  6E02               	movwf	(?___xxtofl+1)^0,c
  2745  000DA8  0E00               	movlw	0
  2746  000DAA  6E03               	movwf	(?___xxtofl+2)^0,c
  2747  000DAC  0E00               	movlw	0
  2748  000DAE  6E04               	movwf	(?___xxtofl+3)^0,c
  2749  000DB0  EF6B  F007         	goto	l726
  2750  000DB4                     l1979:
  2751  000DB4  0E96               	movlw	150
  2752  000DB6  6E0A               	movwf	___xxtofl@exp^0,c
  2753  000DB8  EFE4  F006         	goto	l1983
  2754  000DBC                     l1981:
  2755  000DBC  2A0A               	incf	___xxtofl@exp^0,f,c
  2756  000DBE  90D8               	bcf	status,0,c
  2757  000DC0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2758  000DC2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2759  000DC4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2760  000DC6  320B               	rrcf	___xxtofl@arg^0,f,c
  2761  000DC8                     l1983:
  2762  000DC8  0E00               	movlw	0
  2763  000DCA  140B               	andwf	___xxtofl@arg^0,w,c
  2764  000DCC  6E05               	movwf	??___xxtofl^0,c
  2765  000DCE  0E00               	movlw	0
  2766  000DD0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2767  000DD2  6E06               	movwf	(??___xxtofl+1)^0,c
  2768  000DD4  0E00               	movlw	0
  2769  000DD6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2770  000DD8  6E07               	movwf	(??___xxtofl+2)^0,c
  2771  000DDA  0EFE               	movlw	254
  2772  000DDC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2773  000DDE  6E08               	movwf	(??___xxtofl+3)^0,c
  2774  000DE0  5005               	movf	??___xxtofl^0,w,c
  2775  000DE2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2776  000DE4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2777  000DE6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2778  000DE8  A4D8               	btfss	status,2,c
  2779  000DEA  EFF9  F006         	goto	u1661
  2780  000DEE  EFFB  F006         	goto	u1660
  2781  000DF2                     u1661:
  2782  000DF2  EFDE  F006         	goto	l1981
  2783  000DF6                     u1660:
  2784  000DF6  EF09  F007         	goto	l730
  2785  000DFA                     l1985:
  2786  000DFA  2A0A               	incf	___xxtofl@exp^0,f,c
  2787  000DFC  0E01               	movlw	1
  2788  000DFE  260B               	addwf	___xxtofl@arg^0,f,c
  2789  000E00  0E00               	movlw	0
  2790  000E02  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2791  000E04  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2792  000E06  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2793  000E08  90D8               	bcf	status,0,c
  2794  000E0A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2795  000E0C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2796  000E0E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2797  000E10  320B               	rrcf	___xxtofl@arg^0,f,c
  2798  000E12                     l730:
  2799  000E12  0E00               	movlw	0
  2800  000E14  140B               	andwf	___xxtofl@arg^0,w,c
  2801  000E16  6E05               	movwf	??___xxtofl^0,c
  2802  000E18  0E00               	movlw	0
  2803  000E1A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2804  000E1C  6E06               	movwf	(??___xxtofl+1)^0,c
  2805  000E1E  0E00               	movlw	0
  2806  000E20  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2807  000E22  6E07               	movwf	(??___xxtofl+2)^0,c
  2808  000E24  0EFF               	movlw	255
  2809  000E26  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2810  000E28  6E08               	movwf	(??___xxtofl+3)^0,c
  2811  000E2A  5005               	movf	??___xxtofl^0,w,c
  2812  000E2C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2813  000E2E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2814  000E30  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2815  000E32  A4D8               	btfss	status,2,c
  2816  000E34  EF1E  F007         	goto	u1671
  2817  000E38  EF20  F007         	goto	u1670
  2818  000E3C                     u1671:
  2819  000E3C  EFFD  F006         	goto	l1985
  2820  000E40                     u1670:
  2821  000E40  EF28  F007         	goto	l1993
  2822  000E44                     l1991:
  2823  000E44  060A               	decf	___xxtofl@exp^0,f,c
  2824  000E46  90D8               	bcf	status,0,c
  2825  000E48  360B               	rlcf	___xxtofl@arg^0,f,c
  2826  000E4A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2827  000E4C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2828  000E4E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2829  000E50                     l1993:
  2830  000E50  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2831  000E52  EF2D  F007         	goto	u1681
  2832  000E56  EF2F  F007         	goto	u1680
  2833  000E5A                     u1681:
  2834  000E5A  EF37  F007         	goto	l737
  2835  000E5E                     u1680:
  2836  000E5E  0E02               	movlw	2
  2837  000E60  600A               	cpfslt	___xxtofl@exp^0,c
  2838  000E62  EF35  F007         	goto	u1691
  2839  000E66  EF37  F007         	goto	u1690
  2840  000E6A                     u1691:
  2841  000E6A  EF22  F007         	goto	l1991
  2842  000E6E                     u1690:
  2843  000E6E                     l737:
  2844  000E6E  B00A               	btfsc	___xxtofl@exp^0,0,c
  2845  000E70  EF3C  F007         	goto	u1701
  2846  000E74  EF3E  F007         	goto	u1700
  2847  000E78                     u1701:
  2848  000E78  EF3F  F007         	goto	l1999
  2849  000E7C                     u1700:
  2850  000E7C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2851  000E7E                     l1999:
  2852  000E7E  90D8               	bcf	status,0,c
  2853  000E80  320A               	rrcf	___xxtofl@exp^0,f,c
  2854  000E82  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2855  000E86  6A06               	clrf	(??___xxtofl+1)^0,c
  2856  000E88  6A07               	clrf	(??___xxtofl+2)^0,c
  2857  000E8A  6A08               	clrf	(??___xxtofl+3)^0,c
  2858  000E8C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2859  000E90  6A07               	clrf	(??___xxtofl+2)^0,c
  2860  000E92  6A06               	clrf	(??___xxtofl+1)^0,c
  2861  000E94  6A05               	clrf	??___xxtofl^0,c
  2862  000E96  5005               	movf	??___xxtofl^0,w,c
  2863  000E98  120B               	iorwf	___xxtofl@arg^0,f,c
  2864  000E9A  5006               	movf	(??___xxtofl+1)^0,w,c
  2865  000E9C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2866  000E9E  5007               	movf	(??___xxtofl+2)^0,w,c
  2867  000EA0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2868  000EA2  5008               	movf	(??___xxtofl+3)^0,w,c
  2869  000EA4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2870  000EA6  5009               	movf	___xxtofl@sign^0,w,c
  2871  000EA8  B4D8               	btfsc	status,2,c
  2872  000EAA  EF59  F007         	goto	u1711
  2873  000EAE  EF5B  F007         	goto	u1710
  2874  000EB2                     u1711:
  2875  000EB2  EF63  F007         	goto	l2009
  2876  000EB6                     u1710:
  2877  000EB6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2878  000EB8  EF62  F007         	goto	u1720
  2879  000EBC  EF60  F007         	goto	u1721
  2880  000EC0                     u1721:
  2881  000EC0  EF63  F007         	goto	l2009
  2882  000EC4                     u1720:
  2883  000EC4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2884  000EC6                     l2009:
  2885  000EC6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2886  000ECA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2887  000ECE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2888  000ED2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2889  000ED6                     l726:
  2890  000ED6  0012               	return		;funcret
  2891  000ED8                     __end_of___xxtofl:
  2892                           	callstack 0
  2893                           
  2894 ;; *************** function ___fltol *****************
  2895 ;; Defined at:
  2896 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  f1              4   39[COMRAM] unsigned char 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  exp1            1   48[COMRAM] unsigned char 
  2901 ;;  sign1           1   47[COMRAM] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  4   39[COMRAM] long 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2911 ;;      Params:         4       0       0       0       0       0       0
  2912 ;;      Locals:         2       0       0       0       0       0       0
  2913 ;;      Temps:          4       0       0       0       0       0       0
  2914 ;;      Totals:        10       0       0       0       0       0       0
  2915 ;;Total ram usage:       10 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_main
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text16
  2925  0014C0                     __ptext16:
  2926                           	callstack 0
  2927  0014C0                     ___fltol:
  2928                           	callstack 30
  2929  0014C0  342A               	rlcf	(___fltol@f1+2)^0,w,c
  2930  0014C2  342B               	rlcf	(___fltol@f1+3)^0,w,c
  2931  0014C4  6E31               	movwf	___fltol@exp1^0,c
  2932  0014C6  5031               	movf	___fltol@exp1^0,w,c
  2933  0014C8  A4D8               	btfss	status,2,c
  2934  0014CA  EF69  F00A         	goto	u1561
  2935  0014CE  EF6B  F00A         	goto	u1560
  2936  0014D2                     u1561:
  2937  0014D2  EF75  F00A         	goto	l1929
  2938  0014D6                     u1560:
  2939  0014D6                     l1925:
  2940  0014D6  0E00               	movlw	0
  2941  0014D8  6E28               	movwf	?___fltol^0,c
  2942  0014DA  0E00               	movlw	0
  2943  0014DC  6E29               	movwf	(?___fltol+1)^0,c
  2944  0014DE  0E00               	movlw	0
  2945  0014E0  6E2A               	movwf	(?___fltol+2)^0,c
  2946  0014E2  0E00               	movlw	0
  2947  0014E4  6E2B               	movwf	(?___fltol+3)^0,c
  2948  0014E6  EFE2  F00A         	goto	l365
  2949  0014EA                     l1929:
  2950  0014EA  C028  F02C         	movff	___fltol@f1,??___fltol
  2951  0014EE  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  2952  0014F2  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  2953  0014F6  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  2954  0014FA  0E20               	movlw	32
  2955  0014FC  EF85  F00A         	goto	u1570
  2956  001500                     u1575:
  2957  001500  90D8               	bcf	status,0,c
  2958  001502  322F               	rrcf	(??___fltol+3)^0,f,c
  2959  001504  322E               	rrcf	(??___fltol+2)^0,f,c
  2960  001506  322D               	rrcf	(??___fltol+1)^0,f,c
  2961  001508  322C               	rrcf	??___fltol^0,f,c
  2962  00150A                     u1570:
  2963  00150A  2EE8               	decfsz	wreg,f,c
  2964  00150C  EF80  F00A         	goto	u1575
  2965  001510  502C               	movf	??___fltol^0,w,c
  2966  001512  6E30               	movwf	___fltol@sign1^0,c
  2967  001514  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  2968  001516  0EFF               	movlw	255
  2969  001518  1628               	andwf	___fltol@f1^0,f,c
  2970  00151A  0EFF               	movlw	255
  2971  00151C  1629               	andwf	(___fltol@f1+1)^0,f,c
  2972  00151E  0EFF               	movlw	255
  2973  001520  162A               	andwf	(___fltol@f1+2)^0,f,c
  2974  001522  0E00               	movlw	0
  2975  001524  162B               	andwf	(___fltol@f1+3)^0,f,c
  2976  001526  0E96               	movlw	150
  2977  001528  5E31               	subwf	___fltol@exp1^0,f,c
  2978  00152A  BE31               	btfsc	___fltol@exp1^0,7,c
  2979  00152C  EF9C  F00A         	goto	u1580
  2980  001530  EF9A  F00A         	goto	u1581
  2981  001534                     u1581:
  2982  001534  EFB2  F00A         	goto	l1949
  2983  001538                     u1580:
  2984  001538  5031               	movf	___fltol@exp1^0,w,c
  2985  00153A  0A80               	xorlw	128
  2986  00153C  0F97               	addlw	151
  2987  00153E  B0D8               	btfsc	status,0,c
  2988  001540  EFA4  F00A         	goto	u1591
  2989  001544  EFA6  F00A         	goto	u1590
  2990  001548                     u1591:
  2991  001548  EFA8  F00A         	goto	l1945
  2992  00154C                     u1590:
  2993  00154C  EF6B  F00A         	goto	l1925
  2994  001550                     l1945:
  2995  001550  90D8               	bcf	status,0,c
  2996  001552  322B               	rrcf	(___fltol@f1+3)^0,f,c
  2997  001554  322A               	rrcf	(___fltol@f1+2)^0,f,c
  2998  001556  3229               	rrcf	(___fltol@f1+1)^0,f,c
  2999  001558  3228               	rrcf	___fltol@f1^0,f,c
  3000  00155A  3E31               	incfsz	___fltol@exp1^0,f,c
  3001  00155C  EFA8  F00A         	goto	l1945
  3002  001560  EFCA  F00A         	goto	l1959
  3003  001564                     l1949:
  3004  001564  0E1F               	movlw	31
  3005  001566  6431               	cpfsgt	___fltol@exp1^0,c
  3006  001568  EFB8  F00A         	goto	u1601
  3007  00156C  EFBA  F00A         	goto	u1600
  3008  001570                     u1601:
  3009  001570  EFC2  F00A         	goto	l1957
  3010  001574                     u1600:
  3011  001574  EF6B  F00A         	goto	l1925
  3012  001578                     l1955:
  3013  001578  90D8               	bcf	status,0,c
  3014  00157A  3628               	rlcf	___fltol@f1^0,f,c
  3015  00157C  3629               	rlcf	(___fltol@f1+1)^0,f,c
  3016  00157E  362A               	rlcf	(___fltol@f1+2)^0,f,c
  3017  001580  362B               	rlcf	(___fltol@f1+3)^0,f,c
  3018  001582  0631               	decf	___fltol@exp1^0,f,c
  3019  001584                     l1957:
  3020  001584  5031               	movf	___fltol@exp1^0,w,c
  3021  001586  A4D8               	btfss	status,2,c
  3022  001588  EFC8  F00A         	goto	u1611
  3023  00158C  EFCA  F00A         	goto	u1610
  3024  001590                     u1611:
  3025  001590  EFBC  F00A         	goto	l1955
  3026  001594                     u1610:
  3027  001594                     l1959:
  3028  001594  5030               	movf	___fltol@sign1^0,w,c
  3029  001596  B4D8               	btfsc	status,2,c
  3030  001598  EFD0  F00A         	goto	u1621
  3031  00159C  EFD2  F00A         	goto	u1620
  3032  0015A0                     u1621:
  3033  0015A0  EFDA  F00A         	goto	l1963
  3034  0015A4                     u1620:
  3035  0015A4  1E2B               	comf	(___fltol@f1+3)^0,f,c
  3036  0015A6  1E2A               	comf	(___fltol@f1+2)^0,f,c
  3037  0015A8  1E29               	comf	(___fltol@f1+1)^0,f,c
  3038  0015AA  6C28               	negf	___fltol@f1^0,c
  3039  0015AC  0E00               	movlw	0
  3040  0015AE  2229               	addwfc	(___fltol@f1+1)^0,f,c
  3041  0015B0  222A               	addwfc	(___fltol@f1+2)^0,f,c
  3042  0015B2  222B               	addwfc	(___fltol@f1+3)^0,f,c
  3043  0015B4                     l1963:
  3044  0015B4  C028  F028         	movff	___fltol@f1,?___fltol
  3045  0015B8  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3046  0015BC  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3047  0015C0  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3048  0015C4                     l365:
  3049  0015C4  0012               	return		;funcret
  3050  0015C6                     __end_of___fltol:
  3051                           	callstack 0
  3052                           
  3053 ;; *************** function ___flmul *****************
  3054 ;; Defined at:
  3055 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  b               4   14[COMRAM] long 
  3058 ;;  a               4   18[COMRAM] long 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  prod            4   33[COMRAM] struct .
  3061 ;;  grs             4   27[COMRAM] unsigned long 
  3062 ;;  temp            2   37[COMRAM] struct .
  3063 ;;  bexp            1   32[COMRAM] unsigned char 
  3064 ;;  aexp            1   31[COMRAM] unsigned char 
  3065 ;;  sign            1   26[COMRAM] unsigned char 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  4   14[COMRAM] unsigned char 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0, prodl, prodh
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3075 ;;      Params:         8       0       0       0       0       0       0
  3076 ;;      Locals:        13       0       0       0       0       0       0
  3077 ;;      Temps:          4       0       0       0       0       0       0
  3078 ;;      Totals:        25       0       0       0       0       0       0
  3079 ;;Total ram usage:       25 bytes
  3080 ;; Hardware stack levels used: 1
  3081 ;; This function calls:
  3082 ;;		Nothing
  3083 ;; This function is called by:
  3084 ;;		_main
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text17
  3089  00061C                     __ptext17:
  3090                           	callstack 0
  3091  00061C                     ___flmul:
  3092                           	callstack 30
  3093  00061C  5012               	movf	(___flmul@b+3)^0,w,c
  3094  00061E  0B80               	andlw	128
  3095  000620  6E1B               	movwf	___flmul@sign^0,c
  3096  000622  5012               	movf	(___flmul@b+3)^0,w,c
  3097  000624  2412               	addwf	(___flmul@b+3)^0,w,c
  3098  000626  6E21               	movwf	___flmul@bexp^0,c
  3099  000628  AE11               	btfss	(___flmul@b+2)^0,7,c
  3100  00062A  EF19  F003         	goto	u1371
  3101  00062E  EF1B  F003         	goto	u1370
  3102  000632                     u1371:
  3103  000632  EF1C  F003         	goto	l1799
  3104  000636                     u1370:
  3105  000636  8021               	bsf	___flmul@bexp^0,0,c
  3106  000638                     l1799:
  3107  000638  5021               	movf	___flmul@bexp^0,w,c
  3108  00063A  B4D8               	btfsc	status,2,c
  3109  00063C  EF22  F003         	goto	u1381
  3110  000640  EF24  F003         	goto	u1380
  3111  000644                     u1381:
  3112  000644  EF37  F003         	goto	l1807
  3113  000648                     u1380:
  3114  000648  2821               	incf	___flmul@bexp^0,w,c
  3115  00064A  A4D8               	btfss	status,2,c
  3116  00064C  EF2A  F003         	goto	u1391
  3117  000650  EF2C  F003         	goto	u1390
  3118  000654                     u1391:
  3119  000654  EF34  F003         	goto	l1805
  3120  000658                     u1390:
  3121  000658  0E00               	movlw	0
  3122  00065A  6E0F               	movwf	___flmul@b^0,c
  3123  00065C  0E00               	movlw	0
  3124  00065E  6E10               	movwf	(___flmul@b+1)^0,c
  3125  000660  0E00               	movlw	0
  3126  000662  6E11               	movwf	(___flmul@b+2)^0,c
  3127  000664  0E00               	movlw	0
  3128  000666  6E12               	movwf	(___flmul@b+3)^0,c
  3129  000668                     l1805:
  3130  000668  8E11               	bsf	(___flmul@b+2)^0,7,c
  3131  00066A  EF3F  F003         	goto	l1809
  3132  00066E                     l1807:
  3133  00066E  0E00               	movlw	0
  3134  000670  6E0F               	movwf	___flmul@b^0,c
  3135  000672  0E00               	movlw	0
  3136  000674  6E10               	movwf	(___flmul@b+1)^0,c
  3137  000676  0E00               	movlw	0
  3138  000678  6E11               	movwf	(___flmul@b+2)^0,c
  3139  00067A  0E00               	movlw	0
  3140  00067C  6E12               	movwf	(___flmul@b+3)^0,c
  3141  00067E                     l1809:
  3142  00067E  5016               	movf	(___flmul@a+3)^0,w,c
  3143  000680  0B80               	andlw	128
  3144  000682  1A1B               	xorwf	___flmul@sign^0,f,c
  3145  000684  5016               	movf	(___flmul@a+3)^0,w,c
  3146  000686  2416               	addwf	(___flmul@a+3)^0,w,c
  3147  000688  6E20               	movwf	___flmul@aexp^0,c
  3148  00068A  AE15               	btfss	(___flmul@a+2)^0,7,c
  3149  00068C  EF4A  F003         	goto	u1401
  3150  000690  EF4C  F003         	goto	u1400
  3151  000694                     u1401:
  3152  000694  EF4D  F003         	goto	l1817
  3153  000698                     u1400:
  3154  000698  8020               	bsf	___flmul@aexp^0,0,c
  3155  00069A                     l1817:
  3156  00069A  5020               	movf	___flmul@aexp^0,w,c
  3157  00069C  B4D8               	btfsc	status,2,c
  3158  00069E  EF53  F003         	goto	u1411
  3159  0006A2  EF55  F003         	goto	u1410
  3160  0006A6                     u1411:
  3161  0006A6  EF68  F003         	goto	l1825
  3162  0006AA                     u1410:
  3163  0006AA  2820               	incf	___flmul@aexp^0,w,c
  3164  0006AC  A4D8               	btfss	status,2,c
  3165  0006AE  EF5B  F003         	goto	u1421
  3166  0006B2  EF5D  F003         	goto	u1420
  3167  0006B6                     u1421:
  3168  0006B6  EF65  F003         	goto	l1823
  3169  0006BA                     u1420:
  3170  0006BA  0E00               	movlw	0
  3171  0006BC  6E13               	movwf	___flmul@a^0,c
  3172  0006BE  0E00               	movlw	0
  3173  0006C0  6E14               	movwf	(___flmul@a+1)^0,c
  3174  0006C2  0E00               	movlw	0
  3175  0006C4  6E15               	movwf	(___flmul@a+2)^0,c
  3176  0006C6  0E00               	movlw	0
  3177  0006C8  6E16               	movwf	(___flmul@a+3)^0,c
  3178  0006CA                     l1823:
  3179  0006CA  8E15               	bsf	(___flmul@a+2)^0,7,c
  3180  0006CC  EF70  F003         	goto	l682
  3181  0006D0                     l1825:
  3182  0006D0  0E00               	movlw	0
  3183  0006D2  6E13               	movwf	___flmul@a^0,c
  3184  0006D4  0E00               	movlw	0
  3185  0006D6  6E14               	movwf	(___flmul@a+1)^0,c
  3186  0006D8  0E00               	movlw	0
  3187  0006DA  6E15               	movwf	(___flmul@a+2)^0,c
  3188  0006DC  0E00               	movlw	0
  3189  0006DE  6E16               	movwf	(___flmul@a+3)^0,c
  3190  0006E0                     l682:
  3191  0006E0  5020               	movf	___flmul@aexp^0,w,c
  3192  0006E2  B4D8               	btfsc	status,2,c
  3193  0006E4  EF76  F003         	goto	u1431
  3194  0006E8  EF78  F003         	goto	u1430
  3195  0006EC                     u1431:
  3196  0006EC  EF80  F003         	goto	l1829
  3197  0006F0                     u1430:
  3198  0006F0  5021               	movf	___flmul@bexp^0,w,c
  3199  0006F2  A4D8               	btfss	status,2,c
  3200  0006F4  EF7E  F003         	goto	u1441
  3201  0006F8  EF80  F003         	goto	u1440
  3202  0006FC                     u1441:
  3203  0006FC  EF8A  F003         	goto	l1833
  3204  000700                     u1440:
  3205  000700                     l1829:
  3206  000700  0E00               	movlw	0
  3207  000702  6E0F               	movwf	?___flmul^0,c
  3208  000704  0E00               	movlw	0
  3209  000706  6E10               	movwf	(?___flmul+1)^0,c
  3210  000708  0E00               	movlw	0
  3211  00070A  6E11               	movwf	(?___flmul+2)^0,c
  3212  00070C  0E00               	movlw	0
  3213  00070E  6E12               	movwf	(?___flmul+3)^0,c
  3214  000710  EF22  F005         	goto	l686
  3215  000714                     l1833:
  3216  000714  5015               	movf	(___flmul@a+2)^0,w,c
  3217  000716  020F               	mulwf	___flmul@b^0,c
  3218  000718  CFF3 F026          	movff	prodl,___flmul@temp
  3219  00071C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3220  000720  5026               	movf	___flmul@temp^0,w,c
  3221  000722  6E1C               	movwf	___flmul@grs^0,c
  3222  000724  6A1D               	clrf	(___flmul@grs+1)^0,c
  3223  000726  6A1E               	clrf	(___flmul@grs+2)^0,c
  3224  000728  6A1F               	clrf	(___flmul@grs+3)^0,c
  3225  00072A  5027               	movf	(___flmul@temp+1)^0,w,c
  3226  00072C  6E22               	movwf	___flmul@prod^0,c
  3227  00072E  6A23               	clrf	(___flmul@prod+1)^0,c
  3228  000730  6A24               	clrf	(___flmul@prod+2)^0,c
  3229  000732  6A25               	clrf	(___flmul@prod+3)^0,c
  3230  000734  5014               	movf	(___flmul@a+1)^0,w,c
  3231  000736  0210               	mulwf	(___flmul@b+1)^0,c
  3232  000738  CFF3 F026          	movff	prodl,___flmul@temp
  3233  00073C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3234  000740  5026               	movf	___flmul@temp^0,w,c
  3235  000742  261C               	addwf	___flmul@grs^0,f,c
  3236  000744  0E00               	movlw	0
  3237  000746  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3238  000748  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3239  00074A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3240  00074C  5027               	movf	(___flmul@temp+1)^0,w,c
  3241  00074E  2622               	addwf	___flmul@prod^0,f,c
  3242  000750  0E00               	movlw	0
  3243  000752  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3244  000754  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3245  000756  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3246  000758  5013               	movf	___flmul@a^0,w,c
  3247  00075A  0211               	mulwf	(___flmul@b+2)^0,c
  3248  00075C  CFF3 F026          	movff	prodl,___flmul@temp
  3249  000760  CFF4 F027          	movff	prodh,___flmul@temp+1
  3250  000764  5026               	movf	___flmul@temp^0,w,c
  3251  000766  261C               	addwf	___flmul@grs^0,f,c
  3252  000768  0E00               	movlw	0
  3253  00076A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3254  00076C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3255  00076E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3256  000770  5027               	movf	(___flmul@temp+1)^0,w,c
  3257  000772  2622               	addwf	___flmul@prod^0,f,c
  3258  000774  0E00               	movlw	0
  3259  000776  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3260  000778  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3261  00077A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3262  00077C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3263  000780  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3264  000784  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3265  000788  6A1C               	clrf	___flmul@grs^0,c
  3266  00078A  5013               	movf	___flmul@a^0,w,c
  3267  00078C  0210               	mulwf	(___flmul@b+1)^0,c
  3268  00078E  CFF3 F026          	movff	prodl,___flmul@temp
  3269  000792  CFF4 F027          	movff	prodh,___flmul@temp+1
  3270  000796  5026               	movf	___flmul@temp^0,w,c
  3271  000798  261C               	addwf	___flmul@grs^0,f,c
  3272  00079A  5027               	movf	(___flmul@temp+1)^0,w,c
  3273  00079C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3274  00079E  0E00               	movlw	0
  3275  0007A0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3276  0007A2  0E00               	movlw	0
  3277  0007A4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3278  0007A6  5014               	movf	(___flmul@a+1)^0,w,c
  3279  0007A8  020F               	mulwf	___flmul@b^0,c
  3280  0007AA  CFF3 F026          	movff	prodl,___flmul@temp
  3281  0007AE  CFF4 F027          	movff	prodh,___flmul@temp+1
  3282  0007B2  5026               	movf	___flmul@temp^0,w,c
  3283  0007B4  261C               	addwf	___flmul@grs^0,f,c
  3284  0007B6  5027               	movf	(___flmul@temp+1)^0,w,c
  3285  0007B8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3286  0007BA  0E00               	movlw	0
  3287  0007BC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3288  0007BE  0E00               	movlw	0
  3289  0007C0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3290  0007C2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3291  0007C6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3292  0007CA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3293  0007CE  6A1C               	clrf	___flmul@grs^0,c
  3294  0007D0  5013               	movf	___flmul@a^0,w,c
  3295  0007D2  020F               	mulwf	___flmul@b^0,c
  3296  0007D4  CFF3 F026          	movff	prodl,___flmul@temp
  3297  0007D8  CFF4 F027          	movff	prodh,___flmul@temp+1
  3298  0007DC  5026               	movf	___flmul@temp^0,w,c
  3299  0007DE  261C               	addwf	___flmul@grs^0,f,c
  3300  0007E0  5027               	movf	(___flmul@temp+1)^0,w,c
  3301  0007E2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3302  0007E4  0E00               	movlw	0
  3303  0007E6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3304  0007E8  0E00               	movlw	0
  3305  0007EA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3306  0007EC  5015               	movf	(___flmul@a+2)^0,w,c
  3307  0007EE  0210               	mulwf	(___flmul@b+1)^0,c
  3308  0007F0  CFF3 F026          	movff	prodl,___flmul@temp
  3309  0007F4  CFF4 F027          	movff	prodh,___flmul@temp+1
  3310  0007F8  5026               	movf	___flmul@temp^0,w,c
  3311  0007FA  2622               	addwf	___flmul@prod^0,f,c
  3312  0007FC  5027               	movf	(___flmul@temp+1)^0,w,c
  3313  0007FE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3314  000800  0E00               	movlw	0
  3315  000802  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3316  000804  0E00               	movlw	0
  3317  000806  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3318  000808  5014               	movf	(___flmul@a+1)^0,w,c
  3319  00080A  0211               	mulwf	(___flmul@b+2)^0,c
  3320  00080C  CFF3 F026          	movff	prodl,___flmul@temp
  3321  000810  CFF4 F027          	movff	prodh,___flmul@temp+1
  3322  000814  5026               	movf	___flmul@temp^0,w,c
  3323  000816  2622               	addwf	___flmul@prod^0,f,c
  3324  000818  5027               	movf	(___flmul@temp+1)^0,w,c
  3325  00081A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3326  00081C  0E00               	movlw	0
  3327  00081E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3328  000820  0E00               	movlw	0
  3329  000822  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3330  000824  5015               	movf	(___flmul@a+2)^0,w,c
  3331  000826  0211               	mulwf	(___flmul@b+2)^0,c
  3332  000828  CFF3 F026          	movff	prodl,___flmul@temp
  3333  00082C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3334  000830  5026               	movf	___flmul@temp^0,w,c
  3335  000832  6E17               	movwf	??___flmul^0,c
  3336  000834  5027               	movf	(___flmul@temp+1)^0,w,c
  3337  000836  6E18               	movwf	(??___flmul+1)^0,c
  3338  000838  6A19               	clrf	(??___flmul+2)^0,c
  3339  00083A  6A1A               	clrf	(??___flmul+3)^0,c
  3340  00083C  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3341  000840  C018  F019         	movff	??___flmul+1,??___flmul+2
  3342  000844  C017  F018         	movff	??___flmul,??___flmul+1
  3343  000848  6A17               	clrf	??___flmul^0,c
  3344  00084A  5017               	movf	??___flmul^0,w,c
  3345  00084C  2622               	addwf	___flmul@prod^0,f,c
  3346  00084E  5018               	movf	(??___flmul+1)^0,w,c
  3347  000850  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3348  000852  5019               	movf	(??___flmul+2)^0,w,c
  3349  000854  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3350  000856  501A               	movf	(??___flmul+3)^0,w,c
  3351  000858  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3352  00085A  C01C  F017         	movff	___flmul@grs,??___flmul
  3353  00085E  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3354  000862  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3355  000866  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3356  00086A  0E19               	movlw	25
  3357  00086C  EF3D  F004         	goto	u1450
  3358  000870                     u1455:
  3359  000870  90D8               	bcf	status,0,c
  3360  000872  321A               	rrcf	(??___flmul+3)^0,f,c
  3361  000874  3219               	rrcf	(??___flmul+2)^0,f,c
  3362  000876  3218               	rrcf	(??___flmul+1)^0,f,c
  3363  000878  3217               	rrcf	??___flmul^0,f,c
  3364  00087A                     u1450:
  3365  00087A  2EE8               	decfsz	wreg,f,c
  3366  00087C  EF38  F004         	goto	u1455
  3367  000880  5017               	movf	??___flmul^0,w,c
  3368  000882  2622               	addwf	___flmul@prod^0,f,c
  3369  000884  5018               	movf	(??___flmul+1)^0,w,c
  3370  000886  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3371  000888  5019               	movf	(??___flmul+2)^0,w,c
  3372  00088A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3373  00088C  501A               	movf	(??___flmul+3)^0,w,c
  3374  00088E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3375  000890  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3376  000894  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3377  000898  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3378  00089C  6A1C               	clrf	___flmul@grs^0,c
  3379  00089E  5020               	movf	___flmul@aexp^0,w,c
  3380  0008A0  C021  F017         	movff	___flmul@bexp,??___flmul
  3381  0008A4  6A18               	clrf	(??___flmul+1)^0,c
  3382  0008A6  2617               	addwf	??___flmul^0,f,c
  3383  0008A8  0E00               	movlw	0
  3384  0008AA  2218               	addwfc	(??___flmul+1)^0,f,c
  3385  0008AC  0E82               	movlw	130
  3386  0008AE  2417               	addwf	??___flmul^0,w,c
  3387  0008B0  6E26               	movwf	___flmul@temp^0,c
  3388  0008B2  0EFF               	movlw	255
  3389  0008B4  2018               	addwfc	(??___flmul+1)^0,w,c
  3390  0008B6  6E27               	movwf	(___flmul@temp+1)^0,c
  3391  0008B8  EF73  F004         	goto	l1881
  3392  0008BC                     l1875:
  3393  0008BC  90D8               	bcf	status,0,c
  3394  0008BE  3622               	rlcf	___flmul@prod^0,f,c
  3395  0008C0  3623               	rlcf	(___flmul@prod+1)^0,f,c
  3396  0008C2  3624               	rlcf	(___flmul@prod+2)^0,f,c
  3397  0008C4  3625               	rlcf	(___flmul@prod+3)^0,f,c
  3398  0008C6  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3399  0008C8  EF68  F004         	goto	u1461
  3400  0008CC  EF6A  F004         	goto	u1460
  3401  0008D0                     u1461:
  3402  0008D0  EF6B  F004         	goto	l689
  3403  0008D4                     u1460:
  3404  0008D4  8022               	bsf	___flmul@prod^0,0,c
  3405  0008D6                     l689:
  3406  0008D6  90D8               	bcf	status,0,c
  3407  0008D8  361C               	rlcf	___flmul@grs^0,f,c
  3408  0008DA  361D               	rlcf	(___flmul@grs+1)^0,f,c
  3409  0008DC  361E               	rlcf	(___flmul@grs+2)^0,f,c
  3410  0008DE  361F               	rlcf	(___flmul@grs+3)^0,f,c
  3411  0008E0  0626               	decf	___flmul@temp^0,f,c
  3412  0008E2  A0D8               	btfss	status,0,c
  3413  0008E4  0627               	decf	(___flmul@temp+1)^0,f,c
  3414  0008E6                     l1881:
  3415  0008E6  AE24               	btfss	(___flmul@prod+2)^0,7,c
  3416  0008E8  EF78  F004         	goto	u1471
  3417  0008EC  EF7A  F004         	goto	u1470
  3418  0008F0                     u1471:
  3419  0008F0  EF5E  F004         	goto	l1875
  3420  0008F4                     u1470:
  3421  0008F4  0E00               	movlw	0
  3422  0008F6  6E20               	movwf	___flmul@aexp^0,c
  3423  0008F8  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  3424  0008FA  EF81  F004         	goto	u1481
  3425  0008FE  EF83  F004         	goto	u1480
  3426  000902                     u1481:
  3427  000902  EFA7  F004         	goto	l691
  3428  000906                     u1480:
  3429  000906  0EFF               	movlw	255
  3430  000908  141C               	andwf	___flmul@grs^0,w,c
  3431  00090A  6E17               	movwf	??___flmul^0,c
  3432  00090C  0EFF               	movlw	255
  3433  00090E  141D               	andwf	(___flmul@grs+1)^0,w,c
  3434  000910  6E18               	movwf	(??___flmul+1)^0,c
  3435  000912  0EFF               	movlw	255
  3436  000914  141E               	andwf	(___flmul@grs+2)^0,w,c
  3437  000916  6E19               	movwf	(??___flmul+2)^0,c
  3438  000918  0E7F               	movlw	127
  3439  00091A  141F               	andwf	(___flmul@grs+3)^0,w,c
  3440  00091C  6E1A               	movwf	(??___flmul+3)^0,c
  3441  00091E  5017               	movf	??___flmul^0,w,c
  3442  000920  1018               	iorwf	(??___flmul+1)^0,w,c
  3443  000922  1019               	iorwf	(??___flmul+2)^0,w,c
  3444  000924  101A               	iorwf	(??___flmul+3)^0,w,c
  3445  000926  B4D8               	btfsc	status,2,c
  3446  000928  EF98  F004         	goto	u1491
  3447  00092C  EF9A  F004         	goto	u1490
  3448  000930                     u1491:
  3449  000930  EF9E  F004         	goto	l692
  3450  000934                     u1490:
  3451  000934                     l1889:
  3452  000934  0E01               	movlw	1
  3453  000936  6E20               	movwf	___flmul@aexp^0,c
  3454  000938  EFA7  F004         	goto	l691
  3455  00093C                     l692:
  3456  00093C  A022               	btfss	___flmul@prod^0,0,c
  3457  00093E  EFA3  F004         	goto	u1501
  3458  000942  EFA5  F004         	goto	u1500
  3459  000946                     u1501:
  3460  000946  EFA7  F004         	goto	l691
  3461  00094A                     u1500:
  3462  00094A  EF9A  F004         	goto	l1889
  3463  00094E                     l691:
  3464  00094E  5020               	movf	___flmul@aexp^0,w,c
  3465  000950  B4D8               	btfsc	status,2,c
  3466  000952  EFAD  F004         	goto	u1511
  3467  000956  EFAF  F004         	goto	u1510
  3468  00095A                     u1511:
  3469  00095A  EFD3  F004         	goto	l1901
  3470  00095E                     u1510:
  3471  00095E  0E01               	movlw	1
  3472  000960  2622               	addwf	___flmul@prod^0,f,c
  3473  000962  0E00               	movlw	0
  3474  000964  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3475  000966  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3476  000968  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3477  00096A  A025               	btfss	(___flmul@prod+3)^0,0,c
  3478  00096C  EFBA  F004         	goto	u1521
  3479  000970  EFBC  F004         	goto	u1520
  3480  000974                     u1521:
  3481  000974  EFD3  F004         	goto	l1901
  3482  000978                     u1520:
  3483  000978  C022  F017         	movff	___flmul@prod,??___flmul
  3484  00097C  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3485  000980  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3486  000984  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3487  000988  341A               	rlcf	(??___flmul+3)^0,w,c
  3488  00098A  321A               	rrcf	(??___flmul+3)^0,f,c
  3489  00098C  3219               	rrcf	(??___flmul+2)^0,f,c
  3490  00098E  3218               	rrcf	(??___flmul+1)^0,f,c
  3491  000990  3217               	rrcf	??___flmul^0,f,c
  3492  000992  C017  F022         	movff	??___flmul,___flmul@prod
  3493  000996  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3494  00099A  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3495  00099E  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3496  0009A2  4A26               	infsnz	___flmul@temp^0,f,c
  3497  0009A4  2A27               	incf	(___flmul@temp+1)^0,f,c
  3498  0009A6                     l1901:
  3499  0009A6  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  3500  0009A8  EFDE  F004         	goto	u1531
  3501  0009AC  5027               	movf	(___flmul@temp+1)^0,w,c
  3502  0009AE  E108               	bnz	u1530
  3503  0009B0  2826               	incf	___flmul@temp^0,w,c
  3504  0009B2  A0D8               	btfss	status,0,c
  3505  0009B4  EFDE  F004         	goto	u1531
  3506  0009B8  EFE0  F004         	goto	u1530
  3507  0009BC                     u1531:
  3508  0009BC  EFEA  F004         	goto	l1905
  3509  0009C0                     u1530:
  3510  0009C0  0E00               	movlw	0
  3511  0009C2  6E22               	movwf	___flmul@prod^0,c
  3512  0009C4  0E00               	movlw	0
  3513  0009C6  6E23               	movwf	(___flmul@prod+1)^0,c
  3514  0009C8  0E80               	movlw	128
  3515  0009CA  6E24               	movwf	(___flmul@prod+2)^0,c
  3516  0009CC  0E7F               	movlw	127
  3517  0009CE  6E25               	movwf	(___flmul@prod+3)^0,c
  3518  0009D0  EF18  F005         	goto	l1917
  3519  0009D4                     l1905:
  3520  0009D4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  3521  0009D6  EFF7  F004         	goto	u1540
  3522  0009DA  5027               	movf	(___flmul@temp+1)^0,w,c
  3523  0009DC  E106               	bnz	u1541
  3524  0009DE  0426               	decf	___flmul@temp^0,w,c
  3525  0009E0  B0D8               	btfsc	status,0,c
  3526  0009E2  EFF5  F004         	goto	u1541
  3527  0009E6  EFF7  F004         	goto	u1540
  3528  0009EA                     u1541:
  3529  0009EA  EF03  F005         	goto	l699
  3530  0009EE                     u1540:
  3531  0009EE  0E00               	movlw	0
  3532  0009F0  6E22               	movwf	___flmul@prod^0,c
  3533  0009F2  0E00               	movlw	0
  3534  0009F4  6E23               	movwf	(___flmul@prod+1)^0,c
  3535  0009F6  0E00               	movlw	0
  3536  0009F8  6E24               	movwf	(___flmul@prod+2)^0,c
  3537  0009FA  0E00               	movlw	0
  3538  0009FC  6E25               	movwf	(___flmul@prod+3)^0,c
  3539  0009FE  0E00               	movlw	0
  3540  000A00  6E1B               	movwf	___flmul@sign^0,c
  3541  000A02  EF18  F005         	goto	l1917
  3542  000A06                     l699:
  3543  000A06  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3544  000A0A  0EFF               	movlw	255
  3545  000A0C  1622               	andwf	___flmul@prod^0,f,c
  3546  000A0E  0EFF               	movlw	255
  3547  000A10  1623               	andwf	(___flmul@prod+1)^0,f,c
  3548  000A12  0E7F               	movlw	127
  3549  000A14  1624               	andwf	(___flmul@prod+2)^0,f,c
  3550  000A16  0E00               	movlw	0
  3551  000A18  1625               	andwf	(___flmul@prod+3)^0,f,c
  3552  000A1A  A021               	btfss	___flmul@bexp^0,0,c
  3553  000A1C  EF12  F005         	goto	u1551
  3554  000A20  EF14  F005         	goto	u1550
  3555  000A24                     u1551:
  3556  000A24  EF15  F005         	goto	l1915
  3557  000A28                     u1550:
  3558  000A28  8E24               	bsf	(___flmul@prod+2)^0,7,c
  3559  000A2A                     l1915:
  3560  000A2A  90D8               	bcf	status,0,c
  3561  000A2C  3021               	rrcf	___flmul@bexp^0,w,c
  3562  000A2E  6E25               	movwf	(___flmul@prod+3)^0,c
  3563  000A30                     l1917:
  3564  000A30  501B               	movf	___flmul@sign^0,w,c
  3565  000A32  1225               	iorwf	(___flmul@prod+3)^0,f,c
  3566  000A34  C022  F00F         	movff	___flmul@prod,?___flmul
  3567  000A38  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3568  000A3C  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3569  000A40  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3570  000A44                     l686:
  3571  000A44  0012               	return		;funcret
  3572  000A46                     __end_of___flmul:
  3573                           	callstack 0
  3574                           
  3575 ;; *************** function _LCD_String_xy *****************
  3576 ;; Defined at:
  3577 ;;		line 60 in file "main.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  row             1    wreg     unsigned char 
  3580 ;;  pos             1    4[COMRAM] unsigned char 
  3581 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  3582 ;;		 -> main@digit(10), main@data(10), STR_2(11), STR_1(8), 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  row             1    7[COMRAM] unsigned char 
  3585 ;;  location        1    8[COMRAM] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      void 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3595 ;;      Params:         3       0       0       0       0       0       0
  3596 ;;      Locals:         2       0       0       0       0       0       0
  3597 ;;      Temps:          0       0       0       0       0       0       0
  3598 ;;      Totals:         5       0       0       0       0       0       0
  3599 ;;Total ram usage:        5 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 2
  3602 ;; This function calls:
  3603 ;;		_LCD_Command
  3604 ;;		_LCD_String
  3605 ;; This function is called by:
  3606 ;;		_main
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text18
  3611  001920                     __ptext18:
  3612                           	callstack 0
  3613  001920                     _LCD_String_xy:
  3614                           	callstack 28
  3615                           
  3616                           ;incstack = 0
  3617                           ;LCD_String_xy@row stored from wreg
  3618  001920  6E08               	movwf	LCD_String_xy@row^0,c
  3619  001922                     
  3620                           ;main.c: 63:     if(row<=1)
  3621  001922  0E02               	movlw	2
  3622  001924  6008               	cpfslt	LCD_String_xy@row^0,c
  3623  001926  EF97  F00C         	goto	u1351
  3624  00192A  EF99  F00C         	goto	u1350
  3625  00192E                     u1351:
  3626  00192E  EFA2  F00C         	goto	l1759
  3627  001932                     u1350:
  3628  001932                     
  3629                           ;main.c: 64:     {;main.c: 65:     location=(0x80) | ((pos) & 0x0f);
  3630  001932  5005               	movf	LCD_String_xy@pos^0,w,c
  3631  001934  0B0F               	andlw	15
  3632  001936  0980               	iorlw	128
  3633  001938  6E09               	movwf	LCD_String_xy@location^0,c
  3634  00193A                     
  3635                           ;main.c: 66:     LCD_Command(location);
  3636  00193A  5009               	movf	LCD_String_xy@location^0,w,c
  3637  00193C  EC12  F00D         	call	_LCD_Command
  3638                           
  3639                           ;main.c: 67:     }
  3640  001940  EFA9  F00C         	goto	l1763
  3641  001944                     l1759:
  3642                           
  3643                           ;main.c: 69:     {;main.c: 70:     location=(0xC0) | ((pos) & 0x0f);
  3644  001944  5005               	movf	LCD_String_xy@pos^0,w,c
  3645  001946  0B0F               	andlw	15
  3646  001948  09C0               	iorlw	192
  3647  00194A  6E09               	movwf	LCD_String_xy@location^0,c
  3648  00194C                     
  3649                           ;main.c: 71:     LCD_Command(location);
  3650  00194C  5009               	movf	LCD_String_xy@location^0,w,c
  3651  00194E  EC12  F00D         	call	_LCD_Command
  3652  001952                     l1763:
  3653                           
  3654                           ;main.c: 74:     LCD_String(msg);
  3655  001952  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  3656  001956  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3657  00195A  ECD8  F00B         	call	_LCD_String	;wreg free
  3658  00195E  0012               	return		;funcret
  3659  001960                     __end_of_LCD_String_xy:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _LCD_String *****************
  3663 ;; Defined at:
  3664 ;;		line 50 in file "main.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  3667 ;;		 -> main@digit(10), main@data(10), STR_2(11), STR_1(8), 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3679 ;;      Params:         2       0       0       0       0       0       0
  3680 ;;      Locals:         0       0       0       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0
  3682 ;;      Totals:         2       0       0       0       0       0       0
  3683 ;;Total ram usage:        2 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 1
  3686 ;; This function calls:
  3687 ;;		_LCD_Char
  3688 ;; This function is called by:
  3689 ;;		_LCD_String_xy
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text19
  3694  0017B0                     __ptext19:
  3695                           	callstack 0
  3696  0017B0                     _LCD_String:
  3697                           	callstack 28
  3698  0017B0                     
  3699                           ;main.c: 50: void LCD_String(const char *msg);main.c: 51: {;main.c: 52:     while((*msg)
      +                          !=0)
  3700  0017B0  EFEE  F00B         	goto	l1725
  3701  0017B4                     l1721:
  3702                           
  3703                           ;main.c: 53:     {;main.c: 54:     LCD_Char(*msg);
  3704  0017B4  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3705  0017B8  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3706  0017BC  6AF8               	clrf	tblptru,c
  3707  0017BE  0E05               	movlw	(high __ramtop+-1)
  3708  0017C0  64F7               	cpfsgt	tblptrh,c
  3709  0017C2  D003               	bra	u1307
  3710  0017C4  0008               	tblrd		*
  3711  0017C6  50F5               	movf	tablat,w,c
  3712  0017C8  D005               	bra	u1300
  3713  0017CA                     u1307:
  3714  0017CA  CFF6 FFE1          	movff	tblptrl,fsr1l
  3715  0017CE  CFF7 FFE2          	movff	tblptrh,fsr1h
  3716  0017D2  50E7               	movf	indf1,w,c
  3717  0017D4                     u1300:
  3718  0017D4  ECFD  F00C         	call	_LCD_Char
  3719  0017D8                     
  3720                           ;main.c: 55:     msg++;
  3721  0017D8  4A03               	infsnz	LCD_String@msg^0,f,c
  3722  0017DA  2A04               	incf	(LCD_String@msg+1)^0,f,c
  3723  0017DC                     l1725:
  3724                           
  3725                           ;main.c: 52:     while((*msg)!=0)
  3726  0017DC  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3727  0017E0  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3728  0017E4  6AF8               	clrf	tblptru,c
  3729  0017E6  0E05               	movlw	(high __ramtop+-1)
  3730  0017E8  64F7               	cpfsgt	tblptrh,c
  3731  0017EA  D003               	bra	u1317
  3732  0017EC  0008               	tblrd		*
  3733  0017EE  50F5               	movf	tablat,w,c
  3734  0017F0  D005               	bra	u1310
  3735  0017F2                     u1317:
  3736  0017F2  CFF6 FFE1          	movff	tblptrl,fsr1l
  3737  0017F6  CFF7 FFE2          	movff	tblptrh,fsr1h
  3738  0017FA  50E7               	movf	indf1,w,c
  3739  0017FC                     u1310:
  3740  0017FC  0900               	iorlw	0
  3741  0017FE  A4D8               	btfss	status,2,c
  3742  001800  EF04  F00C         	goto	u1321
  3743  001804  EF06  F00C         	goto	u1320
  3744  001808                     u1321:
  3745  001808  EFDA  F00B         	goto	l1721
  3746  00180C                     u1320:
  3747  00180C  0012               	return		;funcret
  3748  00180E                     __end_of_LCD_String:
  3749                           	callstack 0
  3750                           
  3751 ;; *************** function _LCD_Char *****************
  3752 ;; Defined at:
  3753 ;;		line 40 in file "main.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  dat             1    wreg     unsigned char 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  dat             1    1[COMRAM] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3767 ;;      Params:         0       0       0       0       0       0       0
  3768 ;;      Locals:         1       0       0       0       0       0       0
  3769 ;;      Temps:          1       0       0       0       0       0       0
  3770 ;;      Totals:         2       0       0       0       0       0       0
  3771 ;;Total ram usage:        2 bytes
  3772 ;; Hardware stack levels used: 1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_LCD_String
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text20
  3781  0019FA                     __ptext20:
  3782                           	callstack 0
  3783  0019FA                     _LCD_Char:
  3784                           	callstack 28
  3785                           
  3786                           ;incstack = 0
  3787                           ;LCD_Char@dat stored from wreg
  3788  0019FA  6E02               	movwf	LCD_Char@dat^0,c
  3789  0019FC                     
  3790                           ;main.c: 40: void LCD_Char(char dat);main.c: 41: {;main.c: 42:     PORTB= dat;
  3791  0019FC  C002  FF81         	movff	LCD_Char@dat,3969	;volatile
  3792  001A00                     
  3793                           ;main.c: 43:     PORTDbits.RD0 = 1;
  3794  001A00  8083               	bsf	131,0,c	;volatile
  3795  001A02                     
  3796                           ;main.c: 44:     PORTDbits.RD1=1;
  3797  001A02  8283               	bsf	131,1,c	;volatile
  3798  001A04                     
  3799                           ;main.c: 45:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3800  001A04  0E03               	movlw	3
  3801  001A06  6E01               	movwf	??_LCD_Char^0,c
  3802  001A08  0E98               	movlw	152
  3803  001A0A                     u1747:
  3804  001A0A  2EE8               	decfsz	wreg,f,c
  3805  001A0C  D7FE               	bra	u1747
  3806  001A0E  2E01               	decfsz	??_LCD_Char^0,f,c
  3807  001A10  D7FC               	bra	u1747
  3808  001A12                     
  3809                           ;main.c: 46:     PORTDbits.RD1=0;
  3810  001A12  9283               	bcf	131,1,c	;volatile
  3811  001A14                     
  3812                           ;main.c: 47:     _delay((unsigned long)((3)*(8000000/4000.0)));
  3813  001A14  0E08               	movlw	8
  3814  001A16  6E01               	movwf	??_LCD_Char^0,c
  3815  001A18  0ECA               	movlw	202
  3816  001A1A                     u1757:
  3817  001A1A  2EE8               	decfsz	wreg,f,c
  3818  001A1C  D7FE               	bra	u1757
  3819  001A1E  2E01               	decfsz	??_LCD_Char^0,f,c
  3820  001A20  D7FC               	bra	u1757
  3821  001A22  0012               	return		;funcret
  3822  001A24                     __end_of_LCD_Char:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _LCD_Init *****************
  3826 ;; Defined at:
  3827 ;;		line 27 in file "main.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2, cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3841 ;;      Params:         0       0       0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0
  3843 ;;      Temps:          1       0       0       0       0       0       0
  3844 ;;      Totals:         1       0       0       0       0       0       0
  3845 ;;Total ram usage:        1 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 1
  3848 ;; This function calls:
  3849 ;;		_LCD_Command
  3850 ;; This function is called by:
  3851 ;;		_main
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text21
  3856  0019CA                     __ptext21:
  3857                           	callstack 0
  3858  0019CA                     _LCD_Init:
  3859                           	callstack 29
  3860  0019CA                     
  3861                           ;main.c: 29:     TRISB = 0x00;
  3862  0019CA  0E00               	movlw	0
  3863  0019CC  6E93               	movwf	147,c	;volatile
  3864                           
  3865                           ;main.c: 30:     TRISD = 0x00;
  3866  0019CE  0E00               	movlw	0
  3867  0019D0  6E95               	movwf	149,c	;volatile
  3868  0019D2                     
  3869                           ;main.c: 31:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3870  0019D2  0E0D               	movlw	13
  3871  0019D4  6E03               	movwf	??_LCD_Init^0,c
  3872  0019D6  0EFC               	movlw	252
  3873  0019D8                     u1767:
  3874  0019D8  2EE8               	decfsz	wreg,f,c
  3875  0019DA  D7FE               	bra	u1767
  3876  0019DC  2E03               	decfsz	??_LCD_Init^0,f,c
  3877  0019DE  D7FC               	bra	u1767
  3878  0019E0                     
  3879                           ;main.c: 32:     LCD_Command(0x38);
  3880  0019E0  0E38               	movlw	56
  3881  0019E2  EC12  F00D         	call	_LCD_Command
  3882  0019E6                     
  3883                           ;main.c: 33:     LCD_Command(0x01);
  3884  0019E6  0E01               	movlw	1
  3885  0019E8  EC12  F00D         	call	_LCD_Command
  3886  0019EC                     
  3887                           ;main.c: 34:     LCD_Command(0x06);
  3888  0019EC  0E06               	movlw	6
  3889  0019EE  EC12  F00D         	call	_LCD_Command
  3890  0019F2                     
  3891                           ;main.c: 35:     LCD_Command(0x0c);
  3892  0019F2  0E0C               	movlw	12
  3893  0019F4  EC12  F00D         	call	_LCD_Command
  3894  0019F8  0012               	return		;funcret
  3895  0019FA                     __end_of_LCD_Init:
  3896                           	callstack 0
  3897                           
  3898 ;; *************** function _LCD_Command *****************
  3899 ;; Defined at:
  3900 ;;		line 18 in file "main.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  cmd             1    wreg     unsigned char 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  cmd             1    1[COMRAM] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3914 ;;      Params:         0       0       0       0       0       0       0
  3915 ;;      Locals:         1       0       0       0       0       0       0
  3916 ;;      Temps:          1       0       0       0       0       0       0
  3917 ;;      Totals:         2       0       0       0       0       0       0
  3918 ;;Total ram usage:        2 bytes
  3919 ;; Hardware stack levels used: 1
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_LCD_Init
  3924 ;;		_LCD_String_xy
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text22
  3929  001A24                     __ptext22:
  3930                           	callstack 0
  3931  001A24                     _LCD_Command:
  3932                           	callstack 29
  3933                           
  3934                           ;incstack = 0
  3935                           ;LCD_Command@cmd stored from wreg
  3936  001A24  6E02               	movwf	LCD_Command@cmd^0,c
  3937  001A26                     
  3938                           ;main.c: 18: void LCD_Command(char cmd );main.c: 19: {;main.c: 20:     PORTB= cmd;
  3939  001A26  C002  FF81         	movff	LCD_Command@cmd,3969	;volatile
  3940  001A2A                     
  3941                           ;main.c: 21:     PORTDbits.RD0 = 0;
  3942  001A2A  9083               	bcf	131,0,c	;volatile
  3943  001A2C                     
  3944                           ;main.c: 22:     PORTDbits.RD1 = 1;
  3945  001A2C  8283               	bsf	131,1,c	;volatile
  3946  001A2E                     
  3947                           ;main.c: 23:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3948  001A2E  0E03               	movlw	3
  3949  001A30  6E01               	movwf	??_LCD_Command^0,c
  3950  001A32  0E98               	movlw	152
  3951  001A34                     u1777:
  3952  001A34  2EE8               	decfsz	wreg,f,c
  3953  001A36  D7FE               	bra	u1777
  3954  001A38  2E01               	decfsz	??_LCD_Command^0,f,c
  3955  001A3A  D7FC               	bra	u1777
  3956  001A3C                     
  3957                           ;main.c: 24:     PORTDbits.RD1 = 0;
  3958  001A3C  9283               	bcf	131,1,c	;volatile
  3959  001A3E                     
  3960                           ;main.c: 25:     _delay((unsigned long)((3)*(8000000/4000.0)));
  3961  001A3E  0E08               	movlw	8
  3962  001A40  6E01               	movwf	??_LCD_Command^0,c
  3963  001A42  0ECA               	movlw	202
  3964  001A44                     u1787:
  3965  001A44  2EE8               	decfsz	wreg,f,c
  3966  001A46  D7FE               	bra	u1787
  3967  001A48  2E01               	decfsz	??_LCD_Command^0,f,c
  3968  001A4A  D7FC               	bra	u1787
  3969  001A4C  0012               	return		;funcret
  3970  001A4E                     __end_of_LCD_Command:
  3971                           	callstack 0
  3972                           
  3973 ;; *************** function _ADC_Read *****************
  3974 ;; Defined at:
  3975 ;;		line 86 in file "main.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;  digital         2    4[COMRAM] int 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  2    0[COMRAM] int 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3989 ;;      Params:         2       0       0       0       0       0       0
  3990 ;;      Locals:         2       0       0       0       0       0       0
  3991 ;;      Temps:          2       0       0       0       0       0       0
  3992 ;;      Totals:         6       0       0       0       0       0       0
  3993 ;;Total ram usage:        6 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text23
  4003  001996                     __ptext23:
  4004                           	callstack 0
  4005  001996                     _ADC_Read:
  4006                           	callstack 30
  4007  001996                     
  4008                           ;main.c: 88:     int digital;;main.c: 89:     ADCON0 = 0b00000001;
  4009  001996  0E01               	movlw	1
  4010  001998  6EC2               	movwf	194,c	;volatile
  4011  00199A                     
  4012                           ;main.c: 90:     ADCON0bits.GODONE = 1;
  4013  00199A  82C2               	bsf	194,1,c	;volatile
  4014  00199C                     l54:
  4015  00199C  B2C2               	btfsc	194,1,c	;volatile
  4016  00199E  EFD3  F00C         	goto	u1361
  4017  0019A2  EFD5  F00C         	goto	u1360
  4018  0019A6                     u1361:
  4019  0019A6  EFCE  F00C         	goto	l54
  4020  0019AA                     u1360:
  4021  0019AA                     
  4022                           ;main.c: 92:     digital = (ADRESH<<8) | (ADRESL);
  4023  0019AA  50C3               	movf	195,w,c	;volatile
  4024  0019AC  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  4025  0019B0  6A04               	clrf	(??_ADC_Read+1)^0,c
  4026  0019B2  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  4027  0019B6  6A03               	clrf	??_ADC_Read^0,c
  4028  0019B8  1003               	iorwf	??_ADC_Read^0,w,c
  4029  0019BA  6E05               	movwf	ADC_Read@digital^0,c
  4030  0019BC  5004               	movf	(??_ADC_Read+1)^0,w,c
  4031  0019BE  6E06               	movwf	(ADC_Read@digital+1)^0,c
  4032  0019C0                     
  4033                           ;main.c: 93:     return(digital);
  4034  0019C0  C005  F001         	movff	ADC_Read@digital,?_ADC_Read
  4035  0019C4  C006  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  4036  0019C8  0012               	return		;funcret
  4037  0019CA                     __end_of_ADC_Read:
  4038                           	callstack 0
  4039                           
  4040 ;; *************** function _ADC_Init *****************
  4041 ;; Defined at:
  4042 ;;		line 77 in file "main.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  1    wreg      void 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4056 ;;      Params:         0       0       0       0       0       0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0
  4059 ;;      Totals:         0       0       0       0       0       0       0
  4060 ;;Total ram usage:        0 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text24
  4070  001A96                     __ptext24:
  4071                           	callstack 0
  4072  001A96                     _ADC_Init:
  4073                           	callstack 30
  4074  001A96                     
  4075                           ;main.c: 79:     TRISA = 0x01;
  4076  001A96  0E01               	movlw	1
  4077  001A98  6E92               	movwf	146,c	;volatile
  4078                           
  4079                           ;main.c: 80:     ADCON1 = 0b00001011;
  4080  001A9A  0E0B               	movlw	11
  4081  001A9C  6EC1               	movwf	193,c	;volatile
  4082                           
  4083                           ;main.c: 81:     ADCON2 = 0b10010010;
  4084  001A9E  0E92               	movlw	146
  4085  001AA0  6EC0               	movwf	192,c	;volatile
  4086                           
  4087                           ;main.c: 82:     ADRESH = 0;
  4088  001AA2  0E00               	movlw	0
  4089  001AA4  6EC4               	movwf	196,c	;volatile
  4090                           
  4091                           ;main.c: 83:     ADRESL = 0;
  4092  001AA6  0E00               	movlw	0
  4093  001AA8  6EC3               	movwf	195,c	;volatile
  4094  001AAA  0012               	return		;funcret
  4095  001AAC                     __end_of_ADC_Init:
  4096                           	callstack 0
  4097                           
  4098                           	psect	rparam
  4099  0000                     
  4100                           	psect	idloc
  4101                           
  4102                           ;Config register IDLOC0 @ 0x200000
  4103                           ;	unspecified, using default values
  4104  200000                     	org	2097152
  4105  200000  FF                 	db	255
  4106                           
  4107                           ;Config register IDLOC1 @ 0x200001
  4108                           ;	unspecified, using default values
  4109  200001                     	org	2097153
  4110  200001  FF                 	db	255
  4111                           
  4112                           ;Config register IDLOC2 @ 0x200002
  4113                           ;	unspecified, using default values
  4114  200002                     	org	2097154
  4115  200002  FF                 	db	255
  4116                           
  4117                           ;Config register IDLOC3 @ 0x200003
  4118                           ;	unspecified, using default values
  4119  200003                     	org	2097155
  4120  200003  FF                 	db	255
  4121                           
  4122                           ;Config register IDLOC4 @ 0x200004
  4123                           ;	unspecified, using default values
  4124  200004                     	org	2097156
  4125  200004  FF                 	db	255
  4126                           
  4127                           ;Config register IDLOC5 @ 0x200005
  4128                           ;	unspecified, using default values
  4129  200005                     	org	2097157
  4130  200005  FF                 	db	255
  4131                           
  4132                           ;Config register IDLOC6 @ 0x200006
  4133                           ;	unspecified, using default values
  4134  200006                     	org	2097158
  4135  200006  FF                 	db	255
  4136                           
  4137                           ;Config register IDLOC7 @ 0x200007
  4138                           ;	unspecified, using default values
  4139  200007                     	org	2097159
  4140  200007  FF                 	db	255
  4141                           
  4142                           	psect	config
  4143                           
  4144                           ; Padding undefined space
  4145  300000                     	org	3145728
  4146  300000  FF                 	db	255
  4147                           
  4148                           ;Config register CONFIG1H @ 0x300001
  4149                           ;	Oscillator Selection bits
  4150                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  4151                           ;	Fail-Safe Clock Monitor Enable bit
  4152                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4153                           ;	Internal/External Oscillator Switchover bit
  4154                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4155  300001                     	org	3145729
  4156  300001  08                 	db	8
  4157                           
  4158                           ;Config register CONFIG2L @ 0x300002
  4159                           ;	Power-up Timer Enable bit
  4160                           ;	PWRT = OFF, PWRT disabled
  4161                           ;	Brown-out Reset Enable bits
  4162                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4163                           ;	Brown Out Reset Voltage bits
  4164                           ;	BORV = 3, Minimum setting
  4165  300002                     	org	3145730
  4166  300002  1F                 	db	31
  4167                           
  4168                           ;Config register CONFIG2H @ 0x300003
  4169                           ;	Watchdog Timer Enable bit
  4170                           ;	WDT = ON, WDT enabled
  4171                           ;	Watchdog Timer Postscale Select bits
  4172                           ;	WDTPS = 32768, 1:32768
  4173  300003                     	org	3145731
  4174  300003  1F                 	db	31
  4175                           
  4176                           ; Padding undefined space
  4177  300004                     	org	3145732
  4178  300004  FF                 	db	255
  4179                           
  4180                           ;Config register CONFIG3H @ 0x300005
  4181                           ;	CCP2 MUX bit
  4182                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4183                           ;	PORTB A/D Enable bit
  4184                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4185                           ;	Low-Power Timer1 Oscillator Enable bit
  4186                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4187                           ;	MCLR Pin Enable bit
  4188                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4189  300005                     	org	3145733
  4190  300005  83                 	db	131
  4191                           
  4192                           ;Config register CONFIG4L @ 0x300006
  4193                           ;	Stack Full/Underflow Reset Enable bit
  4194                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4195                           ;	Single-Supply ICSP Enable bit
  4196                           ;	LVP = ON, Single-Supply ICSP enabled
  4197                           ;	Extended Instruction Set Enable bit
  4198                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4199                           ;	Background Debugger Enable bit
  4200                           ;	DEBUG = 0x1, unprogrammed default
  4201  300006                     	org	3145734
  4202  300006  85                 	db	133
  4203                           
  4204                           ; Padding undefined space
  4205  300007                     	org	3145735
  4206  300007  FF                 	db	255
  4207                           
  4208                           ;Config register CONFIG5L @ 0x300008
  4209                           ;	Code Protection bit
  4210                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4211                           ;	Code Protection bit
  4212                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4213                           ;	Code Protection bit
  4214                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4215                           ;	Code Protection bit
  4216                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4217  300008                     	org	3145736
  4218  300008  0F                 	db	15
  4219                           
  4220                           ;Config register CONFIG5H @ 0x300009
  4221                           ;	Boot Block Code Protection bit
  4222                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4223                           ;	Data EEPROM Code Protection bit
  4224                           ;	CPD = OFF, Data EEPROM not code-protected
  4225  300009                     	org	3145737
  4226  300009  C0                 	db	192
  4227                           
  4228                           ;Config register CONFIG6L @ 0x30000A
  4229                           ;	Write Protection bit
  4230                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4231                           ;	Write Protection bit
  4232                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4233                           ;	Write Protection bit
  4234                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4235                           ;	Write Protection bit
  4236                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4237  30000A                     	org	3145738
  4238  30000A  0F                 	db	15
  4239                           
  4240                           ;Config register CONFIG6H @ 0x30000B
  4241                           ;	Configuration Register Write Protection bit
  4242                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4243                           ;	Boot Block Write Protection bit
  4244                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4245                           ;	Data EEPROM Write Protection bit
  4246                           ;	WRTD = OFF, Data EEPROM not write-protected
  4247  30000B                     	org	3145739
  4248  30000B  E0                 	db	224
  4249                           
  4250                           ;Config register CONFIG7L @ 0x30000C
  4251                           ;	Table Read Protection bit
  4252                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4253                           ;	Table Read Protection bit
  4254                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4255                           ;	Table Read Protection bit
  4256                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4257                           ;	Table Read Protection bit
  4258                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4259  30000C                     	org	3145740
  4260  30000C  0F                 	db	15
  4261                           
  4262                           ;Config register CONFIG7H @ 0x30000D
  4263                           ;	Boot Block Table Read Protection bit
  4264                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4265  30000D                     	org	3145741
  4266  30000D  40                 	db	64
  4267                           tosu	equ	0xFFF
  4268                           tosh	equ	0xFFE
  4269                           tosl	equ	0xFFD
  4270                           stkptr	equ	0xFFC
  4271                           pclatu	equ	0xFFB
  4272                           pclath	equ	0xFFA
  4273                           pcl	equ	0xFF9
  4274                           tblptru	equ	0xFF8
  4275                           tblptrh	equ	0xFF7
  4276                           tblptrl	equ	0xFF6
  4277                           tablat	equ	0xFF5
  4278                           prodh	equ	0xFF4
  4279                           prodl	equ	0xFF3
  4280                           indf0	equ	0xFEF
  4281                           postinc0	equ	0xFEE
  4282                           postdec0	equ	0xFED
  4283                           preinc0	equ	0xFEC
  4284                           plusw0	equ	0xFEB
  4285                           fsr0h	equ	0xFEA
  4286                           fsr0l	equ	0xFE9
  4287                           wreg	equ	0xFE8
  4288                           indf1	equ	0xFE7
  4289                           postinc1	equ	0xFE6
  4290                           postdec1	equ	0xFE5
  4291                           preinc1	equ	0xFE4
  4292                           plusw1	equ	0xFE3
  4293                           fsr1h	equ	0xFE2
  4294                           fsr1l	equ	0xFE1
  4295                           bsr	equ	0xFE0
  4296                           indf2	equ	0xFDF
  4297                           postinc2	equ	0xFDE
  4298                           postdec2	equ	0xFDD
  4299                           preinc2	equ	0xFDC
  4300                           plusw2	equ	0xFDB
  4301                           fsr2h	equ	0xFDA
  4302                           fsr2l	equ	0xFD9
  4303                           status	equ	0xFD8

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    102     110
    BANK0           128     28      60
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), main@data(BANK0[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), main@data(BANK0[10]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK0[10]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK0[10]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK0[10]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@digit(BANK0[10]), main@data(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@digit(BANK0[10]), main@data(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S661_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@digit(BANK0[10]), main@data(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@digit(BANK0[10]), main@data(BANK0[10]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK0[10]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 11
		 -> main@digit(BANK0[10]), main@data(BANK0[10]), STR_2(CODE[11]), STR_1(CODE[8]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 11
		 -> main@digit(BANK0[10]), main@data(BANK0[10]), STR_2(CODE[11]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _strcat->_strcpy
    _strcpy->_strlen
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    ___fltol->___flmul
    ___flmul->___xxtofl
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0   11166
                                            101 COMRAM     1     1      0
                                              0 BANK0     28    28      0
                           _ADC_Init
                           _ADC_Read
                           _LCD_Init
                      _LCD_String_xy
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     0      4     714
                                             12 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     4      4     248
                                              4 COMRAM     8     4      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6684
                                             87 COMRAM    14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6181
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5827
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4434
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2785
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     908
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     143
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
   _strcat
     _strcpy
       _strlen (ARG)
     _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1C      3C       5       46.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     66      6E       1       86.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AA      15        0.0%
DATA                 0      0      AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 15 09:22:41 2021

           ?_LCD_Command 0001                       l31 1A4C                       l34 19F8  
                     l51 1AAA                       l43 180C                       l37 1A22  
                     l54 199C                       l48 195E                       l57 19C8  
            ?_LCD_String 0003                      l182 1210                      l195 1374  
                    l365 15C4                      l730 0E12                      l723 0D7A  
                    l811 1088                      l804 0D22                      l726 0ED6  
                    l822 1916                      l737 0E6E                      l825 191E  
                    l817 17A6                      l682 06E0                      l818 17AE  
                    l746 185A                      l691 094E                      l692 093C  
                    l837 168E                      l845 189E                      l773 16D4  
                    l861 18DE                      l686 0A44                      l855 1A72  
                    l848 1AAC                      l776 1716                      l784 0AE4  
                    l689 08D6                      l778 1750                      l786 0AEC  
                    l699 0A06                      l867 1994                      u900 1648  
                    u901 1644                      u910 189E                      u911 189A  
                    u920 1988                      u921 1984                      u930 109C  
                    u931 1098                      u940 10CE                      u941 10CA  
                    u870 15D8                      u951 10F8                      u871 15D4  
                    u960 111C                      u880 15EA                      u961 1118  
                    u881 15E6                      u970 1146                      u890 1612  
                    u971 1142                      u891 160E                      u980 1186  
                    u981 1182                      u990 11D0                      u991 11CC  
                    _abs 18E0                      _pad 1690                      wreg 000FE8  
           ___flmul@aexp 0020             ___flmul@bexp 0021             ___flmul@sign 001B  
           ___flmul@temp 0026             ___flmul@prod 0022              main@digital 00BA  
            LCD_Char@dat 0002             ___fltol@exp1 0031                     l2001 0E82  
                   l2003 0EA6                     ?_abs 0013                     l2005 0EB6  
                   l2021 13AE                     l2013 1376                     l2007 0EC4  
                   l2031 1486                     l2023 13FA                     l2015 137E  
                   l2009 0EC6                     l2033 1498                     l2025 143A  
                   l2017 1390                     l2035 14AA                     l2027 1456  
                   l2019 13A2                     l1501 10FE                     l2029 1472  
                   l1511 1158                     l1503 111C                     l1513 1186  
                   l1505 1124                     l1521 11C0                     l1601 0ABE  
                   l1523 11D0                     l1515 11A6                     l1507 1138  
                   l1531 1216                     l1611 0B1A                     l1603 0AD8  
                   l1525 11F0                     l1517 11A8                     l1509 1146  
                   l1541 1276                     l1533 1224                     l1461 1612  
                   l1453 15C6                     l1621 0BBA                     l1613 0B22  
                   l1605 0AF4                     l1701 1076                     l1711 1A2C  
                   l1519 11BA                     l1551 12EC                     l1543 1294  
                   l1535 1244                     l1463 1648                     l1455 15D8  
                   l1471 187A                     l1631 0C76                     l1623 0BC0  
                   l1615 0B2C                     l1607 0B06                     l1713 1A2E  
                   l1721 17B4                     l1801 0648                     l1561 1354  
                   l1553 130C                     l1545 129C                     l1537 1248  
                   l1529 1212                     l1457 15EA                     l1473 187E  
                   l1481 1988                     l1641 0CC4                     l1633 0C90  
                   l1617 0B32                     l1625 0C24                     l1609 0B14  
                   l1715 1A3C                     l1707 1A26                     l1723 17D8  
                   l1811 0684                     l1803 0658                     l1491 10BC  
                   l1555 131E                     l1547 12B0                     l1539 1256  
                   l1459 15F4                     l1467 185C                     l1475 1960  
                   l1571 16C0                     l1643 0CD6                     l1627 0C3E  
                   l1635 0C9E                     l1619 0BB4                     l1731 1766  
                   l1717 1A3E                     l1709 1A2A                     l1741 19D2  
                   l1661 1A12                     l1653 19FC                     l1725 17DC  
                   l1901 09A6                     l1821 06BA                     l1813 068A  
                   l1805 0668                     l1493 10C0                     l1485 108A  
                   l1549 12BE                     l1557 1324                     l1469 1868  
                   l1477 196C                     l1581 1724                     l1573 16CC  
                   l1565 1690                     l1645 0CE2                     l1637 0CB0  
                   l1629 0C5C                     l1733 178A                     l1743 19E0  
                   l1663 1A14                     l1655 1A00                     l1719 17B0  
                   l1751 1922                     l1911 0A1A                     l1903 09C0  
                   l1823 06CA                     l1815 0698                     l1807 066E  
                   l1495 10CE                     l1487 108E                     l1559 1334  
                   l1479 1970                     l1583 1738                     l1575 16E0  
                   l1567 169E                     l1647 0CEA                     l1639 0CBE  
                   l1591 0A46                     l1671 0F1A                     l1727 1752  
                   l1735 18A0                     l1745 19E6                     l1657 1A02  
                   l1761 194C                     l1753 1922                     l1913 0A28  
                   l1905 09D4                     l1841 074C                     l1833 0714  
                   l1825 06D0                     l1817 069A                     l1809 067E  
                   l1497 10EE                     l1489 109C                     l1577 16F4  
                   l1569 16B2                     l1649 0CFA                     l1593 0A66  
                   l1673 0F1E                     l1665 0ED8                     l1729 175A  
                   l1737 18B0                     l1771 19AA                     l1747 19EC  
                   l1739 19CA                     l1659 1A04                     l1763 1952  
                   l1755 1932                     l1915 0A2A                     l1907 09EE  
                   l1851 0796                     l1843 0764                     l1835 0720  
                   l1827 06F0                     l1819 06AA                     l1931 1514  
                   l1923 14C0                     l1499 10F2                     l1587 18E0  
                   l1579 16F8                     l1595 0A8E                     l1683 0FE6  
                   l1675 0F42                     l1667 0EFC                     l1765 1A96  
                   l1773 19C0                     l1749 19F2                     l1757 193A  
                   l1909 0A0A                     l1917 0A30                     l1861 07EC  
                   l1853 07A6                     l1845 0770                     l1837 072A  
                   l1829 0700                     l1933 1516                     l1925 14D6  
                   l1589 18FA                     l1597 0AAE                     l1685 100A  
                   l1693 1038                     l1677 0F66                     l1669 0F0A  
                   l1781 1826                     l1767 1996                     l1759 1944  
                   l1919 0A34                     l1871 0890                     l1863 0808  
                   l1855 07B2                     l1847 077C                     l1839 0740  
                   l1935 1526                     l1599 0ABC                     l1695 1046  
                   l1687 1018                     l1679 0FAE                     l1783 182E  
                   l1769 199A                     l1881 08E6                     l1873 089E  
                   l1865 0814                     l1857 07C2                     l1849 078A  
                   l1793 061C                     l1961 15A4                     l1945 1550  
                   l1937 152A                     l1929 14EA                     l1689 102C  
                   l1785 184A                     l1777 180E                     l1883 08F4  
                   l1875 08BC                     l1867 0830                     l1859 07DC  
                   l1795 0628                     l1963 15B4                     l1955 1578  
                   l1947 155A                     l1939 1538                     l1971 0D44  
                   l1699 1052                     l1779 181E                     l1893 095E  
                   l1885 08F8                     l1877 08C6                     l1869 085A  
                   l1797 0636                     l1957 1584                     l1949 1564  
                   l1981 0DBC                     l1973 0D8A                     l1789 1A4E  
                   ?_pad 0011                     l1895 096A                     l1887 0906  
                   l1879 08D4                     l1799 0638                     l1959 1594  
                   l1991 0E44                     l1983 0DC8                     l1975 0DA0  
                   l1967 0D26                     l1897 0978                     l1889 0934  
                   l1993 0E50                     l1985 0DFA                     l1969 0D36  
                   l1899 09A2                     l1995 0E5E                     l1987 0DFC  
                   l1979 0DB4                     l1997 0E7C                     l1989 0E08  
                   l1999 0E7E                     STR_1 060C                     STR_2 0601  
                   STR_3 0617                     STR_4 0617                     STR_5 0614  
                   u1000 1224                     u1001 1220                     u1010 1256  
                   u1011 1252                     u1020 1294                     u1100 18FA  
                   u1021 1290                     u1101 18F6                     u1030 12BE  
                   u1110 0A76                     u1031 12BA                     u1111 0A70  
                   u1040 12EC                     u1200 0C76                     u1120 0A78  
                   u1041 12E8                     u1201 0C72                     u1050 1334  
                   u1210 0C90                     u1130 0A8E                     u1051 1330  
                   u1211 0C8C                     u1131 0A8A                     u1300 17D4  
                   u1060 169E                     u1220 0C9E                     u1140 0ABC  
                   u1061 169A                     u1221 0C9A                     u1141 0AB8  
                   u1310 17FC                     u1070 16C0                     u1230 0CB0  
                   u1150 0AD8                     u1071 16BC                     u1231 0CAC  
                   u1151 0AD4                     u1320 180C                     u1400 0698  
                   u1080 1716                     u1240 0CBE                     u1160 0B06  
                   u1321 1808                     u1401 0694                     u1081 1712  
                   u1241 0CBA                     u1161 0B02                     u1410 06AA  
                   u1090 1724                     u1250 0CD6                     u1170 0B14  
                   u1330 17A6                     u1307 17CA                     u1411 06A6  
                   u1091 1720                     u1251 0CD2                     u1171 0B10  
                   u1331 17A2                     u1500 094A                     u1420 06BA  
                   u1180 0C3E                     u1260 0EFC                     u1340 18DE  
                   u1317 17F2                     u1501 0946                     u1421 06B6  
                   u1181 0C3A                     u1261 0EF8                     u1341 18DA  
                   u1350 1932                     u1510 095E                     u1430 06F0  
                   u1190 0C5C                     u1270 0F42                     u1351 192E  
                   u1511 095A                     u1431 06EC                     u1191 0C58  
                   u1271 0F3E                     u1360 19AA                     u1520 0978  
                   u1440 0700                     u1600 1574                     u1280 0F66  
                   u1361 19A6                     u1521 0974                     u1441 06FC  
                   u1601 1570                     u1281 0F62                     u1530 09C0  
                   u1450 087A                     u1370 0636                     u1610 1594  
                   u1290 100A                     u1531 09BC                     u1371 0632  
                   u1611 1590                     u1291 1006                     u1540 09EE  
                   u1460 08D4                     u1380 0648                     u1620 15A4  
                   u1700 0E7C                     u1541 09EA                     u1461 08D0  
                   u1381 0644                     u1621 15A0                     u1701 0E78  
                   u1550 0A28                     u1470 08F4                     u1390 0658  
                   u1710 0EB6                     u1630 0D36                     u1551 0A24  
                   u1471 08F0                     u1455 0870                     u1391 0654  
                   u1711 0EB2                     u1631 0D32                     u1480 0906  
                   u1560 14D6                     u1720 0EC4                     u1640 0D44  
                   u1481 0902                     u1561 14D2                     u1721 0EC0  
                   u1641 0D40                     u1490 0934                     u1570 150A  
                   u1650 0DA0                     u1491 0930                     u1651 0D9C  
                   u1580 1538                     u1660 0DF6                     u1581 1534  
                   u1661 0DF2                     u1590 154C                     u1670 0E40  
                   u1591 1548                     u1575 1500                     u1671 0E3C  
                   u1680 0E5E                     u1681 0E5A                     u1737 14B0  
                   u1690 0E6E                     u1747 1A0A                     u1691 0E6A  
                   u1757 1A1A                     u1767 19D8                     u1777 1A34  
                   u1787 1A44                     abs@a 0013                     _dbuf 0080  
                   _main 1376                     _dtoa 0A46                     _prec 006B  
                   _nout 0067                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9         __end_of_ADC_Init 1AAC         __end_of_ADC_Read 19CA  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
            main@voltage 00B4            _LCD_String_xy 1920             ___param_bank 000000  
                  ??_abs 0015                    ??_pad 0017         __end_of_LCD_Char 1A24  
       __end_of_LCD_Init 19FA            ___fltol@sign1 0030          __end_of___aodiv 1212  
                  ?_main 0001                    ?_dtoa 001C          __end_of___aomod 1376  
        __end_of___flmul 0A46          __end_of___fltol 15C6             vfpfcnvrt@fmt 0042  
                  _PORTB 000F81                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISD 000F95                    _flags 006D                    _fputc 15C6  
                  _fputs 185C                    pad@fp 0011                    _width 0069  
                  _putch 1AAC                    dtoa@d 001E                    dtoa@i 003E  
                  dtoa@n 0036                    dtoa@p 0030                    dtoa@s 0034  
                  dtoa@w 0032                    tablat 000FF5                    status 000FD8  
    __size_of_LCD_String 005E          __end_of_sprintf 185C           ?_LCD_String_xy 0005  
        __initialization 1A74             __end_of_main 14C0             __end_of_dtoa 0D24  
                 ??_main 0066                   ??_dtoa 0026            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 ?_fputc 0001                   ?_fputs 000A                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   ?_putch 0001         LCD_String_xy@msg 0006  
       LCD_String_xy@pos 0005         LCD_String_xy@row 0008         __end_of___xxtofl 0ED8  
           vfprintf@cfmt 0056                ??___aodiv 0011                ??___aomod 0011  
              ??___flmul 0017                ??___fltol 002C          ADC_Read@digital 0005  
                 clear_0 1A7A                   clear_1 1A86                   isa$std 000001  
                 pad@buf 0013     __size_of_LCD_Command 002A                   _strcat 1A4E  
                 dtoa@fp 001C                   _strcpy 18A0                   _strlen 1960  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ?_ADC_Init 0001                ?_ADC_Read 0001  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 17B0  
              ??_sprintf 005E             ___xxtofl@arg 000B             ___xxtofl@exp 000A  
           ___xxtofl@val 0001                ?_LCD_Char 0001               __accesstop 0080  
__end_of__initialization 1A8C                ?_LCD_Init 0001          ??_LCD_String_xy 0008  
          ___rparam_used 000001               ___fltol@f1 0028           __pcstackCOMRAM 0001  
          __end_of_fputc 1690            __end_of_fputs 18A0            __end_of_putch 1AAE  
           ??_LCD_String 0005               ??_ADC_Init 0001               ??_ADC_Read 0003  
                ??_fputc 0005                  ??_fputs 000E                  ??_putch 0001  
             __pbssBANK0 0080               ??_LCD_Char 0001               ??_LCD_Init 0003  
     __end_of_LCD_String 180E                  ?_strcat 000D                  ?_strcpy 0005  
                ?_strlen 0001                ?___xxtofl 0001       __size_of_vfpfcnvrt 01B2  
          LCD_String@msg 0003                  __Hparam 0000                  __Lparam 0000  
                ___aodiv 108A                  ___aomod 1212                  ___flmul 061C  
                ___fltol 14C0                ?_vfprintf 0050             __psmallconst 0600  
                __pcinit 1A74                  __ramtop 0600                  __ptext0 1376  
                __ptext1 1A4E                  __ptext2 18A0                  __ptext3 180E  
                __ptext4 1752                  __ptext5 0ED8                  __ptext6 0A46  
                __ptext7 1690                  __ptext8 1960                  __ptext9 185C  
        __size_of_strcat 0026          __size_of_strcpy 0040          __size_of_strlen 0036  
           __size_of_abs 0040             __size_of_pad 00C2               ??___xxtofl 0005  
                _sprintf 180E     end_of_initialization 1A8C                  fputc@fp 0003  
         LCD_Command@cmd 0002            __Lmediumconst 0000                  fputs@fp 000C  
      __end_of_vfpfcnvrt 108A                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0056  
                strcpy@d 000B                  strlen@a 0003                  strcpy@s 0009  
                strlen@s 0001                _PORTDbits 000F83            ___xxtofl@sign 0009  
      __size_of_ADC_Init 0016        __size_of_ADC_Read 0034              ___flmul@grs 001C  
      __size_of_LCD_Char 002A        __size_of_LCD_Init 0030            ??_LCD_Command 0001  
            vfpfcnvrt@ap 0044              vfpfcnvrt@fp 0040              vfpfcnvrt@ll 0048  
         __end_of_strcat 1A74           __end_of_strcpy 18E0           __end_of_strlen 1996  
    start_initialization 1A74              __end_of_abs 1920              __end_of_pad 1752  
  __end_of_LCD_String_xy 1960              vfprintf@fmt 0052                 ??_strcat 0011  
               ??_strcpy 0009                 ??_strlen 0003      __end_of_LCD_Command 1A4E  
              ___flmul@a 0013                ___flmul@b 000F              __pbssCOMRAM 0067  
          __pcstackBANK0 00A0         ___aodiv@dividend 0001        __size_of___xxtofl 01B4  
               ?___aodiv 0001                 ?___aomod 0001         ___aodiv@quotient 0013  
               ?___flmul 000F                 ?___fltol 0028        __size_of_vfprintf 005E  
            __smallconst 0600                 _ADC_Init 1A96                 _ADC_Read 1996  
  LCD_String_xy@location 0009                 ?_sprintf 0058           __size_of_fputc 00CA  
         __size_of_fputs 0044           __size_of_putch 0002                 _LCD_Char 19FA  
               _LCD_Init 19CA              _LCD_Command 1A24                _vfpfcnvrt 0ED8  
             _ADCON0bits 000FC2                main@digit 00A0                 __Hrparam 0000  
             vfprintf@ap 0054                 __Lrparam 0000               vfprintf@fp 0050  
       __size_of___aodiv 0188         __size_of___aomod 0164         __size_of___flmul 042A  
       __size_of___fltol 0106               ?_vfpfcnvrt 0040          ___aodiv@divisor 0009  
        ___aodiv@counter 0011               sprintf@fmt 005A                 ___xxtofl 0D24  
             strcat@dest 000D                 _dtoa$734 002E                 __ptext10 15C6  
               __ptext11 1AAC                 __ptext20 19FA                 __ptext12 18E0  
               __ptext21 19CA                 __ptext13 1212                 __ptext22 1A24  
               __ptext14 108A                 __ptext23 1996                 __ptext15 0D24  
               __ptext24 1A96                 __ptext16 14C0                 __ptext17 061C  
               __ptext18 1920                 __ptext19 17B0         __size_of_sprintf 004E  
             strcpy@dest 0005            __size_of_main 014A            __size_of_dtoa 02DE  
               isa$xinst 000000                 _vfprintf 1752                 main@data 00AA  
             _LCD_String 17B0         ___aomod@dividend 0001          main@temperature 00B8  
              sprintf@ap 005E                strcat@src 000F                strcpy@src 0007  
        ___aomod@divisor 0009              ??_vfpfcnvrt 0046          ___aomod@counter 0011  
               sprintf@f 0060                 sprintf@s 0058   __size_of_LCD_String_xy 0040  
           ___aodiv@sign 0012             ___aomod@sign 0012  
