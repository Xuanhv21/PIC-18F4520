

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 16 13:06:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4520 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _PORTC	set	3970
    50  0000                     _TRISC	set	3988
    51  0000                     _PIR2bits	set	4001
    52  0000                     _EECON2	set	4007
    53  0000                     _INTCON	set	4082
    54  0000                     _EEDATA	set	4008
    55  0000                     _EECON1bits	set	4006
    56  0000                     _EEADR	set	4009
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61  007F1C                     __pcinit:
    62                           	callstack 0
    63  007F1C                     start_initialization:
    64                           	callstack 0
    65  007F1C                     __initialization:
    66                           	callstack 0
    67  007F1C                     end_of_initialization:
    68                           	callstack 0
    69  007F1C                     __end_of__initialization:
    70                           	callstack 0
    71  007F1C  0100               	movlb	0
    72  007F1E  EFB4  F03F         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75  000001                     __pcstackCOMRAM:
    76                           	callstack 0
    77  000001                     readEEPROM@address:
    78                           	callstack 0
    79  000001                     writeEEPROM@data:
    80                           	callstack 0
    81                           
    82                           ; 1 bytes @ 0x0
    83  000001                     	ds	1
    84  000002                     writeEEPROM@address:
    85                           	callstack 0
    86                           
    87                           ; 1 bytes @ 0x1
    88  000002                     	ds	1
    89  000003                     writeEEPROM@INTCON_SAVE:
    90                           	callstack 0
    91                           
    92                           ; 1 bytes @ 0x2
    93  000003                     	ds	1
    94  000004                     ??_main:
    95                           
    96                           ; 1 bytes @ 0x3
    97  000004                     	ds	2
    98  000006                     main@a_121:
    99                           	callstack 0
   100                           
   101                           ; 2 bytes @ 0x5
   102  000006                     	ds	2
   103  000008                     main@i:
   104                           	callstack 0
   105                           
   106                           ; 2 bytes @ 0x7
   107  000008                     	ds	2
   108  00000A                     main@i_123:
   109                           	callstack 0
   110                           
   111                           ; 2 bytes @ 0x9
   112  00000A                     	ds	2
   113                           
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 38 in file "main.c"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;  i               2    9[COMRAM] unsigned int 
   124 ;;  i               2    7[COMRAM] unsigned int 
   125 ;;  a               2    5[COMRAM] unsigned int 
   126 ;;  a               2    0        unsigned int 
   127 ;; Return value:  Size  Location     Type
   128 ;;                  1    wreg      void 
   129 ;; Registers used:
   130 ;;		wreg, status,2, status,0, cstack
   131 ;; Tracked objects:
   132 ;;		On entry : 0/0
   133 ;;		On exit  : 0/0
   134 ;;		Unchanged: 0/0
   135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   136 ;;      Params:         0       0       0       0       0       0       0
   137 ;;      Locals:         6       0       0       0       0       0       0
   138 ;;      Temps:          2       0       0       0       0       0       0
   139 ;;      Totals:         8       0       0       0       0       0       0
   140 ;;Total ram usage:        8 bytes
   141 ;; Hardware stack levels required when called: 1
   142 ;; This function calls:
   143 ;;		_readEEPROM
   144 ;;		_writeEEPROM
   145 ;; This function is called by:
   146 ;;		Startup code after reset
   147 ;; This function uses a non-reentrant model
   148 ;;
   149                           
   150                           	psect	text0
   151  007F68                     __ptext0:
   152                           	callstack 0
   153  007F68                     _main:
   154                           	callstack 30
   155  007F68                     
   156                           ;main.c: 40:     unsigned int a;;main.c: 41:     TRISC = 0x00;
   157  007F68  0E00               	movlw	0
   158  007F6A  6E94               	movwf	148,c	;volatile
   159  007F6C                     l32:
   160                           
   161                           ;main.c: 43:     {;main.c: 44:         for(unsigned int i=0,a=1;i<8;i++)
   162  007F6C  0E00               	movlw	0
   163  007F6E  6E09               	movwf	(main@i+1)^0,c
   164  007F70  0E00               	movlw	0
   165  007F72  6E08               	movwf	main@i^0,c
   166  007F74  0E00               	movlw	0
   167  007F76  6E07               	movwf	(main@a_121+1)^0,c
   168  007F78  0E01               	movlw	1
   169  007F7A  6E06               	movwf	main@a_121^0,c
   170  007F7C                     l804:
   171                           
   172                           ;main.c: 45:         {;main.c: 46:             writeEEPROM(i,a);
   173  007F7C  C006  F001         	movff	main@a_121,writeEEPROM@data
   174  007F80  5008               	movf	main@i^0,w,c
   175  007F82  EC98  F03F         	call	_writeEEPROM
   176  007F86                     
   177                           ;main.c: 47:             _delay((unsigned long)((20)*(8000000/4000.0)));
   178  007F86  0E34               	movlw	52
   179  007F88  6E04               	movwf	??_main^0,c
   180  007F8A  0EF2               	movlw	242
   181  007F8C                     u77:
   182  007F8C  2EE8               	decfsz	wreg,f,c
   183  007F8E  D7FE               	bra	u77
   184  007F90  2E04               	decfsz	??_main^0,f,c
   185  007F92  D7FC               	bra	u77
   186  007F94                     
   187                           ;main.c: 48:             a = a<<1;
   188  007F94  90D8               	bcf	status,0,c
   189  007F96  3406               	rlcf	main@a_121^0,w,c
   190  007F98  6E06               	movwf	main@a_121^0,c
   191  007F9A  3407               	rlcf	(main@a_121+1)^0,w,c
   192  007F9C  6E07               	movwf	(main@a_121+1)^0,c
   193  007F9E                     
   194                           ;main.c: 49:         }
   195  007F9E  4A08               	infsnz	main@i^0,f,c
   196  007FA0  2A09               	incf	(main@i+1)^0,f,c
   197  007FA2  5009               	movf	(main@i+1)^0,w,c
   198  007FA4  E109               	bnz	u50
   199  007FA6  0E08               	movlw	8
   200  007FA8  5C08               	subwf	main@i^0,w,c
   201  007FAA  A0D8               	btfss	status,0,c
   202  007FAC  EFDA  F03F         	goto	u51
   203  007FB0  EFDC  F03F         	goto	u50
   204  007FB4                     u51:
   205  007FB4  EFBE  F03F         	goto	l804
   206  007FB8                     u50:
   207  007FB8                     
   208                           ;main.c: 51:         for(unsigned int i = 0;i<8;i++)
   209  007FB8  0E00               	movlw	0
   210  007FBA  6E0B               	movwf	(main@i_123+1)^0,c
   211  007FBC  0E00               	movlw	0
   212  007FBE  6E0A               	movwf	main@i_123^0,c
   213  007FC0                     l820:
   214                           
   215                           ;main.c: 52:         {;main.c: 53:             PORTC = readEEPROM(i);
   216  007FC0  500A               	movf	main@i_123^0,w,c
   217  007FC2  EC91  F03F         	call	_readEEPROM
   218  007FC6  6E82               	movwf	130,c	;volatile
   219  007FC8                     
   220                           ;main.c: 54:             _delay((unsigned long)((1000)*(8000000/4000.0)));
   221  007FC8  0E0B               	movlw	11
   222  007FCA  6E05               	movwf	(??_main+1)^0,c
   223  007FCC  0E26               	movlw	38
   224  007FCE  6E04               	movwf	??_main^0,c
   225  007FD0  0E5E               	movlw	94
   226  007FD2                     u87:
   227  007FD2  2EE8               	decfsz	wreg,f,c
   228  007FD4  D7FE               	bra	u87
   229  007FD6  2E04               	decfsz	??_main^0,f,c
   230  007FD8  D7FC               	bra	u87
   231  007FDA  2E05               	decfsz	(??_main+1)^0,f,c
   232  007FDC  D7FA               	bra	u87
   233  007FDE                     
   234                           ;main.c: 55:         }
   235  007FDE  4A0A               	infsnz	main@i_123^0,f,c
   236  007FE0  2A0B               	incf	(main@i_123+1)^0,f,c
   237  007FE2  500B               	movf	(main@i_123+1)^0,w,c
   238  007FE4  E109               	bnz	u60
   239  007FE6  0E08               	movlw	8
   240  007FE8  5C0A               	subwf	main@i_123^0,w,c
   241  007FEA  A0D8               	btfss	status,0,c
   242  007FEC  EFFA  F03F         	goto	u61
   243  007FF0  EFFC  F03F         	goto	u60
   244  007FF4                     u61:
   245  007FF4  EFE0  F03F         	goto	l820
   246  007FF8                     u60:
   247  007FF8  EFB6  F03F         	goto	l32
   248  007FFC  EF00  F000         	goto	start
   249  008000                     __end_of_main:
   250                           	callstack 0
   251                           
   252 ;; *************** function _writeEEPROM *****************
   253 ;; Defined at:
   254 ;;		line 21 in file "main.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;  address         1    wreg     unsigned char 
   257 ;;  data            1    0[COMRAM] unsigned char 
   258 ;; Auto vars:     Size  Location     Type
   259 ;;  address         1    1[COMRAM] unsigned char 
   260 ;;  INTCON_SAVE     1    2[COMRAM] unsigned char 
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   270 ;;      Params:         1       0       0       0       0       0       0
   271 ;;      Locals:         2       0       0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0       0       0
   273 ;;      Totals:         3       0       0       0       0       0       0
   274 ;;Total ram usage:        3 bytes
   275 ;; Hardware stack levels used: 1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		_main
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text1
   284  007F30                     __ptext1:
   285                           	callstack 0
   286  007F30                     _writeEEPROM:
   287                           	callstack 30
   288                           
   289                           ;incstack = 0
   290                           ;writeEEPROM@address stored from wreg
   291  007F30  6E02               	movwf	writeEEPROM@address^0,c
   292  007F32                     
   293                           ;main.c: 21: void writeEEPROM(unsigned char address, unsigned char data);main.c: 22: {;m
      +                          ain.c: 23:     unsigned char INTCON_SAVE;;main.c: 24:     EEADR = address;
   294  007F32  C002  FFA9         	movff	writeEEPROM@address,4009	;volatile
   295  007F36                     
   296                           ;main.c: 25:     EEDATA = data;
   297  007F36  C001  FFA8         	movff	writeEEPROM@data,4008	;volatile
   298  007F3A                     
   299                           ;main.c: 26:     EECON1bits.EEPGD = 0;
   300  007F3A  9EA6               	bcf	166,7,c	;volsfr
   301  007F3C                     
   302                           ;main.c: 27:     EECON1bits.WREN = 1;
   303  007F3C  84A6               	bsf	166,2,c	;volsfr
   304  007F3E                     
   305                           ;main.c: 28:     INTCON_SAVE = INTCON;
   306  007F3E  CFF2 F003          	movff	4082,writeEEPROM@INTCON_SAVE	;volatile
   307  007F42                     
   308                           ;main.c: 29:     INTCON = 0;
   309  007F42  0E00               	movlw	0
   310  007F44  6EF2               	movwf	242,c	;volatile
   311  007F46                     
   312                           ;main.c: 30:     EECON2 = 0x55;
   313  007F46  0E55               	movlw	85
   314  007F48  6EA7               	movwf	167,c	;volsfr
   315  007F4A                     
   316                           ;main.c: 31:     EECON2 = 0xAA;
   317  007F4A  0EAA               	movlw	170
   318  007F4C  6EA7               	movwf	167,c	;volsfr
   319  007F4E                     
   320                           ;main.c: 32:     EECON1bits.WR = 1;
   321  007F4E  82A6               	bsf	166,1,c	;volsfr
   322  007F50                     
   323                           ;main.c: 33:     INTCON = INTCON_SAVE ;
   324  007F50  C003  FFF2         	movff	writeEEPROM@INTCON_SAVE,4082	;volatile
   325  007F54                     
   326                           ;main.c: 34:     EECON1bits.WREN = 0;
   327  007F54  94A6               	bcf	166,2,c	;volsfr
   328  007F56                     l24:
   329  007F56  A8A1               	btfss	161,4,c	;volatile
   330  007F58  EFB0  F03F         	goto	u41
   331  007F5C  EFB2  F03F         	goto	u40
   332  007F60                     u41:
   333  007F60  EFAB  F03F         	goto	l24
   334  007F64                     u40:
   335  007F64                     
   336                           ;main.c: 36:     PIR2bits.EEIF = 0;
   337  007F64  98A1               	bcf	161,4,c	;volatile
   338  007F66  0012               	return		;funcret
   339  007F68                     __end_of_writeEEPROM:
   340                           	callstack 0
   341                           
   342 ;; *************** function _readEEPROM *****************
   343 ;; Defined at:
   344 ;;		line 13 in file "main.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;  address         1    wreg     unsigned char 
   347 ;; Auto vars:     Size  Location     Type
   348 ;;  address         1    0[COMRAM] unsigned char 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      unsigned char 
   351 ;; Registers used:
   352 ;;		wreg, status,2
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   358 ;;      Params:         0       0       0       0       0       0       0
   359 ;;      Locals:         1       0       0       0       0       0       0
   360 ;;      Temps:          0       0       0       0       0       0       0
   361 ;;      Totals:         1       0       0       0       0       0       0
   362 ;;Total ram usage:        1 bytes
   363 ;; Hardware stack levels used: 1
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text2
   372  007F22                     __ptext2:
   373                           	callstack 0
   374  007F22                     _readEEPROM:
   375                           	callstack 30
   376                           
   377                           ;incstack = 0
   378                           ;readEEPROM@address stored from wreg
   379  007F22  6E01               	movwf	readEEPROM@address^0,c
   380  007F24                     
   381                           ;main.c: 13: unsigned char readEEPROM(unsigned char address);main.c: 14: {;main.c: 15:  
      +                             EEADR = address;
   382  007F24  C001  FFA9         	movff	readEEPROM@address,4009	;volatile
   383  007F28                     
   384                           ;main.c: 16:     EECON1bits.EEPGD = 0;
   385  007F28  9EA6               	bcf	166,7,c	;volsfr
   386  007F2A                     
   387                           ;main.c: 17:     EECON1bits.RD = 1;
   388  007F2A  80A6               	bsf	166,0,c	;volsfr
   389  007F2C                     
   390                           ;main.c: 18:     return EEDATA;
   391  007F2C  50A8               	movf	168,w,c	;volatile
   392  007F2E  0012               	return		;funcret
   393  007F30                     __end_of_readEEPROM:
   394                           	callstack 0
   395  0000                     
   396                           	psect	rparam
   397  0000                     
   398                           	psect	idloc
   399                           
   400                           ;Config register IDLOC0 @ 0x200000
   401                           ;	unspecified, using default values
   402  200000                     	org	2097152
   403  200000  FF                 	db	255
   404                           
   405                           ;Config register IDLOC1 @ 0x200001
   406                           ;	unspecified, using default values
   407  200001                     	org	2097153
   408  200001  FF                 	db	255
   409                           
   410                           ;Config register IDLOC2 @ 0x200002
   411                           ;	unspecified, using default values
   412  200002                     	org	2097154
   413  200002  FF                 	db	255
   414                           
   415                           ;Config register IDLOC3 @ 0x200003
   416                           ;	unspecified, using default values
   417  200003                     	org	2097155
   418  200003  FF                 	db	255
   419                           
   420                           ;Config register IDLOC4 @ 0x200004
   421                           ;	unspecified, using default values
   422  200004                     	org	2097156
   423  200004  FF                 	db	255
   424                           
   425                           ;Config register IDLOC5 @ 0x200005
   426                           ;	unspecified, using default values
   427  200005                     	org	2097157
   428  200005  FF                 	db	255
   429                           
   430                           ;Config register IDLOC6 @ 0x200006
   431                           ;	unspecified, using default values
   432  200006                     	org	2097158
   433  200006  FF                 	db	255
   434                           
   435                           ;Config register IDLOC7 @ 0x200007
   436                           ;	unspecified, using default values
   437  200007                     	org	2097159
   438  200007  FF                 	db	255
   439                           
   440                           	psect	config
   441                           
   442                           ; Padding undefined space
   443  300000                     	org	3145728
   444  300000  FF                 	db	255
   445                           
   446                           ;Config register CONFIG1H @ 0x300001
   447                           ;	Oscillator Selection bits
   448                           ;	OSC = HS, HS oscillator
   449                           ;	Fail-Safe Clock Monitor Enable bit
   450                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   451                           ;	Internal/External Oscillator Switchover bit
   452                           ;	IESO = OFF, Oscillator Switchover mode disabled
   453  300001                     	org	3145729
   454  300001  02                 	db	2
   455                           
   456                           ;Config register CONFIG2L @ 0x300002
   457                           ;	Power-up Timer Enable bit
   458                           ;	PWRT = OFF, PWRT disabled
   459                           ;	Brown-out Reset Enable bits
   460                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   461                           ;	Brown Out Reset Voltage bits
   462                           ;	BORV = 3, Minimum setting
   463  300002                     	org	3145730
   464  300002  1F                 	db	31
   465                           
   466                           ;Config register CONFIG2H @ 0x300003
   467                           ;	Watchdog Timer Enable bit
   468                           ;	WDT = ON, WDT enabled
   469                           ;	Watchdog Timer Postscale Select bits
   470                           ;	WDTPS = 32768, 1:32768
   471  300003                     	org	3145731
   472  300003  1F                 	db	31
   473                           
   474                           ; Padding undefined space
   475  300004                     	org	3145732
   476  300004  FF                 	db	255
   477                           
   478                           ;Config register CONFIG3H @ 0x300005
   479                           ;	CCP2 MUX bit
   480                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   481                           ;	PORTB A/D Enable bit
   482                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   483                           ;	Low-Power Timer1 Oscillator Enable bit
   484                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   485                           ;	MCLR Pin Enable bit
   486                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   487  300005                     	org	3145733
   488  300005  83                 	db	131
   489                           
   490                           ;Config register CONFIG4L @ 0x300006
   491                           ;	Stack Full/Underflow Reset Enable bit
   492                           ;	STVREN = ON, Stack full/underflow will cause Reset
   493                           ;	Single-Supply ICSP Enable bit
   494                           ;	LVP = ON, Single-Supply ICSP enabled
   495                           ;	Extended Instruction Set Enable bit
   496                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   497                           ;	Background Debugger Enable bit
   498                           ;	DEBUG = 0x1, unprogrammed default
   499  300006                     	org	3145734
   500  300006  85                 	db	133
   501                           
   502                           ; Padding undefined space
   503  300007                     	org	3145735
   504  300007  FF                 	db	255
   505                           
   506                           ;Config register CONFIG5L @ 0x300008
   507                           ;	Code Protection bit
   508                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   509                           ;	Code Protection bit
   510                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   511                           ;	Code Protection bit
   512                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   513                           ;	Code Protection bit
   514                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   515  300008                     	org	3145736
   516  300008  0F                 	db	15
   517                           
   518                           ;Config register CONFIG5H @ 0x300009
   519                           ;	Boot Block Code Protection bit
   520                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   521                           ;	Data EEPROM Code Protection bit
   522                           ;	CPD = OFF, Data EEPROM not code-protected
   523  300009                     	org	3145737
   524  300009  C0                 	db	192
   525                           
   526                           ;Config register CONFIG6L @ 0x30000A
   527                           ;	Write Protection bit
   528                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   529                           ;	Write Protection bit
   530                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   531                           ;	Write Protection bit
   532                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   533                           ;	Write Protection bit
   534                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   535  30000A                     	org	3145738
   536  30000A  0F                 	db	15
   537                           
   538                           ;Config register CONFIG6H @ 0x30000B
   539                           ;	Configuration Register Write Protection bit
   540                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   541                           ;	Boot Block Write Protection bit
   542                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   543                           ;	Data EEPROM Write Protection bit
   544                           ;	WRTD = OFF, Data EEPROM not write-protected
   545  30000B                     	org	3145739
   546  30000B  E0                 	db	224
   547                           
   548                           ;Config register CONFIG7L @ 0x30000C
   549                           ;	Table Read Protection bit
   550                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   551                           ;	Table Read Protection bit
   552                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   553                           ;	Table Read Protection bit
   554                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   555                           ;	Table Read Protection bit
   556                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   557  30000C                     	org	3145740
   558  30000C  0F                 	db	15
   559                           
   560                           ;Config register CONFIG7H @ 0x30000D
   561                           ;	Boot Block Table Read Protection bit
   562                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   563  30000D                     	org	3145741
   564  30000D  40                 	db	64
   565                           tosu	equ	0xFFF
   566                           tosh	equ	0xFFE
   567                           tosl	equ	0xFFD
   568                           stkptr	equ	0xFFC
   569                           pclatu	equ	0xFFB
   570                           pclath	equ	0xFFA
   571                           pcl	equ	0xFF9
   572                           tblptru	equ	0xFF8
   573                           tblptrh	equ	0xFF7
   574                           tblptrl	equ	0xFF6
   575                           tablat	equ	0xFF5
   576                           prodh	equ	0xFF4
   577                           prodl	equ	0xFF3
   578                           indf0	equ	0xFEF
   579                           postinc0	equ	0xFEE
   580                           postdec0	equ	0xFED
   581                           preinc0	equ	0xFEC
   582                           plusw0	equ	0xFEB
   583                           fsr0h	equ	0xFEA
   584                           fsr0l	equ	0xFE9
   585                           wreg	equ	0xFE8
   586                           indf1	equ	0xFE7
   587                           postinc1	equ	0xFE6
   588                           postdec1	equ	0xFE5
   589                           preinc1	equ	0xFE4
   590                           plusw1	equ	0xFE3
   591                           fsr1h	equ	0xFE2
   592                           fsr1l	equ	0xFE1
   593                           bsr	equ	0xFE0
   594                           indf2	equ	0xFDF
   595                           postinc2	equ	0xFDE
   596                           postdec2	equ	0xFDD
   597                           preinc2	equ	0xFDC
   598                           plusw2	equ	0xFDB
   599                           fsr2h	equ	0xFDA
   600                           fsr2l	equ	0xFD9
   601                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     11      11
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_writeEEPROM

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     340
                                              3 COMRAM     8     8      0
                         _readEEPROM
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM                                          3     2      1     143
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _readEEPROM                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _readEEPROM
   _writeEEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      B       B       1        8.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 16 13:06:37 2021

                     l21 7F2E                       l24 7F56                       l32 7F6C  
                     l26 7F64                       l27 7F66                       u40 7F64  
                     u41 7F60                       u50 7FB8                       u51 7FB4  
                     u60 7FF8                       u61 7FF4                       u77 7F8C  
                     u87 7FD2                      l720 7F2C                      l714 7F24  
                    l810 7F9E                      l716 7F28                      l820 7FC0  
                    l812 7FA2                      l804 7F7C                      l718 7F2A  
                    l822 7FC8                      l814 7FB8                      l806 7F86  
                    l824 7FDE                      l808 7F94                      l826 7FE2  
                    l780 7F3A                      l790 7F4A                      l782 7F3C  
                    l792 7F4E                      l784 7F3E                      l776 7F32  
                    l794 7F50                      l786 7F42                      l778 7F36  
                    l796 7F54                      l788 7F46                      l798 7F68  
                    wreg 000FE8                     _main 7F68                     start 0000  
           ___param_bank 000000              _writeEEPROM 7F30       writeEEPROM@address 0002  
                  ?_main 0001                    _EEADR 000FA9                    _PORTC 000F82  
                  _TRISC 000F94                    main@i 0008                    status 000FD8  
        __initialization 7F1C             __end_of_main 8000                   ??_main 0004  
          __activetblptr 000000                   _EEDATA 000FA8                   _EECON2 000FA7  
                 _INTCON 000FF2                   isa$std 000001               __accesstop 0080  
__end_of__initialization 7F1C            ___rparam_used 000001          writeEEPROM@data 0001  
         __pcstackCOMRAM 0001             ?_writeEEPROM 0001               _readEEPROM 7F22  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F1C  
                __ramtop 0600                  __ptext0 7F68                  __ptext1 7F30  
                __ptext2 7F22     end_of_initialization 7F1C        readEEPROM@address 0001  
            ?_readEEPROM 0001     __size_of_writeEEPROM 0038   writeEEPROM@INTCON_SAVE 0003  
    start_initialization 7F1C      __size_of_readEEPROM 000E                 _PIR2bits 000FA1  
              main@a_121 0006                main@i_123 000A             ??_readEEPROM 0001  
             _EECON1bits 000FA6                 __Hrparam 0000                 __Lrparam 0000  
     __end_of_readEEPROM 7F30            __size_of_main 0098            ??_writeEEPROM 0002  
               isa$xinst 000000      __end_of_writeEEPROM 7F68  
