

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 10 09:09:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4520 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  007CC8                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _dem
    62  007CC8  FD                 	db	253
    63  007CC9  0D                 	db	13
    64  007CCA  DB                 	db	219
    65  007CCB  F3                 	db	243
    66  007CCC  67                 	db	103
    67  007CCD  B7                 	db	183
    68  007CCE  BF                 	db	191
    69  007CCF  E1                 	db	225
    70  007CD0  FF                 	db	255
    71  007CD1  F7                 	db	247
    72  0000                     _TRISC	set	3988
    73  0000                     _TRISB	set	3987
    74  0000                     _PORTCbits	set	3970
    75  0000                     _PORTBbits	set	3969
    76                           
    77                           ; #config settings
    78                           
    79                           	psect	cinit
    80  007D1E                     __pcinit:
    81                           	callstack 0
    82  007D1E                     start_initialization:
    83                           	callstack 0
    84  007D1E                     __initialization:
    85                           	callstack 0
    86                           
    87                           ; Initialize objects allocated to COMRAM (10 bytes)
    88                           ; load TBLPTR registers with __pidataCOMRAM
    89  007D1E  0EC8               	movlw	low __pidataCOMRAM
    90  007D20  6EF6               	movwf	tblptrl,c
    91  007D22  0E7C               	movlw	high __pidataCOMRAM
    92  007D24  6EF7               	movwf	tblptrh,c
    93  007D26  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    94  007D28  6EF8               	movwf	tblptru,c
    95  007D2A  EE00  F015         	lfsr	0,__pdataCOMRAM
    96  007D2E  EE10 F00A          	lfsr	1,10
    97  007D32                     copy_data0:
    98  007D32  0009               	tblrd		*+
    99  007D34  CFF5 FFEE          	movff	tablat,postinc0
   100  007D38  50E5               	movf	postdec1,w,c
   101  007D3A  50E1               	movf	fsr1l,w,c
   102  007D3C  E1FA               	bnz	copy_data0
   103  007D3E                     end_of_initialization:
   104                           	callstack 0
   105  007D3E                     __end_of__initialization:
   106                           	callstack 0
   107  007D3E  0100               	movlb	0
   108  007D40  EFA2  F03E         	goto	_main	;jump to C main() function
   109                           
   110                           	psect	dataCOMRAM
   111  000015                     __pdataCOMRAM:
   112                           	callstack 0
   113  000015                     _dem:
   114                           	callstack 0
   115  000015                     	ds	10
   116                           
   117                           	psect	cstackCOMRAM
   118  000001                     __pcstackCOMRAM:
   119                           	callstack 0
   120  000001                     ?___awdiv:
   121                           	callstack 0
   122  000001                     ?___awmod:
   123                           	callstack 0
   124  000001                     ___awdiv@dividend:
   125                           	callstack 0
   126  000001                     ___awmod@dividend:
   127                           	callstack 0
   128                           
   129                           ; 2 bytes @ 0x0
   130  000001                     	ds	2
   131  000003                     ___awdiv@divisor:
   132                           	callstack 0
   133  000003                     ___awmod@divisor:
   134                           	callstack 0
   135                           
   136                           ; 2 bytes @ 0x2
   137  000003                     	ds	2
   138  000005                     ___awdiv@counter:
   139                           	callstack 0
   140  000005                     ___awmod@counter:
   141                           	callstack 0
   142                           
   143                           ; 1 bytes @ 0x4
   144  000005                     	ds	1
   145  000006                     ___awdiv@sign:
   146                           	callstack 0
   147  000006                     ___awmod@sign:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x5
   151  000006                     	ds	1
   152  000007                     ___awdiv@quotient:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0x6
   156  000007                     	ds	2
   157  000009                     Display2_led_7Seg@dl2:
   158                           	callstack 0
   159                           
   160                           ; 1 bytes @ 0x8
   161  000009                     	ds	1
   162  00000A                     ??_Display2_led_7Seg:
   163                           
   164                           ; 1 bytes @ 0x9
   165  00000A                     	ds	2
   166  00000C                     Display2_led_7Seg@dl1:
   167                           	callstack 0
   168                           
   169                           ; 1 bytes @ 0xB
   170  00000C                     	ds	1
   171  00000D                     Display2_led_7Seg@i:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0xC
   175  00000D                     	ds	2
   176  00000F                     Display2_led_7Seg@i_210:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0xE
   180  00000F                     	ds	2
   181  000011                     ??_main:
   182                           
   183                           ; 1 bytes @ 0x10
   184  000011                     	ds	2
   185  000013                     main@i:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x12
   189  000013                     	ds	2
   190                           
   191 ;;
   192 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   193 ;;
   194 ;; *************** function _main *****************
   195 ;; Defined at:
   196 ;;		line 85 in file "main.c"
   197 ;; Parameters:    Size  Location     Type
   198 ;;		None
   199 ;; Auto vars:     Size  Location     Type
   200 ;;  i               2   18[COMRAM] int 
   201 ;; Return value:  Size  Location     Type
   202 ;;                  2   44[None  ] int 
   203 ;; Registers used:
   204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   205 ;; Tracked objects:
   206 ;;		On entry : 0/0
   207 ;;		On exit  : 0/0
   208 ;;		Unchanged: 0/0
   209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   210 ;;      Params:         0       0       0       0       0       0       0
   211 ;;      Locals:         2       0       0       0       0       0       0
   212 ;;      Temps:          2       0       0       0       0       0       0
   213 ;;      Totals:         4       0       0       0       0       0       0
   214 ;;Total ram usage:        4 bytes
   215 ;; Hardware stack levels required when called: 2
   216 ;; This function calls:
   217 ;;		_Display2_led_7Seg
   218 ;;		_Led_Button
   219 ;;		_Motor_Relay
   220 ;;		___awdiv
   221 ;;		___awmod
   222 ;; This function is called by:
   223 ;;		Startup code after reset
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           	psect	text0
   228  007D44                     __ptext0:
   229                           	callstack 0
   230  007D44                     _main:
   231                           	callstack 29
   232  007D44                     
   233                           ;main.c: 87:     TRISB = 0b01000001;
   234  007D44  0E41               	movlw	65
   235  007D46  6E93               	movwf	147,c	;volatile
   236                           
   237                           ;main.c: 88:     TRISC = 0x00;
   238  007D48  0E00               	movlw	0
   239  007D4A  6E94               	movwf	148,c	;volatile
   240  007D4C                     l1002:
   241                           
   242                           ;main.c: 90:     {;main.c: 91:         Led_Button();
   243  007D4C  EC77  F03E         	call	_Led_Button	;wreg free
   244  007D50                     
   245                           ;main.c: 92:         Motor_Relay();
   246  007D50  EC83  F03E         	call	_Motor_Relay	;wreg free
   247                           
   248                           ;main.c: 94:         for(int i=0;i<100;i++)
   249  007D54  0E00               	movlw	0
   250  007D56  6E14               	movwf	(main@i+1)^0,c
   251  007D58  0E00               	movlw	0
   252  007D5A  6E13               	movwf	main@i^0,c
   253  007D5C                     l1010:
   254                           
   255                           ;main.c: 95:         {;main.c: 97:             Display2_led_7Seg(dem[i/10],dem[i%10]);
   256  007D5C  C013  F001         	movff	main@i,___awmod@dividend
   257  007D60  C014  F002         	movff	main@i+1,___awmod@dividend+1
   258  007D64  0E00               	movlw	0
   259  007D66  6E04               	movwf	(___awmod@divisor+1)^0,c
   260  007D68  0E0A               	movlw	10
   261  007D6A  6E03               	movwf	___awmod@divisor^0,c
   262  007D6C  EC46  F03F         	call	___awmod	;wreg free
   263  007D70  0E15               	movlw	low _dem
   264  007D72  2401               	addwf	?___awmod^0,w,c
   265  007D74  6ED9               	movwf	fsr2l,c
   266  007D76  0E00               	movlw	high _dem
   267  007D78  2002               	addwfc	(?___awmod+1)^0,w,c
   268  007D7A  6EDA               	movwf	fsr2h,c
   269  007D7C  50DF               	movf	indf2,w,c
   270  007D7E  6E09               	movwf	Display2_led_7Seg@dl2^0,c
   271  007D80  C013  F001         	movff	main@i,___awdiv@dividend
   272  007D84  C014  F002         	movff	main@i+1,___awdiv@dividend+1
   273  007D88  0E00               	movlw	0
   274  007D8A  6E04               	movwf	(___awdiv@divisor+1)^0,c
   275  007D8C  0E0A               	movlw	10
   276  007D8E  6E03               	movwf	___awdiv@divisor^0,c
   277  007D90  EC9E  F03F         	call	___awdiv	;wreg free
   278  007D94  0E15               	movlw	low _dem
   279  007D96  2401               	addwf	?___awdiv^0,w,c
   280  007D98  6ED9               	movwf	fsr2l,c
   281  007D9A  0E00               	movlw	high _dem
   282  007D9C  2002               	addwfc	(?___awdiv+1)^0,w,c
   283  007D9E  6EDA               	movwf	fsr2h,c
   284  007DA0  50DF               	movf	indf2,w,c
   285  007DA2  ECF2  F03E         	call	_Display2_led_7Seg
   286  007DA6                     
   287                           ;main.c: 98:             _delay((unsigned long)((500)*(4000000/4000.0)));
   288  007DA6  0E03               	movlw	3
   289  007DA8  6E12               	movwf	(??_main+1)^0,c
   290  007DAA  0E8A               	movlw	138
   291  007DAC  6E11               	movwf	??_main^0,c
   292  007DAE  0E56               	movlw	86
   293  007DB0                     u397:
   294  007DB0  2EE8               	decfsz	wreg,f,c
   295  007DB2  D7FE               	bra	u397
   296  007DB4  2E11               	decfsz	??_main^0,f,c
   297  007DB6  D7FC               	bra	u397
   298  007DB8  2E12               	decfsz	(??_main+1)^0,f,c
   299  007DBA  D7FA               	bra	u397
   300  007DBC                     
   301                           ;main.c: 99:         }
   302  007DBC  4A13               	infsnz	main@i^0,f,c
   303  007DBE  2A14               	incf	(main@i+1)^0,f,c
   304  007DC0  BE14               	btfsc	(main@i+1)^0,7,c
   305  007DC2  EFEC  F03E         	goto	u381
   306  007DC6  5014               	movf	(main@i+1)^0,w,c
   307  007DC8  E109               	bnz	u380
   308  007DCA  0E64               	movlw	100
   309  007DCC  5C13               	subwf	main@i^0,w,c
   310  007DCE  A0D8               	btfss	status,0,c
   311  007DD0  EFEC  F03E         	goto	u381
   312  007DD4  EFEE  F03E         	goto	u380
   313  007DD8                     u381:
   314  007DD8  EFAE  F03E         	goto	l1010
   315  007DDC                     u380:
   316  007DDC  EFA6  F03E         	goto	l1002
   317  007DE0  EF00  F000         	goto	start
   318  007DE4                     __end_of_main:
   319                           	callstack 0
   320                           
   321 ;; *************** function ___awmod *****************
   322 ;; Defined at:
   323 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;  dividend        2    0[COMRAM] int 
   326 ;;  divisor         2    2[COMRAM] int 
   327 ;; Auto vars:     Size  Location     Type
   328 ;;  sign            1    5[COMRAM] unsigned char 
   329 ;;  counter         1    4[COMRAM] unsigned char 
   330 ;; Return value:  Size  Location     Type
   331 ;;                  2    0[COMRAM] int 
   332 ;; Registers used:
   333 ;;		wreg, status,2, status,0
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   339 ;;      Params:         4       0       0       0       0       0       0
   340 ;;      Locals:         2       0       0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0       0       0
   342 ;;      Totals:         6       0       0       0       0       0       0
   343 ;;Total ram usage:        6 bytes
   344 ;; Hardware stack levels used: 1
   345 ;; This function calls:
   346 ;;		Nothing
   347 ;; This function is called by:
   348 ;;		_main
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text1
   353  007E8C                     __ptext1:
   354                           	callstack 0
   355  007E8C                     ___awmod:
   356                           	callstack 30
   357  007E8C  0E00               	movlw	0
   358  007E8E  6E06               	movwf	___awmod@sign^0,c
   359  007E90  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   360  007E92  EF4F  F03F         	goto	u320
   361  007E96  EF4D  F03F         	goto	u321
   362  007E9A                     u321:
   363  007E9A  EF55  F03F         	goto	l972
   364  007E9E                     u320:
   365  007E9E  6C01               	negf	___awmod@dividend^0,c
   366  007EA0  1E02               	comf	(___awmod@dividend+1)^0,f,c
   367  007EA2  B0D8               	btfsc	status,0,c
   368  007EA4  2A02               	incf	(___awmod@dividend+1)^0,f,c
   369  007EA6  0E01               	movlw	1
   370  007EA8  6E06               	movwf	___awmod@sign^0,c
   371  007EAA                     l972:
   372  007EAA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   373  007EAC  EF5C  F03F         	goto	u330
   374  007EB0  EF5A  F03F         	goto	u331
   375  007EB4                     u331:
   376  007EB4  EF60  F03F         	goto	l976
   377  007EB8                     u330:
   378  007EB8  6C03               	negf	___awmod@divisor^0,c
   379  007EBA  1E04               	comf	(___awmod@divisor+1)^0,f,c
   380  007EBC  B0D8               	btfsc	status,0,c
   381  007EBE  2A04               	incf	(___awmod@divisor+1)^0,f,c
   382  007EC0                     l976:
   383  007EC0  5003               	movf	___awmod@divisor^0,w,c
   384  007EC2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   385  007EC4  B4D8               	btfsc	status,2,c
   386  007EC6  EF67  F03F         	goto	u341
   387  007ECA  EF69  F03F         	goto	u340
   388  007ECE                     u341:
   389  007ECE  EF8D  F03F         	goto	l992
   390  007ED2                     u340:
   391  007ED2  0E01               	movlw	1
   392  007ED4  6E05               	movwf	___awmod@counter^0,c
   393  007ED6  EF71  F03F         	goto	l982
   394  007EDA                     l980:
   395  007EDA  90D8               	bcf	status,0,c
   396  007EDC  3603               	rlcf	___awmod@divisor^0,f,c
   397  007EDE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   398  007EE0  2A05               	incf	___awmod@counter^0,f,c
   399  007EE2                     l982:
   400  007EE2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   401  007EE4  EF76  F03F         	goto	u351
   402  007EE8  EF78  F03F         	goto	u350
   403  007EEC                     u351:
   404  007EEC  EF6D  F03F         	goto	l980
   405  007EF0                     u350:
   406  007EF0                     l984:
   407  007EF0  5003               	movf	___awmod@divisor^0,w,c
   408  007EF2  5C01               	subwf	___awmod@dividend^0,w,c
   409  007EF4  5004               	movf	(___awmod@divisor+1)^0,w,c
   410  007EF6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   411  007EF8  A0D8               	btfss	status,0,c
   412  007EFA  EF81  F03F         	goto	u361
   413  007EFE  EF83  F03F         	goto	u360
   414  007F02                     u361:
   415  007F02  EF87  F03F         	goto	l988
   416  007F06                     u360:
   417  007F06  5003               	movf	___awmod@divisor^0,w,c
   418  007F08  5E01               	subwf	___awmod@dividend^0,f,c
   419  007F0A  5004               	movf	(___awmod@divisor+1)^0,w,c
   420  007F0C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   421  007F0E                     l988:
   422  007F0E  90D8               	bcf	status,0,c
   423  007F10  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   424  007F12  3203               	rrcf	___awmod@divisor^0,f,c
   425  007F14  2E05               	decfsz	___awmod@counter^0,f,c
   426  007F16  EF78  F03F         	goto	l984
   427  007F1A                     l992:
   428  007F1A  5006               	movf	___awmod@sign^0,w,c
   429  007F1C  B4D8               	btfsc	status,2,c
   430  007F1E  EF93  F03F         	goto	u371
   431  007F22  EF95  F03F         	goto	u370
   432  007F26                     u371:
   433  007F26  EF99  F03F         	goto	l996
   434  007F2A                     u370:
   435  007F2A  6C01               	negf	___awmod@dividend^0,c
   436  007F2C  1E02               	comf	(___awmod@dividend+1)^0,f,c
   437  007F2E  B0D8               	btfsc	status,0,c
   438  007F30  2A02               	incf	(___awmod@dividend+1)^0,f,c
   439  007F32                     l996:
   440  007F32  C001  F001         	movff	___awmod@dividend,?___awmod
   441  007F36  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   442  007F3A  0012               	return		;funcret
   443  007F3C                     __end_of___awmod:
   444                           	callstack 0
   445                           
   446 ;; *************** function ___awdiv *****************
   447 ;; Defined at:
   448 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;  dividend        2    0[COMRAM] int 
   451 ;;  divisor         2    2[COMRAM] int 
   452 ;; Auto vars:     Size  Location     Type
   453 ;;  quotient        2    6[COMRAM] int 
   454 ;;  sign            1    5[COMRAM] unsigned char 
   455 ;;  counter         1    4[COMRAM] unsigned char 
   456 ;; Return value:  Size  Location     Type
   457 ;;                  2    0[COMRAM] int 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   465 ;;      Params:         4       0       0       0       0       0       0
   466 ;;      Locals:         4       0       0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0       0       0
   468 ;;      Totals:         8       0       0       0       0       0       0
   469 ;;Total ram usage:        8 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           	psect	text2
   479  007F3C                     __ptext2:
   480                           	callstack 0
   481  007F3C                     ___awdiv:
   482                           	callstack 30
   483  007F3C  0E00               	movlw	0
   484  007F3E  6E06               	movwf	___awdiv@sign^0,c
   485  007F40  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   486  007F42  EFA7  F03F         	goto	u260
   487  007F46  EFA5  F03F         	goto	u261
   488  007F4A                     u261:
   489  007F4A  EFAD  F03F         	goto	l928
   490  007F4E                     u260:
   491  007F4E  6C03               	negf	___awdiv@divisor^0,c
   492  007F50  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   493  007F52  B0D8               	btfsc	status,0,c
   494  007F54  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   495  007F56  0E01               	movlw	1
   496  007F58  6E06               	movwf	___awdiv@sign^0,c
   497  007F5A                     l928:
   498  007F5A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   499  007F5C  EFB4  F03F         	goto	u270
   500  007F60  EFB2  F03F         	goto	u271
   501  007F64                     u271:
   502  007F64  EFBA  F03F         	goto	l934
   503  007F68                     u270:
   504  007F68  6C01               	negf	___awdiv@dividend^0,c
   505  007F6A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   506  007F6C  B0D8               	btfsc	status,0,c
   507  007F6E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   508  007F70  0E01               	movlw	1
   509  007F72  1A06               	xorwf	___awdiv@sign^0,f,c
   510  007F74                     l934:
   511  007F74  0E00               	movlw	0
   512  007F76  6E08               	movwf	(___awdiv@quotient+1)^0,c
   513  007F78  0E00               	movlw	0
   514  007F7A  6E07               	movwf	___awdiv@quotient^0,c
   515  007F7C  5003               	movf	___awdiv@divisor^0,w,c
   516  007F7E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   517  007F80  B4D8               	btfsc	status,2,c
   518  007F82  EFC5  F03F         	goto	u281
   519  007F86  EFC7  F03F         	goto	u280
   520  007F8A                     u281:
   521  007F8A  EFEF  F03F         	goto	l956
   522  007F8E                     u280:
   523  007F8E  0E01               	movlw	1
   524  007F90  6E05               	movwf	___awdiv@counter^0,c
   525  007F92  EFCF  F03F         	goto	l942
   526  007F96                     l940:
   527  007F96  90D8               	bcf	status,0,c
   528  007F98  3603               	rlcf	___awdiv@divisor^0,f,c
   529  007F9A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   530  007F9C  2A05               	incf	___awdiv@counter^0,f,c
   531  007F9E                     l942:
   532  007F9E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   533  007FA0  EFD4  F03F         	goto	u291
   534  007FA4  EFD6  F03F         	goto	u290
   535  007FA8                     u291:
   536  007FA8  EFCB  F03F         	goto	l940
   537  007FAC                     u290:
   538  007FAC                     l944:
   539  007FAC  90D8               	bcf	status,0,c
   540  007FAE  3607               	rlcf	___awdiv@quotient^0,f,c
   541  007FB0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   542  007FB2  5003               	movf	___awdiv@divisor^0,w,c
   543  007FB4  5C01               	subwf	___awdiv@dividend^0,w,c
   544  007FB6  5004               	movf	(___awdiv@divisor+1)^0,w,c
   545  007FB8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   546  007FBA  A0D8               	btfss	status,0,c
   547  007FBC  EFE2  F03F         	goto	u301
   548  007FC0  EFE4  F03F         	goto	u300
   549  007FC4                     u301:
   550  007FC4  EFE9  F03F         	goto	l952
   551  007FC8                     u300:
   552  007FC8  5003               	movf	___awdiv@divisor^0,w,c
   553  007FCA  5E01               	subwf	___awdiv@dividend^0,f,c
   554  007FCC  5004               	movf	(___awdiv@divisor+1)^0,w,c
   555  007FCE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   556  007FD0  8007               	bsf	___awdiv@quotient^0,0,c
   557  007FD2                     l952:
   558  007FD2  90D8               	bcf	status,0,c
   559  007FD4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   560  007FD6  3203               	rrcf	___awdiv@divisor^0,f,c
   561  007FD8  2E05               	decfsz	___awdiv@counter^0,f,c
   562  007FDA  EFD6  F03F         	goto	l944
   563  007FDE                     l956:
   564  007FDE  5006               	movf	___awdiv@sign^0,w,c
   565  007FE0  B4D8               	btfsc	status,2,c
   566  007FE2  EFF5  F03F         	goto	u311
   567  007FE6  EFF7  F03F         	goto	u310
   568  007FEA                     u311:
   569  007FEA  EFFB  F03F         	goto	l960
   570  007FEE                     u310:
   571  007FEE  6C07               	negf	___awdiv@quotient^0,c
   572  007FF0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   573  007FF2  B0D8               	btfsc	status,0,c
   574  007FF4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   575  007FF6                     l960:
   576  007FF6  C007  F001         	movff	___awdiv@quotient,?___awdiv
   577  007FFA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   578  007FFE  0012               	return		;funcret
   579  008000                     __end_of___awdiv:
   580                           	callstack 0
   581                           
   582 ;; *************** function _Motor_Relay *****************
   583 ;; Defined at:
   584 ;;		line 23 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		None
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   598 ;;      Params:         0       0       0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0
   601 ;;      Totals:         0       0       0       0       0       0       0
   602 ;;Total ram usage:        0 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text3
   612  007D06                     __ptext3:
   613                           	callstack 0
   614  007D06                     _Motor_Relay:
   615                           	callstack 30
   616  007D06                     
   617                           ;main.c: 25:     if(PORTBbits.RB6 == 1)
   618  007D06  AC81               	btfss	129,6,c	;volatile
   619  007D08  EF88  F03E         	goto	u21
   620  007D0C  EF8A  F03E         	goto	u20
   621  007D10                     u21:
   622  007D10  EF8D  F03E         	goto	l18
   623  007D14                     u20:
   624  007D14                     
   625                           ;main.c: 26:     {;main.c: 27:         PORTBbits.RB7 = 1;
   626  007D14  8E81               	bsf	129,7,c	;volatile
   627                           
   628                           ;main.c: 28:     }
   629  007D16  EF8E  F03E         	goto	l20
   630  007D1A                     l18:
   631                           
   632                           ;main.c: 30:     {;main.c: 31:         PORTBbits.RB7 = 0;
   633  007D1A  9E81               	bcf	129,7,c	;volatile
   634  007D1C                     l20:
   635  007D1C  0012               	return		;funcret
   636  007D1E                     __end_of_Motor_Relay:
   637                           	callstack 0
   638                           
   639 ;; *************** function _Led_Button *****************
   640 ;; Defined at:
   641 ;;		line 10 in file "main.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		None
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   655 ;;      Params:         0       0       0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0       0       0
   658 ;;      Totals:         0       0       0       0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used: 1
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text4
   669  007CEE                     __ptext4:
   670                           	callstack 0
   671  007CEE                     _Led_Button:
   672                           	callstack 30
   673  007CEE                     
   674                           ;main.c: 12:     if(PORTBbits.RB0 ==1)
   675  007CEE  A081               	btfss	129,0,c	;volatile
   676  007CF0  EF7C  F03E         	goto	u11
   677  007CF4  EF7E  F03E         	goto	u10
   678  007CF8                     u11:
   679  007CF8  EF81  F03E         	goto	l13
   680  007CFC                     u10:
   681  007CFC                     
   682                           ;main.c: 13:         {;main.c: 14:             PORTBbits.RB1 = 1;
   683  007CFC  8281               	bsf	129,1,c	;volatile
   684                           
   685                           ;main.c: 15:         }
   686  007CFE  EF82  F03E         	goto	l15
   687  007D02                     l13:
   688                           
   689                           ;main.c: 17:         {;main.c: 18:             PORTBbits.RB1 = 0;
   690  007D02  9281               	bcf	129,1,c	;volatile
   691  007D04                     l15:
   692  007D04  0012               	return		;funcret
   693  007D06                     __end_of_Led_Button:
   694                           	callstack 0
   695                           
   696 ;; *************** function _Display2_led_7Seg *****************
   697 ;; Defined at:
   698 ;;		line 70 in file "main.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  dl1             1    wreg     unsigned char 
   701 ;;  dl2             1    8[COMRAM] unsigned char 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  dl1             1   11[COMRAM] unsigned char 
   704 ;;  i               2   14[COMRAM] int 
   705 ;;  i               2   12[COMRAM] int 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   715 ;;      Params:         1       0       0       0       0       0       0
   716 ;;      Locals:         5       0       0       0       0       0       0
   717 ;;      Temps:          2       0       0       0       0       0       0
   718 ;;      Totals:         8       0       0       0       0       0       0
   719 ;;Total ram usage:        8 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; Hardware stack levels required when called: 1
   722 ;; This function calls:
   723 ;;		_clock_signal
   724 ;;		_latch_enable
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text5
   731  007DE4                     __ptext5:
   732                           	callstack 0
   733  007DE4                     _Display2_led_7Seg:
   734                           	callstack 29
   735                           
   736                           ;incstack = 0
   737                           ;Display2_led_7Seg@dl1 stored from wreg
   738  007DE4  6E0C               	movwf	Display2_led_7Seg@dl1^0,c
   739  007DE6                     
   740                           ;main.c: 70: void Display2_led_7Seg(unsigned char dl1,unsigned char dl2);main.c: 71: {;m
      +                          ain.c: 72:     for(int i=0;i<8;i++)
   741  007DE6  0E00               	movlw	0
   742  007DE8  6E0E               	movwf	(Display2_led_7Seg@i+1)^0,c
   743  007DEA  0E00               	movlw	0
   744  007DEC  6E0D               	movwf	Display2_led_7Seg@i^0,c
   745  007DEE                     l896:
   746                           
   747                           ;main.c: 73:     {;main.c: 74:         PORTCbits.RC1 = dl2>>i;
   748  007DEE  C00D  F00A         	movff	Display2_led_7Seg@i,??_Display2_led_7Seg
   749  007DF2  C009  F00B         	movff	Display2_led_7Seg@dl2,??_Display2_led_7Seg+1
   750  007DF6  2A0A               	incf	??_Display2_led_7Seg^0,f,c
   751  007DF8  EF00  F03F         	goto	u224
   752  007DFC                     u225:
   753  007DFC  90D8               	bcf	status,0,c
   754  007DFE  320B               	rrcf	(??_Display2_led_7Seg+1)^0,f,c
   755  007E00                     u224:
   756  007E00  2E0A               	decfsz	??_Display2_led_7Seg^0,f,c
   757  007E02  EFFE  F03E         	goto	u225
   758  007E06  460B               	rlncf	(??_Display2_led_7Seg+1)^0,f,c
   759  007E08  5082               	movf	130,w,c	;volatile
   760  007E0A  180B               	xorwf	(??_Display2_led_7Seg+1)^0,w,c
   761  007E0C  0BFD               	andlw	-3
   762  007E0E  180B               	xorwf	(??_Display2_led_7Seg+1)^0,w,c
   763  007E10  6E82               	movwf	130,c	;volatile
   764  007E12                     
   765                           ;main.c: 75:         clock_signal();
   766  007E12  EC69  F03E         	call	_clock_signal	;wreg free
   767  007E16                     
   768                           ;main.c: 76:     }
   769  007E16  4A0D               	infsnz	Display2_led_7Seg@i^0,f,c
   770  007E18  2A0E               	incf	(Display2_led_7Seg@i+1)^0,f,c
   771  007E1A  BE0E               	btfsc	(Display2_led_7Seg@i+1)^0,7,c
   772  007E1C  EF19  F03F         	goto	u231
   773  007E20  500E               	movf	(Display2_led_7Seg@i+1)^0,w,c
   774  007E22  E109               	bnz	u230
   775  007E24  0E08               	movlw	8
   776  007E26  5C0D               	subwf	Display2_led_7Seg@i^0,w,c
   777  007E28  A0D8               	btfss	status,0,c
   778  007E2A  EF19  F03F         	goto	u231
   779  007E2E  EF1B  F03F         	goto	u230
   780  007E32                     u231:
   781  007E32  EFF7  F03E         	goto	l896
   782  007E36                     u230:
   783  007E36                     
   784                           ;main.c: 77:     for(int i=0;i<8;i++)
   785  007E36  0E00               	movlw	0
   786  007E38  6E10               	movwf	(Display2_led_7Seg@i_210+1)^0,c
   787  007E3A  0E00               	movlw	0
   788  007E3C  6E0F               	movwf	Display2_led_7Seg@i_210^0,c
   789  007E3E                     l910:
   790                           
   791                           ;main.c: 78:     {;main.c: 79:         PORTCbits.RC1 = dl1>>i;
   792  007E3E  C00F  F00A         	movff	Display2_led_7Seg@i_210,??_Display2_led_7Seg
   793  007E42  C00C  F00B         	movff	Display2_led_7Seg@dl1,??_Display2_led_7Seg+1
   794  007E46  2A0A               	incf	??_Display2_led_7Seg^0,f,c
   795  007E48  EF28  F03F         	goto	u244
   796  007E4C                     u245:
   797  007E4C  90D8               	bcf	status,0,c
   798  007E4E  320B               	rrcf	(??_Display2_led_7Seg+1)^0,f,c
   799  007E50                     u244:
   800  007E50  2E0A               	decfsz	??_Display2_led_7Seg^0,f,c
   801  007E52  EF26  F03F         	goto	u245
   802  007E56  460B               	rlncf	(??_Display2_led_7Seg+1)^0,f,c
   803  007E58  5082               	movf	130,w,c	;volatile
   804  007E5A  180B               	xorwf	(??_Display2_led_7Seg+1)^0,w,c
   805  007E5C  0BFD               	andlw	-3
   806  007E5E  180B               	xorwf	(??_Display2_led_7Seg+1)^0,w,c
   807  007E60  6E82               	movwf	130,c	;volatile
   808  007E62                     
   809                           ;main.c: 80:         clock_signal();
   810  007E62  EC69  F03E         	call	_clock_signal	;wreg free
   811  007E66                     
   812                           ;main.c: 81:     }
   813  007E66  4A0F               	infsnz	Display2_led_7Seg@i_210^0,f,c
   814  007E68  2A10               	incf	(Display2_led_7Seg@i_210+1)^0,f,c
   815  007E6A  BE10               	btfsc	(Display2_led_7Seg@i_210+1)^0,7,c
   816  007E6C  EF41  F03F         	goto	u251
   817  007E70  5010               	movf	(Display2_led_7Seg@i_210+1)^0,w,c
   818  007E72  E109               	bnz	u250
   819  007E74  0E08               	movlw	8
   820  007E76  5C0F               	subwf	Display2_led_7Seg@i_210^0,w,c
   821  007E78  A0D8               	btfss	status,0,c
   822  007E7A  EF41  F03F         	goto	u251
   823  007E7E  EF43  F03F         	goto	u250
   824  007E82                     u251:
   825  007E82  EF1F  F03F         	goto	l910
   826  007E86                     u250:
   827  007E86                     
   828                           ;main.c: 82:     latch_enable();
   829  007E86  EC70  F03E         	call	_latch_enable	;wreg free
   830  007E8A  0012               	return		;funcret
   831  007E8C                     __end_of_Display2_led_7Seg:
   832                           	callstack 0
   833                           
   834 ;; *************** function _latch_enable *****************
   835 ;; Defined at:
   836 ;;		line 54 in file "main.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   850 ;;      Params:         0       0       0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0       0       0
   853 ;;      Totals:         0       0       0       0       0       0       0
   854 ;;Total ram usage:        0 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_Display2_led_7Seg
   860 ;;		_DisplayLed7Seg
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text6
   865  007CE0                     __ptext6:
   866                           	callstack 0
   867  007CE0                     _latch_enable:
   868                           	callstack 29
   869  007CE0                     
   870                           ;main.c: 56:     PORTCbits.RC2 = 1;
   871  007CE0  8482               	bsf	130,2,c	;volatile
   872  007CE2                     
   873                           ;main.c: 57:     _delay((unsigned long)((500)*(4000000/4000000.0)));
   874  007CE2  0EA6               	movlw	166
   875  007CE4                     u407:
   876  007CE4  2EE8               	decfsz	wreg,f,c
   877  007CE6  D7FE               	bra	u407
   878  007CE8  D000               	nop2	
   879  007CEA                     
   880                           ;main.c: 58:     PORTCbits.RC2 = 0;
   881  007CEA  9482               	bcf	130,2,c	;volatile
   882  007CEC  0012               	return		;funcret
   883  007CEE                     __end_of_latch_enable:
   884                           	callstack 0
   885                           
   886 ;; *************** function _clock_signal *****************
   887 ;; Defined at:
   888 ;;		line 48 in file "main.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   902 ;;      Params:         0       0       0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0
   905 ;;      Totals:         0       0       0       0       0       0       0
   906 ;;Total ram usage:        0 bytes
   907 ;; Hardware stack levels used: 1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_Display2_led_7Seg
   912 ;;		_DisplayLed7Seg
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text7
   917  007CD2                     __ptext7:
   918                           	callstack 0
   919  007CD2                     _clock_signal:
   920                           	callstack 29
   921  007CD2                     
   922                           ;main.c: 50:     PORTCbits.RC0 = 1;
   923  007CD2  8082               	bsf	130,0,c	;volatile
   924  007CD4                     
   925                           ;main.c: 51:     _delay((unsigned long)((500)*(4000000/4000000.0)));
   926  007CD4  0EA6               	movlw	166
   927  007CD6                     u417:
   928  007CD6  2EE8               	decfsz	wreg,f,c
   929  007CD8  D7FE               	bra	u417
   930  007CDA  D000               	nop2	
   931  007CDC                     
   932                           ;main.c: 52:     PORTCbits.RC0 = 0;
   933  007CDC  9082               	bcf	130,0,c	;volatile
   934  007CDE  0012               	return		;funcret
   935  007CE0                     __end_of_clock_signal:
   936                           	callstack 0
   937  0000                     
   938                           	psect	rparam
   939  0000                     
   940                           	psect	idloc
   941                           
   942                           ;Config register IDLOC0 @ 0x200000
   943                           ;	unspecified, using default values
   944  200000                     	org	2097152
   945  200000  FF                 	db	255
   946                           
   947                           ;Config register IDLOC1 @ 0x200001
   948                           ;	unspecified, using default values
   949  200001                     	org	2097153
   950  200001  FF                 	db	255
   951                           
   952                           ;Config register IDLOC2 @ 0x200002
   953                           ;	unspecified, using default values
   954  200002                     	org	2097154
   955  200002  FF                 	db	255
   956                           
   957                           ;Config register IDLOC3 @ 0x200003
   958                           ;	unspecified, using default values
   959  200003                     	org	2097155
   960  200003  FF                 	db	255
   961                           
   962                           ;Config register IDLOC4 @ 0x200004
   963                           ;	unspecified, using default values
   964  200004                     	org	2097156
   965  200004  FF                 	db	255
   966                           
   967                           ;Config register IDLOC5 @ 0x200005
   968                           ;	unspecified, using default values
   969  200005                     	org	2097157
   970  200005  FF                 	db	255
   971                           
   972                           ;Config register IDLOC6 @ 0x200006
   973                           ;	unspecified, using default values
   974  200006                     	org	2097158
   975  200006  FF                 	db	255
   976                           
   977                           ;Config register IDLOC7 @ 0x200007
   978                           ;	unspecified, using default values
   979  200007                     	org	2097159
   980  200007  FF                 	db	255
   981                           
   982                           	psect	config
   983                           
   984                           ; Padding undefined space
   985  300000                     	org	3145728
   986  300000  FF                 	db	255
   987                           
   988                           ;Config register CONFIG1H @ 0x300001
   989                           ;	Oscillator Selection bits
   990                           ;	OSC = HS, HS oscillator
   991                           ;	Fail-Safe Clock Monitor Enable bit
   992                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   993                           ;	Internal/External Oscillator Switchover bit
   994                           ;	IESO = OFF, Oscillator Switchover mode disabled
   995  300001                     	org	3145729
   996  300001  02                 	db	2
   997                           
   998                           ;Config register CONFIG2L @ 0x300002
   999                           ;	Power-up Timer Enable bit
  1000                           ;	PWRT = ON, PWRT enabled
  1001                           ;	Brown-out Reset Enable bits
  1002                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1003                           ;	Brown Out Reset Voltage bits
  1004                           ;	BORV = 3, Minimum setting
  1005  300002                     	org	3145730
  1006  300002  18                 	db	24
  1007                           
  1008                           ;Config register CONFIG2H @ 0x300003
  1009                           ;	Watchdog Timer Enable bit
  1010                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1011                           ;	Watchdog Timer Postscale Select bits
  1012                           ;	WDTPS = 32768, 1:32768
  1013  300003                     	org	3145731
  1014  300003  1E                 	db	30
  1015                           
  1016                           ; Padding undefined space
  1017  300004                     	org	3145732
  1018  300004  FF                 	db	255
  1019                           
  1020                           ;Config register CONFIG3H @ 0x300005
  1021                           ;	CCP2 MUX bit
  1022                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1023                           ;	PORTB A/D Enable bit
  1024                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1025                           ;	Low-Power Timer1 Oscillator Enable bit
  1026                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1027                           ;	MCLR Pin Enable bit
  1028                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1029  300005                     	org	3145733
  1030  300005  81                 	db	129
  1031                           
  1032                           ;Config register CONFIG4L @ 0x300006
  1033                           ;	Stack Full/Underflow Reset Enable bit
  1034                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1035                           ;	Single-Supply ICSP Enable bit
  1036                           ;	LVP = OFF, Single-Supply ICSP disabled
  1037                           ;	Extended Instruction Set Enable bit
  1038                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1039                           ;	Background Debugger Enable bit
  1040                           ;	DEBUG = 0x1, unprogrammed default
  1041  300006                     	org	3145734
  1042  300006  81                 	db	129
  1043                           
  1044                           ; Padding undefined space
  1045  300007                     	org	3145735
  1046  300007  FF                 	db	255
  1047                           
  1048                           ;Config register CONFIG5L @ 0x300008
  1049                           ;	Code Protection bit
  1050                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1051                           ;	Code Protection bit
  1052                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1053                           ;	Code Protection bit
  1054                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1055                           ;	Code Protection bit
  1056                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1057  300008                     	org	3145736
  1058  300008  0F                 	db	15
  1059                           
  1060                           ;Config register CONFIG5H @ 0x300009
  1061                           ;	Boot Block Code Protection bit
  1062                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1063                           ;	Data EEPROM Code Protection bit
  1064                           ;	CPD = OFF, Data EEPROM not code-protected
  1065  300009                     	org	3145737
  1066  300009  C0                 	db	192
  1067                           
  1068                           ;Config register CONFIG6L @ 0x30000A
  1069                           ;	Write Protection bit
  1070                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1071                           ;	Write Protection bit
  1072                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1073                           ;	Write Protection bit
  1074                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1075                           ;	Write Protection bit
  1076                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1077  30000A                     	org	3145738
  1078  30000A  0F                 	db	15
  1079                           
  1080                           ;Config register CONFIG6H @ 0x30000B
  1081                           ;	Configuration Register Write Protection bit
  1082                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1083                           ;	Boot Block Write Protection bit
  1084                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1085                           ;	Data EEPROM Write Protection bit
  1086                           ;	WRTD = OFF, Data EEPROM not write-protected
  1087  30000B                     	org	3145739
  1088  30000B  E0                 	db	224
  1089                           
  1090                           ;Config register CONFIG7L @ 0x30000C
  1091                           ;	Table Read Protection bit
  1092                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1093                           ;	Table Read Protection bit
  1094                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1095                           ;	Table Read Protection bit
  1096                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1097                           ;	Table Read Protection bit
  1098                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1099  30000C                     	org	3145740
  1100  30000C  0F                 	db	15
  1101                           
  1102                           ;Config register CONFIG7H @ 0x30000D
  1103                           ;	Boot Block Table Read Protection bit
  1104                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1105  30000D                     	org	3145741
  1106  30000D  40                 	db	64
  1107                           tosu	equ	0xFFF
  1108                           tosh	equ	0xFFE
  1109                           tosl	equ	0xFFD
  1110                           stkptr	equ	0xFFC
  1111                           pclatu	equ	0xFFB
  1112                           pclath	equ	0xFFA
  1113                           pcl	equ	0xFF9
  1114                           tblptru	equ	0xFF8
  1115                           tblptrh	equ	0xFF7
  1116                           tblptrl	equ	0xFF6
  1117                           tablat	equ	0xFF5
  1118                           prodh	equ	0xFF4
  1119                           prodl	equ	0xFF3
  1120                           indf0	equ	0xFEF
  1121                           postinc0	equ	0xFEE
  1122                           postdec0	equ	0xFED
  1123                           preinc0	equ	0xFEC
  1124                           plusw0	equ	0xFEB
  1125                           fsr0h	equ	0xFEA
  1126                           fsr0l	equ	0xFE9
  1127                           wreg	equ	0xFE8
  1128                           indf1	equ	0xFE7
  1129                           postinc1	equ	0xFE6
  1130                           postdec1	equ	0xFE5
  1131                           preinc1	equ	0xFE4
  1132                           plusw1	equ	0xFE3
  1133                           fsr1h	equ	0xFE2
  1134                           fsr1l	equ	0xFE1
  1135                           bsr	equ	0xFE0
  1136                           indf2	equ	0xFDF
  1137                           postinc2	equ	0xFDE
  1138                           postdec2	equ	0xFDD
  1139                           preinc2	equ	0xFDC
  1140                           plusw2	equ	0xFDB
  1141                           fsr2h	equ	0xFDA
  1142                           fsr2l	equ	0xFD9
  1143                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20      30
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Display2_led_7Seg
    _Display2_led_7Seg->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1246
                                             16 COMRAM     4     4      0
                  _Display2_led_7Seg
                         _Led_Button
                        _Motor_Relay
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Motor_Relay                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Led_Button                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display2_led_7Seg                                    8     7      1     256
                                              8 COMRAM     8     7      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                       _clock_signal
                       _latch_enable
 ---------------------------------------------------------------------------------
 (2) _latch_enable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clock_signal                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display2_led_7Seg
     ___awdiv (ARG)
     ___awmod (ARG)
     _clock_signal (ARG)
     _latch_enable (ARG)
   _Led_Button
   _Motor_Relay
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     14      1E       1       23.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      15        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 10 09:09:21 2021

            ??_clock_signal 0001                          l20 7D1C                          l13 7D02  
                        l15 7D04                          l40 7E8A                          l25 7CDE  
                        l18 7D1A                          l28 7CEC                          u10 7CFC  
                        u11 7CF8                          u20 7D14                          u21 7D10  
              ___awdiv@sign 0006                         l284 7FFE                         l297 7F3A  
                       l730 7CDC                         l732 7CE0                         l900 7E16  
                       l740 7CFC                         l726 7CD2                         l734 7CE2  
                       l910 7E3E                         l902 7E1A                         l742 7D06  
                       l728 7CD4                         l736 7CEA                         l912 7E62  
                       l904 7E36                         l744 7D14                         l920 7F3C  
                       l914 7E66                         l738 7CEE                         l930 7F68  
                       l922 7F40                         l916 7E6A                         l940 7F96  
                       l932 7F70                         l924 7F4E                         l918 7E86  
                       l950 7FD0                         l942 7F9E                         l934 7F74  
                       l926 7F56                         l960 7FF6                         l952 7FD2  
                       l944 7FAC                         l936 7F7C                         l928 7F5A  
                       l890 7DE6                         l954 7FD8                         l946 7FB2  
                       l938 7F8E                         l970 7EA6                         l948 7FC8  
                       l956 7FDE                         l980 7EDA                         l972 7EAA  
                       l964 7E8C                         l958 7FEE                         l990 7F14  
                       l982 7EE2                         l974 7EB8                         l966 7E90  
                       l896 7DEE                         l984 7EF0                         l992 7F1A  
                       l976 7EC0                         l968 7E9E                         l898 7E12  
                       l994 7F2A                         l986 7F06                         l978 7ED2  
                       l996 7F32                         l988 7F0E                         u300 7FC8  
                       u301 7FC4                         u230 7E36                         u310 7FEE  
                       u231 7E32                         u311 7FEA                         u224 7E00  
                       u320 7E9E                         u225 7DFC                         u321 7E9A  
                       u250 7E86                         u330 7EB8                         u251 7E82  
                       u331 7EB4                         u244 7E50                         u260 7F4E  
                       u340 7ED2                         u245 7E4C                         u261 7F4A  
                       u341 7ECE                         u270 7F68                         u350 7EF0  
                       u407 7CE4                         u271 7F64                         u351 7EEC  
                       u280 7F8E                         u360 7F06                         u417 7CD6  
                       u281 7F8A                         u361 7F02                         u290 7FAC  
                       u370 7F2A                         u291 7FA8                         u371 7F26  
                       u380 7DDC                         u381 7DD8                         u397 7DB0  
                       _dem 0015                ___awmod@sign 0006                         wreg 000FE8  
                      l1000 7D44                        l1010 7D5C                        l1002 7D4C  
                      l1012 7DA6                        l1004 7D50                        l1014 7DBC  
                      l1016 7DC0          Display2_led_7Seg@i 000D                        _main 7D44  
                      indf2 000FDF                        fsr1l 000FE1                        fsr2l 000FD9  
                      start 0000                ___param_bank 000000                       ?_main 0001  
                _Led_Button 7CEE             __end_of___awdiv 8000             __end_of___awmod 7F3C  
           ___awdiv@divisor 0003             ___awdiv@counter 0005               ?_latch_enable 0001  
                     _TRISB 000F93                       _TRISC 000F94                       main@i 0013  
                     tablat 000FF5                       status 000FD8             __initialization 7D1E  
              __end_of_main 7DE4                      ??_main 0011              ??_latch_enable 0001  
             __activetblptr 000000            ___awdiv@dividend 0001        __end_of_clock_signal 7CE0  
      Display2_led_7Seg@dl1 000C        Display2_led_7Seg@dl2 0009               ??_Motor_Relay 0001  
                 ??___awdiv 0005                   ??___awmod 0005            ___awdiv@quotient 0007  
           ___awmod@divisor 0003                      isa$std 000001             ___awmod@counter 0005  
               ?_Led_Button 0001                __pdataCOMRAM 0015                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                  __accesstop 0080  
   __end_of__initialization 7D3E               ___rparam_used 000001              __pcstackCOMRAM 0001  
       __end_of_Motor_Relay 7D1E         __size_of_Led_Button 0018        __end_of_latch_enable 7CEE  
     __size_of_clock_signal 000E                     __Hparam 0000                     __Lparam 0000  
               _Motor_Relay 7D06                     ___awdiv 7F3C                     ___awmod 7E8C  
              _clock_signal 7CD2                     __pcinit 7D1E                     __ramtop 0600  
                   __ptext0 7D44                     __ptext1 7E8C                     __ptext2 7F3C  
                   __ptext3 7D06                     __ptext4 7CEE                     __ptext5 7DE4  
                   __ptext6 7CE0                     __ptext7 7CD2            ___awmod@dividend 0001  
      end_of_initialization 7D3E                     postdec1 000FE5                     postinc0 000FEE  
              ??_Led_Button 0001                   _PORTBbits 000F81                   _PORTCbits 000F82  
     __size_of_latch_enable 000E          __end_of_Led_Button 7D06               __pidataCOMRAM 7CC8  
              _latch_enable 7CE0         start_initialization 7D1E           _Display2_led_7Seg 7DE4  
        ?_Display2_led_7Seg 0009         ??_Display2_led_7Seg 000A   __end_of_Display2_led_7Seg 7E8C  
              ?_Motor_Relay 0001                    ?___awdiv 0001                    ?___awmod 0001  
    Display2_led_7Seg@i_210 000F                   copy_data0 7D32  __size_of_Display2_led_7Seg 00A8  
                  __Hrparam 0000                    __Lrparam 0000            __size_of___awdiv 00C4  
          __size_of___awmod 00B0               __size_of_main 00A0                    isa$xinst 000000  
      __size_of_Motor_Relay 0018               ?_clock_signal 0001  
